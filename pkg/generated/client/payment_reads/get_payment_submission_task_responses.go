// Code generated by go-swagger; DO NOT EDIT.

package payment_reads

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/form3tech-oss/go-form3/v7/pkg/generated/models"
)

// GetPaymentSubmissionTaskReader is a Reader for the GetPaymentSubmissionTask structure.
type GetPaymentSubmissionTaskReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPaymentSubmissionTaskReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetPaymentSubmissionTaskOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetPaymentSubmissionTaskOK creates a GetPaymentSubmissionTaskOK with default headers values
func NewGetPaymentSubmissionTaskOK() *GetPaymentSubmissionTaskOK {
	return &GetPaymentSubmissionTaskOK{}
}

/*
GetPaymentSubmissionTaskOK handles this case with default header values.

Payment Submission Task Details details
*/
type GetPaymentSubmissionTaskOK struct {

	//Payload

	// isStream: false
	*models.PaymentSubmissionTaskDetailsResponse
}

func (o *GetPaymentSubmissionTaskOK) Error() string {
	return fmt.Sprintf("[GET /transaction/payments/{id}/submissions/{submissionId}/tasks/{taskId}][%d] getPaymentSubmissionTaskOK", 200)
}

func (o *GetPaymentSubmissionTaskOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.PaymentSubmissionTaskDetailsResponse = new(models.PaymentSubmissionTaskDetailsResponse)

	// response payload

	if err := consumer.Consume(response.Body(), o.PaymentSubmissionTaskDetailsResponse); err != nil && err != io.EOF {
		return err
	}

	return nil
}
