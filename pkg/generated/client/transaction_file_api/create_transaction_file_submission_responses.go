// Code generated by go-swagger; DO NOT EDIT.

package transaction_file_api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/form3tech-oss/go-form3/v7/pkg/generated/models"
)

// CreateTransactionFileSubmissionReader is a Reader for the CreateTransactionFileSubmission structure.
type CreateTransactionFileSubmissionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateTransactionFileSubmissionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewCreateTransactionFileSubmissionCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewCreateTransactionFileSubmissionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewCreateTransactionFileSubmissionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewCreateTransactionFileSubmissionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewCreateTransactionFileSubmissionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewCreateTransactionFileSubmissionConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewCreateTransactionFileSubmissionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateTransactionFileSubmissionCreated creates a CreateTransactionFileSubmissionCreated with default headers values
func NewCreateTransactionFileSubmissionCreated() *CreateTransactionFileSubmissionCreated {
	return &CreateTransactionFileSubmissionCreated{}
}

/*
CreateTransactionFileSubmissionCreated handles this case with default header values.

Transaction File Submission Response
*/
type CreateTransactionFileSubmissionCreated struct {

	//Payload

	// isStream: false
	*models.TransactionFileSubmissionResponse
}

// IsSuccess returns true when this create transaction file submission created response has a 2xx status code
func (o *CreateTransactionFileSubmissionCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create transaction file submission created response has a 3xx status code
func (o *CreateTransactionFileSubmissionCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create transaction file submission created response has a 4xx status code
func (o *CreateTransactionFileSubmissionCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create transaction file submission created response has a 5xx status code
func (o *CreateTransactionFileSubmissionCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create transaction file submission created response a status code equal to that given
func (o *CreateTransactionFileSubmissionCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create transaction file submission created response
func (o *CreateTransactionFileSubmissionCreated) Code() int {
	return 201
}

func (o *CreateTransactionFileSubmissionCreated) Error() string {
	return fmt.Sprintf("[POST /files/transactions/{transaction_file_id}/submissions][%d] createTransactionFileSubmissionCreated", 201)
}

func (o *CreateTransactionFileSubmissionCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.TransactionFileSubmissionResponse = new(models.TransactionFileSubmissionResponse)

	// response payload

	if err := consumer.Consume(response.Body(), o.TransactionFileSubmissionResponse); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateTransactionFileSubmissionBadRequest creates a CreateTransactionFileSubmissionBadRequest with default headers values
func NewCreateTransactionFileSubmissionBadRequest() *CreateTransactionFileSubmissionBadRequest {
	return &CreateTransactionFileSubmissionBadRequest{}
}

/*
CreateTransactionFileSubmissionBadRequest handles this case with default header values.

Bad Request
*/
type CreateTransactionFileSubmissionBadRequest struct {

	//Payload

	// isStream: false
	*models.APIError
}

// IsSuccess returns true when this create transaction file submission bad request response has a 2xx status code
func (o *CreateTransactionFileSubmissionBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create transaction file submission bad request response has a 3xx status code
func (o *CreateTransactionFileSubmissionBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create transaction file submission bad request response has a 4xx status code
func (o *CreateTransactionFileSubmissionBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create transaction file submission bad request response has a 5xx status code
func (o *CreateTransactionFileSubmissionBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create transaction file submission bad request response a status code equal to that given
func (o *CreateTransactionFileSubmissionBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create transaction file submission bad request response
func (o *CreateTransactionFileSubmissionBadRequest) Code() int {
	return 400
}

func (o *CreateTransactionFileSubmissionBadRequest) Error() string {
	return fmt.Sprintf("[POST /files/transactions/{transaction_file_id}/submissions][%d] createTransactionFileSubmissionBadRequest", 400)
}

func (o *CreateTransactionFileSubmissionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateTransactionFileSubmissionUnauthorized creates a CreateTransactionFileSubmissionUnauthorized with default headers values
func NewCreateTransactionFileSubmissionUnauthorized() *CreateTransactionFileSubmissionUnauthorized {
	return &CreateTransactionFileSubmissionUnauthorized{}
}

/*
CreateTransactionFileSubmissionUnauthorized handles this case with default header values.

Unauthorized
*/
type CreateTransactionFileSubmissionUnauthorized struct {

	//Payload

	// isStream: false
	*models.APIError
}

// IsSuccess returns true when this create transaction file submission unauthorized response has a 2xx status code
func (o *CreateTransactionFileSubmissionUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create transaction file submission unauthorized response has a 3xx status code
func (o *CreateTransactionFileSubmissionUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create transaction file submission unauthorized response has a 4xx status code
func (o *CreateTransactionFileSubmissionUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create transaction file submission unauthorized response has a 5xx status code
func (o *CreateTransactionFileSubmissionUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create transaction file submission unauthorized response a status code equal to that given
func (o *CreateTransactionFileSubmissionUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create transaction file submission unauthorized response
func (o *CreateTransactionFileSubmissionUnauthorized) Code() int {
	return 401
}

func (o *CreateTransactionFileSubmissionUnauthorized) Error() string {
	return fmt.Sprintf("[POST /files/transactions/{transaction_file_id}/submissions][%d] createTransactionFileSubmissionUnauthorized", 401)
}

func (o *CreateTransactionFileSubmissionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateTransactionFileSubmissionForbidden creates a CreateTransactionFileSubmissionForbidden with default headers values
func NewCreateTransactionFileSubmissionForbidden() *CreateTransactionFileSubmissionForbidden {
	return &CreateTransactionFileSubmissionForbidden{}
}

/*
CreateTransactionFileSubmissionForbidden handles this case with default header values.

Forbidden
*/
type CreateTransactionFileSubmissionForbidden struct {

	//Payload

	// isStream: false
	*models.APIError
}

// IsSuccess returns true when this create transaction file submission forbidden response has a 2xx status code
func (o *CreateTransactionFileSubmissionForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create transaction file submission forbidden response has a 3xx status code
func (o *CreateTransactionFileSubmissionForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create transaction file submission forbidden response has a 4xx status code
func (o *CreateTransactionFileSubmissionForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create transaction file submission forbidden response has a 5xx status code
func (o *CreateTransactionFileSubmissionForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create transaction file submission forbidden response a status code equal to that given
func (o *CreateTransactionFileSubmissionForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create transaction file submission forbidden response
func (o *CreateTransactionFileSubmissionForbidden) Code() int {
	return 403
}

func (o *CreateTransactionFileSubmissionForbidden) Error() string {
	return fmt.Sprintf("[POST /files/transactions/{transaction_file_id}/submissions][%d] createTransactionFileSubmissionForbidden", 403)
}

func (o *CreateTransactionFileSubmissionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateTransactionFileSubmissionNotFound creates a CreateTransactionFileSubmissionNotFound with default headers values
func NewCreateTransactionFileSubmissionNotFound() *CreateTransactionFileSubmissionNotFound {
	return &CreateTransactionFileSubmissionNotFound{}
}

/*
CreateTransactionFileSubmissionNotFound handles this case with default header values.

Not Found
*/
type CreateTransactionFileSubmissionNotFound struct {

	//Payload

	// isStream: false
	*models.APIError
}

// IsSuccess returns true when this create transaction file submission not found response has a 2xx status code
func (o *CreateTransactionFileSubmissionNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create transaction file submission not found response has a 3xx status code
func (o *CreateTransactionFileSubmissionNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create transaction file submission not found response has a 4xx status code
func (o *CreateTransactionFileSubmissionNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create transaction file submission not found response has a 5xx status code
func (o *CreateTransactionFileSubmissionNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create transaction file submission not found response a status code equal to that given
func (o *CreateTransactionFileSubmissionNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create transaction file submission not found response
func (o *CreateTransactionFileSubmissionNotFound) Code() int {
	return 404
}

func (o *CreateTransactionFileSubmissionNotFound) Error() string {
	return fmt.Sprintf("[POST /files/transactions/{transaction_file_id}/submissions][%d] createTransactionFileSubmissionNotFound", 404)
}

func (o *CreateTransactionFileSubmissionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateTransactionFileSubmissionConflict creates a CreateTransactionFileSubmissionConflict with default headers values
func NewCreateTransactionFileSubmissionConflict() *CreateTransactionFileSubmissionConflict {
	return &CreateTransactionFileSubmissionConflict{}
}

/*
CreateTransactionFileSubmissionConflict handles this case with default header values.

Transaction File Submission Conflict
*/
type CreateTransactionFileSubmissionConflict struct {

	//Payload

	// isStream: false
	*models.APIError
}

// IsSuccess returns true when this create transaction file submission conflict response has a 2xx status code
func (o *CreateTransactionFileSubmissionConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create transaction file submission conflict response has a 3xx status code
func (o *CreateTransactionFileSubmissionConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create transaction file submission conflict response has a 4xx status code
func (o *CreateTransactionFileSubmissionConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this create transaction file submission conflict response has a 5xx status code
func (o *CreateTransactionFileSubmissionConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this create transaction file submission conflict response a status code equal to that given
func (o *CreateTransactionFileSubmissionConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the create transaction file submission conflict response
func (o *CreateTransactionFileSubmissionConflict) Code() int {
	return 409
}

func (o *CreateTransactionFileSubmissionConflict) Error() string {
	return fmt.Sprintf("[POST /files/transactions/{transaction_file_id}/submissions][%d] createTransactionFileSubmissionConflict", 409)
}

func (o *CreateTransactionFileSubmissionConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateTransactionFileSubmissionInternalServerError creates a CreateTransactionFileSubmissionInternalServerError with default headers values
func NewCreateTransactionFileSubmissionInternalServerError() *CreateTransactionFileSubmissionInternalServerError {
	return &CreateTransactionFileSubmissionInternalServerError{}
}

/*
CreateTransactionFileSubmissionInternalServerError handles this case with default header values.

Internal Server Error
*/
type CreateTransactionFileSubmissionInternalServerError struct {

	//Payload

	// isStream: false
	*models.APIError
}

// IsSuccess returns true when this create transaction file submission internal server error response has a 2xx status code
func (o *CreateTransactionFileSubmissionInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create transaction file submission internal server error response has a 3xx status code
func (o *CreateTransactionFileSubmissionInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create transaction file submission internal server error response has a 4xx status code
func (o *CreateTransactionFileSubmissionInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create transaction file submission internal server error response has a 5xx status code
func (o *CreateTransactionFileSubmissionInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create transaction file submission internal server error response a status code equal to that given
func (o *CreateTransactionFileSubmissionInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create transaction file submission internal server error response
func (o *CreateTransactionFileSubmissionInternalServerError) Code() int {
	return 500
}

func (o *CreateTransactionFileSubmissionInternalServerError) Error() string {
	return fmt.Sprintf("[POST /files/transactions/{transaction_file_id}/submissions][%d] createTransactionFileSubmissionInternalServerError", 500)
}

func (o *CreateTransactionFileSubmissionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}
