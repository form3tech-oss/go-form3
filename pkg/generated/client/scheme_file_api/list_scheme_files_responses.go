// Code generated by go-swagger; DO NOT EDIT.

package scheme_file_api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/form3tech-oss/go-form3/v7/pkg/generated/models"
)

// ListSchemeFilesReader is a Reader for the ListSchemeFiles structure.
type ListSchemeFilesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListSchemeFilesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListSchemeFilesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewListSchemeFilesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewListSchemeFilesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewListSchemeFilesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewListSchemeFilesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListSchemeFilesOK creates a ListSchemeFilesOK with default headers values
func NewListSchemeFilesOK() *ListSchemeFilesOK {
	return &ListSchemeFilesOK{}
}

/*
ListSchemeFilesOK handles this case with default header values.

List of scheme files
*/
type ListSchemeFilesOK struct {

	//Payload

	// isStream: false
	*models.ListSchemeFilesResponse
}

// IsSuccess returns true when this list scheme files o k response has a 2xx status code
func (o *ListSchemeFilesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list scheme files o k response has a 3xx status code
func (o *ListSchemeFilesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list scheme files o k response has a 4xx status code
func (o *ListSchemeFilesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list scheme files o k response has a 5xx status code
func (o *ListSchemeFilesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list scheme files o k response a status code equal to that given
func (o *ListSchemeFilesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list scheme files o k response
func (o *ListSchemeFilesOK) Code() int {
	return 200
}

func (o *ListSchemeFilesOK) Error() string {
	return fmt.Sprintf("[GET /files/schemefiles][%d] listSchemeFilesOK", 200)
}

func (o *ListSchemeFilesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.ListSchemeFilesResponse = new(models.ListSchemeFilesResponse)

	// response payload

	if err := consumer.Consume(response.Body(), o.ListSchemeFilesResponse); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListSchemeFilesBadRequest creates a ListSchemeFilesBadRequest with default headers values
func NewListSchemeFilesBadRequest() *ListSchemeFilesBadRequest {
	return &ListSchemeFilesBadRequest{}
}

/*
ListSchemeFilesBadRequest handles this case with default header values.

Reports bad request
*/
type ListSchemeFilesBadRequest struct {

	//Payload

	// isStream: false
	*models.APIError
}

// IsSuccess returns true when this list scheme files bad request response has a 2xx status code
func (o *ListSchemeFilesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list scheme files bad request response has a 3xx status code
func (o *ListSchemeFilesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list scheme files bad request response has a 4xx status code
func (o *ListSchemeFilesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list scheme files bad request response has a 5xx status code
func (o *ListSchemeFilesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list scheme files bad request response a status code equal to that given
func (o *ListSchemeFilesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list scheme files bad request response
func (o *ListSchemeFilesBadRequest) Code() int {
	return 400
}

func (o *ListSchemeFilesBadRequest) Error() string {
	return fmt.Sprintf("[GET /files/schemefiles][%d] listSchemeFilesBadRequest", 400)
}

func (o *ListSchemeFilesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListSchemeFilesUnauthorized creates a ListSchemeFilesUnauthorized with default headers values
func NewListSchemeFilesUnauthorized() *ListSchemeFilesUnauthorized {
	return &ListSchemeFilesUnauthorized{}
}

/*
ListSchemeFilesUnauthorized handles this case with default header values.

Unauthorized
*/
type ListSchemeFilesUnauthorized struct {

	//Payload

	// isStream: false
	*models.APIError
}

// IsSuccess returns true when this list scheme files unauthorized response has a 2xx status code
func (o *ListSchemeFilesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list scheme files unauthorized response has a 3xx status code
func (o *ListSchemeFilesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list scheme files unauthorized response has a 4xx status code
func (o *ListSchemeFilesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list scheme files unauthorized response has a 5xx status code
func (o *ListSchemeFilesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list scheme files unauthorized response a status code equal to that given
func (o *ListSchemeFilesUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list scheme files unauthorized response
func (o *ListSchemeFilesUnauthorized) Code() int {
	return 401
}

func (o *ListSchemeFilesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /files/schemefiles][%d] listSchemeFilesUnauthorized", 401)
}

func (o *ListSchemeFilesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListSchemeFilesForbidden creates a ListSchemeFilesForbidden with default headers values
func NewListSchemeFilesForbidden() *ListSchemeFilesForbidden {
	return &ListSchemeFilesForbidden{}
}

/*
ListSchemeFilesForbidden handles this case with default header values.

Forbidden
*/
type ListSchemeFilesForbidden struct {

	//Payload

	// isStream: false
	*models.APIError
}

// IsSuccess returns true when this list scheme files forbidden response has a 2xx status code
func (o *ListSchemeFilesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list scheme files forbidden response has a 3xx status code
func (o *ListSchemeFilesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list scheme files forbidden response has a 4xx status code
func (o *ListSchemeFilesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list scheme files forbidden response has a 5xx status code
func (o *ListSchemeFilesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list scheme files forbidden response a status code equal to that given
func (o *ListSchemeFilesForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list scheme files forbidden response
func (o *ListSchemeFilesForbidden) Code() int {
	return 403
}

func (o *ListSchemeFilesForbidden) Error() string {
	return fmt.Sprintf("[GET /files/schemefiles][%d] listSchemeFilesForbidden", 403)
}

func (o *ListSchemeFilesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListSchemeFilesInternalServerError creates a ListSchemeFilesInternalServerError with default headers values
func NewListSchemeFilesInternalServerError() *ListSchemeFilesInternalServerError {
	return &ListSchemeFilesInternalServerError{}
}

/*
ListSchemeFilesInternalServerError handles this case with default header values.

Internal Server Error
*/
type ListSchemeFilesInternalServerError struct {

	//Payload

	// isStream: false
	*models.APIError
}

// IsSuccess returns true when this list scheme files internal server error response has a 2xx status code
func (o *ListSchemeFilesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list scheme files internal server error response has a 3xx status code
func (o *ListSchemeFilesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list scheme files internal server error response has a 4xx status code
func (o *ListSchemeFilesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list scheme files internal server error response has a 5xx status code
func (o *ListSchemeFilesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list scheme files internal server error response a status code equal to that given
func (o *ListSchemeFilesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the list scheme files internal server error response
func (o *ListSchemeFilesInternalServerError) Code() int {
	return 500
}

func (o *ListSchemeFilesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /files/schemefiles][%d] listSchemeFilesInternalServerError", 500)
}

func (o *ListSchemeFilesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}
