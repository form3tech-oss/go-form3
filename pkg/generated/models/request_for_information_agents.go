// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"log"
	"strconv"

	"github.com/form3tech-oss/go-form3/v6/pkg/client"
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// RequestForInformationAgents request for information agents
// swagger:model RequestForInformationAgents
type RequestForInformationAgents []*RequestForInformationAgentsItems0

// Validate validates this request for information agents
func (m RequestForInformationAgents) Validate(formats strfmt.Registry) error {
	var res []error

	for i := 0; i < len(m); i++ {
		if swag.IsZero(m[i]) { // not required
			continue
		}

		if m[i] != nil {
			if err := m[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName(strconv.Itoa(i))
				}
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RequestForInformationAgents) Json() string {
	json, err := json.MarshalIndent(m, "  ", "  ")
	if err != nil {
		log.Fatal(err)
	}
	return string(json)
}

// RequestForInformationAgentsItems0 request for information agents items0
// swagger:model RequestForInformationAgentsItems0
type RequestForInformationAgentsItems0 struct {

	// identification
	Identification struct {
		RequestForInformationAgentBankID

		// bank ids
		BankIds []*RequestForInformationAgentBankID `json:"bank_ids,omitempty"`
	} `json:"identification,omitempty"`

	// role
	Role string `json:"role,omitempty"`
}

func RequestForInformationAgentsItems0WithDefaults(defaults client.Defaults) *RequestForInformationAgentsItems0 {
	return &RequestForInformationAgentsItems0{

		// TODO Identification: RequestForInformationAgentsItems0,

		Role: defaults.GetString("RequestForInformationAgentsItems0", "role"),
	}
}

func (m *RequestForInformationAgentsItems0) WithRole(role string) *RequestForInformationAgentsItems0 {

	m.Role = role

	return m
}

// Validate validates this request for information agents items0
func (m *RequestForInformationAgentsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateIdentification(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RequestForInformationAgentsItems0) validateIdentification(formats strfmt.Registry) error {

	if swag.IsZero(m.Identification) { // not required
		return nil
	}

	for i := 0; i < len(m.Identification.BankIds); i++ {
		if swag.IsZero(m.Identification.BankIds[i]) { // not required
			continue
		}

		if m.Identification.BankIds[i] != nil {
			if err := m.Identification.BankIds[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("identification" + "." + "bank_ids" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *RequestForInformationAgentsItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RequestForInformationAgentsItems0) UnmarshalBinary(b []byte) error {
	var res RequestForInformationAgentsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
func (m *RequestForInformationAgentsItems0) Json() string {
	json, err := json.MarshalIndent(m, "  ", "  ")
	if err != nil {
		log.Fatal(err)
	}
	return string(json)
}
