// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"log"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// ReportRequestUserIDCode report request user Id code
// swagger:model ReportRequestUserIdCode
type ReportRequestUserIDCode string

const (

	// ReportRequestUserIDCodeSWBIC captures enum value "SWBIC"
	ReportRequestUserIDCodeSWBIC ReportRequestUserIDCode = "SWBIC"

	// ReportRequestUserIDCodeRTN captures enum value "RTN"
	ReportRequestUserIDCodeRTN ReportRequestUserIDCode = "RTN"

	// ReportRequestUserIDCodeParticipant captures enum value "Participant"
	ReportRequestUserIDCodeParticipant ReportRequestUserIDCode = "Participant"

	// ReportRequestUserIDCodeSUN captures enum value "SUN"
	ReportRequestUserIDCodeSUN ReportRequestUserIDCode = "SUN"
)

// for schema
var reportRequestUserIdCodeEnum []interface{}

func init() {
	var res []ReportRequestUserIDCode
	if err := json.Unmarshal([]byte(`["SWBIC","RTN","Participant","SUN"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		reportRequestUserIdCodeEnum = append(reportRequestUserIdCodeEnum, v)
	}
}

func (m ReportRequestUserIDCode) validateReportRequestUserIDCodeEnum(path, location string, value ReportRequestUserIDCode) error {
	if err := validate.Enum(path, location, value, reportRequestUserIdCodeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this report request user Id code
func (m ReportRequestUserIDCode) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateReportRequestUserIDCodeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ReportRequestUserIDCode) Json() string {
	json, err := json.MarshalIndent(m, "  ", "  ")
	if err != nil {
		log.Fatal(err)
	}
	return string(json)
}
