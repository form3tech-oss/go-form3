// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"log"

	"github.com/form3tech-oss/go-form3/v4/pkg/client"
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// BalanceAttributes balance attributes
// swagger:model BalanceAttributes
type BalanceAttributes struct {

	// Amount of funds
	Amount string `json:"amount,omitempty"`

	// Currency of funds
	// Pattern: ^[A-Z]{3}$
	Currency string `json:"currency,omitempty"`

	// Balance description
	Description string `json:"description,omitempty"`

	// Institution that holds the funds
	HoldingInstitution string `json:"holding_institution,omitempty"`
}

func BalanceAttributesWithDefaults(defaults client.Defaults) *BalanceAttributes {
	return &BalanceAttributes{

		Amount: defaults.GetString("BalanceAttributes", "amount"),

		Currency: defaults.GetString("BalanceAttributes", "currency"),

		Description: defaults.GetString("BalanceAttributes", "description"),

		HoldingInstitution: defaults.GetString("BalanceAttributes", "holding_institution"),
	}
}

func (m *BalanceAttributes) WithAmount(amount string) *BalanceAttributes {

	m.Amount = amount

	return m
}

func (m *BalanceAttributes) WithCurrency(currency string) *BalanceAttributes {

	m.Currency = currency

	return m
}

func (m *BalanceAttributes) WithDescription(description string) *BalanceAttributes {

	m.Description = description

	return m
}

func (m *BalanceAttributes) WithHoldingInstitution(holdingInstitution string) *BalanceAttributes {

	m.HoldingInstitution = holdingInstitution

	return m
}

// Validate validates this balance attributes
func (m *BalanceAttributes) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCurrency(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *BalanceAttributes) validateCurrency(formats strfmt.Registry) error {

	if swag.IsZero(m.Currency) { // not required
		return nil
	}

	if err := validate.Pattern("currency", "body", string(m.Currency), `^[A-Z]{3}$`); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *BalanceAttributes) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *BalanceAttributes) UnmarshalBinary(b []byte) error {
	var res BalanceAttributes
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
func (m *BalanceAttributes) Json() string {
	json, err := json.MarshalIndent(m, "  ", "  ")
	if err != nil {
		log.Fatal(err)
	}
	return string(json)
}
