// Code generated by go-swagger; DO NOT EDIT.

package name_verification_api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/form3tech-oss/go-form3/v7/pkg/generated/models"
)

// GetNameVerificationAdmissionReader is a Reader for the GetNameVerificationAdmission structure.
type GetNameVerificationAdmissionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNameVerificationAdmissionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetNameVerificationAdmissionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetNameVerificationAdmissionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetNameVerificationAdmissionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetNameVerificationAdmissionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetNameVerificationAdmissionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetNameVerificationAdmissionOK creates a GetNameVerificationAdmissionOK with default headers values
func NewGetNameVerificationAdmissionOK() *GetNameVerificationAdmissionOK {
	return &GetNameVerificationAdmissionOK{}
}

/*
GetNameVerificationAdmissionOK handles this case with default header values.

Name verification admission details
*/
type GetNameVerificationAdmissionOK struct {

	//Payload

	// isStream: false
	*models.NameVerificationAdmissionDetailsResponse
}

// IsSuccess returns true when this get name verification admission o k response has a 2xx status code
func (o *GetNameVerificationAdmissionOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get name verification admission o k response has a 3xx status code
func (o *GetNameVerificationAdmissionOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get name verification admission o k response has a 4xx status code
func (o *GetNameVerificationAdmissionOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get name verification admission o k response has a 5xx status code
func (o *GetNameVerificationAdmissionOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get name verification admission o k response a status code equal to that given
func (o *GetNameVerificationAdmissionOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get name verification admission o k response
func (o *GetNameVerificationAdmissionOK) Code() int {
	return 200
}

func (o *GetNameVerificationAdmissionOK) Error() string {
	return fmt.Sprintf("[GET /organisation/nameverifications/{name_verification_id}/admissions/{id}][%d] getNameVerificationAdmissionOK", 200)
}

func (o *GetNameVerificationAdmissionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.NameVerificationAdmissionDetailsResponse = new(models.NameVerificationAdmissionDetailsResponse)

	// response payload

	if err := consumer.Consume(response.Body(), o.NameVerificationAdmissionDetailsResponse); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNameVerificationAdmissionBadRequest creates a GetNameVerificationAdmissionBadRequest with default headers values
func NewGetNameVerificationAdmissionBadRequest() *GetNameVerificationAdmissionBadRequest {
	return &GetNameVerificationAdmissionBadRequest{}
}

/*
GetNameVerificationAdmissionBadRequest handles this case with default header values.

Bad Request
*/
type GetNameVerificationAdmissionBadRequest struct {

	//Payload

	// isStream: false
	*models.APIError
}

// IsSuccess returns true when this get name verification admission bad request response has a 2xx status code
func (o *GetNameVerificationAdmissionBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get name verification admission bad request response has a 3xx status code
func (o *GetNameVerificationAdmissionBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get name verification admission bad request response has a 4xx status code
func (o *GetNameVerificationAdmissionBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get name verification admission bad request response has a 5xx status code
func (o *GetNameVerificationAdmissionBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get name verification admission bad request response a status code equal to that given
func (o *GetNameVerificationAdmissionBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get name verification admission bad request response
func (o *GetNameVerificationAdmissionBadRequest) Code() int {
	return 400
}

func (o *GetNameVerificationAdmissionBadRequest) Error() string {
	return fmt.Sprintf("[GET /organisation/nameverifications/{name_verification_id}/admissions/{id}][%d] getNameVerificationAdmissionBadRequest", 400)
}

func (o *GetNameVerificationAdmissionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNameVerificationAdmissionForbidden creates a GetNameVerificationAdmissionForbidden with default headers values
func NewGetNameVerificationAdmissionForbidden() *GetNameVerificationAdmissionForbidden {
	return &GetNameVerificationAdmissionForbidden{}
}

/*
GetNameVerificationAdmissionForbidden handles this case with default header values.

Forbidden
*/
type GetNameVerificationAdmissionForbidden struct {

	//Payload

	// isStream: false
	*models.APIError
}

// IsSuccess returns true when this get name verification admission forbidden response has a 2xx status code
func (o *GetNameVerificationAdmissionForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get name verification admission forbidden response has a 3xx status code
func (o *GetNameVerificationAdmissionForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get name verification admission forbidden response has a 4xx status code
func (o *GetNameVerificationAdmissionForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get name verification admission forbidden response has a 5xx status code
func (o *GetNameVerificationAdmissionForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get name verification admission forbidden response a status code equal to that given
func (o *GetNameVerificationAdmissionForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get name verification admission forbidden response
func (o *GetNameVerificationAdmissionForbidden) Code() int {
	return 403
}

func (o *GetNameVerificationAdmissionForbidden) Error() string {
	return fmt.Sprintf("[GET /organisation/nameverifications/{name_verification_id}/admissions/{id}][%d] getNameVerificationAdmissionForbidden", 403)
}

func (o *GetNameVerificationAdmissionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNameVerificationAdmissionNotFound creates a GetNameVerificationAdmissionNotFound with default headers values
func NewGetNameVerificationAdmissionNotFound() *GetNameVerificationAdmissionNotFound {
	return &GetNameVerificationAdmissionNotFound{}
}

/*
GetNameVerificationAdmissionNotFound handles this case with default header values.

Not Found
*/
type GetNameVerificationAdmissionNotFound struct {

	//Payload

	// isStream: false
	*models.APIError
}

// IsSuccess returns true when this get name verification admission not found response has a 2xx status code
func (o *GetNameVerificationAdmissionNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get name verification admission not found response has a 3xx status code
func (o *GetNameVerificationAdmissionNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get name verification admission not found response has a 4xx status code
func (o *GetNameVerificationAdmissionNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get name verification admission not found response has a 5xx status code
func (o *GetNameVerificationAdmissionNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get name verification admission not found response a status code equal to that given
func (o *GetNameVerificationAdmissionNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get name verification admission not found response
func (o *GetNameVerificationAdmissionNotFound) Code() int {
	return 404
}

func (o *GetNameVerificationAdmissionNotFound) Error() string {
	return fmt.Sprintf("[GET /organisation/nameverifications/{name_verification_id}/admissions/{id}][%d] getNameVerificationAdmissionNotFound", 404)
}

func (o *GetNameVerificationAdmissionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNameVerificationAdmissionInternalServerError creates a GetNameVerificationAdmissionInternalServerError with default headers values
func NewGetNameVerificationAdmissionInternalServerError() *GetNameVerificationAdmissionInternalServerError {
	return &GetNameVerificationAdmissionInternalServerError{}
}

/*
GetNameVerificationAdmissionInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetNameVerificationAdmissionInternalServerError struct {

	//Payload

	// isStream: false
	*models.APIError
}

// IsSuccess returns true when this get name verification admission internal server error response has a 2xx status code
func (o *GetNameVerificationAdmissionInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get name verification admission internal server error response has a 3xx status code
func (o *GetNameVerificationAdmissionInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get name verification admission internal server error response has a 4xx status code
func (o *GetNameVerificationAdmissionInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get name verification admission internal server error response has a 5xx status code
func (o *GetNameVerificationAdmissionInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get name verification admission internal server error response a status code equal to that given
func (o *GetNameVerificationAdmissionInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get name verification admission internal server error response
func (o *GetNameVerificationAdmissionInternalServerError) Code() int {
	return 500
}

func (o *GetNameVerificationAdmissionInternalServerError) Error() string {
	return fmt.Sprintf("[GET /organisation/nameverifications/{name_verification_id}/admissions/{id}][%d] getNameVerificationAdmissionInternalServerError", 500)
}

func (o *GetNameVerificationAdmissionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}
