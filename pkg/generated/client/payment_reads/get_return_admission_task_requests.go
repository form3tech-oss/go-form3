// Code generated by go-swagger; DO NOT EDIT.

package payment_reads

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// Client.GetReturnAdmissionTask creates a new GetReturnAdmissionTaskRequest object
// with the default values initialized.
func (c *Client) GetReturnAdmissionTask() *GetReturnAdmissionTaskRequest {
	var ()
	return &GetReturnAdmissionTaskRequest{

		PaymentID: c.Defaults.GetStrfmtUUID("GetReturnAdmissionTask", "paymentId"),

		ReturnAdmissionID: c.Defaults.GetStrfmtUUID("GetReturnAdmissionTask", "returnAdmissionId"),

		ReturnID: c.Defaults.GetStrfmtUUID("GetReturnAdmissionTask", "returnId"),

		TaskID: c.Defaults.GetStrfmtUUID("GetReturnAdmissionTask", "taskId"),

		timeout: cr.DefaultTimeout,

		transport: c.transport,
		formats:   c.formats,
	}
}

type GetReturnAdmissionTaskRequest struct {

	/*PaymentID      Payment ID      */

	PaymentID strfmt.UUID

	/*ReturnAdmissionID      Return Admission ID      */

	ReturnAdmissionID strfmt.UUID

	/*ReturnID      Return ID      */

	ReturnID strfmt.UUID

	/*TaskID      Return Admission Task Id      */

	TaskID strfmt.UUID

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client

	transport runtime.ClientTransport
	formats   strfmt.Registry
}

func (o *GetReturnAdmissionTaskRequest) FromJson(j string) (*GetReturnAdmissionTaskRequest, error) {

	return o, nil
}

func (o *GetReturnAdmissionTaskRequest) WithPaymentID(paymentID strfmt.UUID) *GetReturnAdmissionTaskRequest {

	o.PaymentID = paymentID

	return o
}

func (o *GetReturnAdmissionTaskRequest) WithReturnAdmissionID(returnAdmissionID strfmt.UUID) *GetReturnAdmissionTaskRequest {

	o.ReturnAdmissionID = returnAdmissionID

	return o
}

func (o *GetReturnAdmissionTaskRequest) WithReturnID(returnID strfmt.UUID) *GetReturnAdmissionTaskRequest {

	o.ReturnID = returnID

	return o
}

func (o *GetReturnAdmissionTaskRequest) WithTaskID(taskID strfmt.UUID) *GetReturnAdmissionTaskRequest {

	o.TaskID = taskID

	return o
}

// ////////////////
// WithContext adds the context to the get return admission task Request
func (o *GetReturnAdmissionTaskRequest) WithContext(ctx context.Context) *GetReturnAdmissionTaskRequest {
	o.Context = ctx
	return o
}

// WithHTTPClient adds the HTTPClient to the get return admission task Request
func (o *GetReturnAdmissionTaskRequest) WithHTTPClient(client *http.Client) *GetReturnAdmissionTaskRequest {
	o.HTTPClient = client
	return o
}

// WriteToRequest writes these Request to a swagger request
func (o *GetReturnAdmissionTaskRequest) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param paymentId
	if err := r.SetPathParam("paymentId", o.PaymentID.String()); err != nil {
		return err
	}

	// path param returnAdmissionId
	if err := r.SetPathParam("returnAdmissionId", o.ReturnAdmissionID.String()); err != nil {
		return err
	}

	// path param returnId
	if err := r.SetPathParam("returnId", o.ReturnID.String()); err != nil {
		return err
	}

	// path param taskId
	if err := r.SetPathParam("taskId", o.TaskID.String()); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
