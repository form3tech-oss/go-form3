// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"log"

	"github.com/form3tech-oss/go-form3/pkg/client"
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// FxDealSubmissionPatchAttributes fx deal submission patch attributes
// swagger:model FxDealSubmissionPatchAttributes
type FxDealSubmissionPatchAttributes struct {

	// provider id
	ProviderID *string `json:"provider_id,omitempty"`

	// status
	Status FXDealSubmissionStatus `json:"status,omitempty"`

	// status reason
	StatusReason *string `json:"status_reason,omitempty"`
}

func FxDealSubmissionPatchAttributesWithDefaults(defaults client.Defaults) *FxDealSubmissionPatchAttributes {
	return &FxDealSubmissionPatchAttributes{

		ProviderID: defaults.GetStringPtr("FxDealSubmissionPatchAttributes", "provider_id"),

		// TODO Status: FXDealSubmissionStatus,

		StatusReason: defaults.GetStringPtr("FxDealSubmissionPatchAttributes", "status_reason"),
	}
}

func (m *FxDealSubmissionPatchAttributes) WithProviderID(providerID string) *FxDealSubmissionPatchAttributes {

	m.ProviderID = &providerID

	return m
}

func (m *FxDealSubmissionPatchAttributes) WithoutProviderID() *FxDealSubmissionPatchAttributes {
	m.ProviderID = nil
	return m
}

func (m *FxDealSubmissionPatchAttributes) WithStatus(status FXDealSubmissionStatus) *FxDealSubmissionPatchAttributes {

	m.Status = status

	return m
}

func (m *FxDealSubmissionPatchAttributes) WithStatusReason(statusReason string) *FxDealSubmissionPatchAttributes {

	m.StatusReason = &statusReason

	return m
}

func (m *FxDealSubmissionPatchAttributes) WithoutStatusReason() *FxDealSubmissionPatchAttributes {
	m.StatusReason = nil
	return m
}

// Validate validates this fx deal submission patch attributes
func (m *FxDealSubmissionPatchAttributes) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *FxDealSubmissionPatchAttributes) validateStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.Status) { // not required
		return nil
	}

	if err := m.Status.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("status")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *FxDealSubmissionPatchAttributes) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *FxDealSubmissionPatchAttributes) UnmarshalBinary(b []byte) error {
	var res FxDealSubmissionPatchAttributes
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
func (m *FxDealSubmissionPatchAttributes) Json() string {
	json, err := json.MarshalIndent(m, "  ", "  ")
	if err != nil {
		log.Fatal(err)
	}
	return string(json)
}
