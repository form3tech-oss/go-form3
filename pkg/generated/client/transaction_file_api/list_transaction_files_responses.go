// Code generated by go-swagger; DO NOT EDIT.

package transaction_file_api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/form3tech-oss/go-form3/v7/pkg/generated/models"
)

// ListTransactionFilesReader is a Reader for the ListTransactionFiles structure.
type ListTransactionFilesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListTransactionFilesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListTransactionFilesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewListTransactionFilesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewListTransactionFilesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewListTransactionFilesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewListTransactionFilesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListTransactionFilesOK creates a ListTransactionFilesOK with default headers values
func NewListTransactionFilesOK() *ListTransactionFilesOK {
	return &ListTransactionFilesOK{}
}

/*
ListTransactionFilesOK handles this case with default header values.

List of transaction files
*/
type ListTransactionFilesOK struct {

	//Payload

	// isStream: false
	*models.ListTransactionFilesResponse
}

// IsSuccess returns true when this list transaction files o k response has a 2xx status code
func (o *ListTransactionFilesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list transaction files o k response has a 3xx status code
func (o *ListTransactionFilesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list transaction files o k response has a 4xx status code
func (o *ListTransactionFilesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list transaction files o k response has a 5xx status code
func (o *ListTransactionFilesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list transaction files o k response a status code equal to that given
func (o *ListTransactionFilesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list transaction files o k response
func (o *ListTransactionFilesOK) Code() int {
	return 200
}

func (o *ListTransactionFilesOK) Error() string {
	return fmt.Sprintf("[GET /files/transactions][%d] listTransactionFilesOK", 200)
}

func (o *ListTransactionFilesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.ListTransactionFilesResponse = new(models.ListTransactionFilesResponse)

	// response payload

	if err := consumer.Consume(response.Body(), o.ListTransactionFilesResponse); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListTransactionFilesBadRequest creates a ListTransactionFilesBadRequest with default headers values
func NewListTransactionFilesBadRequest() *ListTransactionFilesBadRequest {
	return &ListTransactionFilesBadRequest{}
}

/*
ListTransactionFilesBadRequest handles this case with default header values.

Reports bad request
*/
type ListTransactionFilesBadRequest struct {

	//Payload

	// isStream: false
	*models.APIError
}

// IsSuccess returns true when this list transaction files bad request response has a 2xx status code
func (o *ListTransactionFilesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list transaction files bad request response has a 3xx status code
func (o *ListTransactionFilesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list transaction files bad request response has a 4xx status code
func (o *ListTransactionFilesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list transaction files bad request response has a 5xx status code
func (o *ListTransactionFilesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list transaction files bad request response a status code equal to that given
func (o *ListTransactionFilesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list transaction files bad request response
func (o *ListTransactionFilesBadRequest) Code() int {
	return 400
}

func (o *ListTransactionFilesBadRequest) Error() string {
	return fmt.Sprintf("[GET /files/transactions][%d] listTransactionFilesBadRequest", 400)
}

func (o *ListTransactionFilesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListTransactionFilesUnauthorized creates a ListTransactionFilesUnauthorized with default headers values
func NewListTransactionFilesUnauthorized() *ListTransactionFilesUnauthorized {
	return &ListTransactionFilesUnauthorized{}
}

/*
ListTransactionFilesUnauthorized handles this case with default header values.

Unauthorized
*/
type ListTransactionFilesUnauthorized struct {

	//Payload

	// isStream: false
	*models.APIError
}

// IsSuccess returns true when this list transaction files unauthorized response has a 2xx status code
func (o *ListTransactionFilesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list transaction files unauthorized response has a 3xx status code
func (o *ListTransactionFilesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list transaction files unauthorized response has a 4xx status code
func (o *ListTransactionFilesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list transaction files unauthorized response has a 5xx status code
func (o *ListTransactionFilesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list transaction files unauthorized response a status code equal to that given
func (o *ListTransactionFilesUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list transaction files unauthorized response
func (o *ListTransactionFilesUnauthorized) Code() int {
	return 401
}

func (o *ListTransactionFilesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /files/transactions][%d] listTransactionFilesUnauthorized", 401)
}

func (o *ListTransactionFilesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListTransactionFilesForbidden creates a ListTransactionFilesForbidden with default headers values
func NewListTransactionFilesForbidden() *ListTransactionFilesForbidden {
	return &ListTransactionFilesForbidden{}
}

/*
ListTransactionFilesForbidden handles this case with default header values.

Forbidden
*/
type ListTransactionFilesForbidden struct {

	//Payload

	// isStream: false
	*models.APIError
}

// IsSuccess returns true when this list transaction files forbidden response has a 2xx status code
func (o *ListTransactionFilesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list transaction files forbidden response has a 3xx status code
func (o *ListTransactionFilesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list transaction files forbidden response has a 4xx status code
func (o *ListTransactionFilesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list transaction files forbidden response has a 5xx status code
func (o *ListTransactionFilesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list transaction files forbidden response a status code equal to that given
func (o *ListTransactionFilesForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list transaction files forbidden response
func (o *ListTransactionFilesForbidden) Code() int {
	return 403
}

func (o *ListTransactionFilesForbidden) Error() string {
	return fmt.Sprintf("[GET /files/transactions][%d] listTransactionFilesForbidden", 403)
}

func (o *ListTransactionFilesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListTransactionFilesInternalServerError creates a ListTransactionFilesInternalServerError with default headers values
func NewListTransactionFilesInternalServerError() *ListTransactionFilesInternalServerError {
	return &ListTransactionFilesInternalServerError{}
}

/*
ListTransactionFilesInternalServerError handles this case with default header values.

Internal Server Error
*/
type ListTransactionFilesInternalServerError struct {

	//Payload

	// isStream: false
	*models.APIError
}

// IsSuccess returns true when this list transaction files internal server error response has a 2xx status code
func (o *ListTransactionFilesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list transaction files internal server error response has a 3xx status code
func (o *ListTransactionFilesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list transaction files internal server error response has a 4xx status code
func (o *ListTransactionFilesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list transaction files internal server error response has a 5xx status code
func (o *ListTransactionFilesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list transaction files internal server error response a status code equal to that given
func (o *ListTransactionFilesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the list transaction files internal server error response
func (o *ListTransactionFilesInternalServerError) Code() int {
	return 500
}

func (o *ListTransactionFilesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /files/transactions][%d] listTransactionFilesInternalServerError", 500)
}

func (o *ListTransactionFilesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}
