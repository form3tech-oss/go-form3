// Code generated by go-swagger; DO NOT EDIT.

package account_request

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/form3tech-oss/go-form3/v4/pkg/generated/models"
)

// CreateAccountRequestSubmissionReader is a Reader for the CreateAccountRequestSubmission structure.
type CreateAccountRequestSubmissionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateAccountRequestSubmissionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewCreateAccountRequestSubmissionCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewCreateAccountRequestSubmissionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewCreateAccountRequestSubmissionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewCreateAccountRequestSubmissionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewCreateAccountRequestSubmissionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewCreateAccountRequestSubmissionConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewCreateAccountRequestSubmissionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 502:
		result := NewCreateAccountRequestSubmissionBadGateway()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewCreateAccountRequestSubmissionServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewCreateAccountRequestSubmissionGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateAccountRequestSubmissionCreated creates a CreateAccountRequestSubmissionCreated with default headers values
func NewCreateAccountRequestSubmissionCreated() *CreateAccountRequestSubmissionCreated {
	return &CreateAccountRequestSubmissionCreated{}
}

/*CreateAccountRequestSubmissionCreated handles this case with default header values.

Account Request creation response
*/
type CreateAccountRequestSubmissionCreated struct {

	//Payload

	// isStream: false
	*models.AccountRequestSubmissionResponse
}

func (o *CreateAccountRequestSubmissionCreated) Error() string {
	return fmt.Sprintf("[POST /organisation/accountrequests/{id}/submissions][%d] createAccountRequestSubmissionCreated", 201)
}

func (o *CreateAccountRequestSubmissionCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.AccountRequestSubmissionResponse = new(models.AccountRequestSubmissionResponse)

	// response payload

	if err := consumer.Consume(response.Body(), o.AccountRequestSubmissionResponse); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAccountRequestSubmissionBadRequest creates a CreateAccountRequestSubmissionBadRequest with default headers values
func NewCreateAccountRequestSubmissionBadRequest() *CreateAccountRequestSubmissionBadRequest {
	return &CreateAccountRequestSubmissionBadRequest{}
}

/*CreateAccountRequestSubmissionBadRequest handles this case with default header values.

Account Request creation error
*/
type CreateAccountRequestSubmissionBadRequest struct {

	//Payload

	// isStream: false
	*models.APIError
}

func (o *CreateAccountRequestSubmissionBadRequest) Error() string {
	return fmt.Sprintf("[POST /organisation/accountrequests/{id}/submissions][%d] createAccountRequestSubmissionBadRequest", 400)
}

func (o *CreateAccountRequestSubmissionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAccountRequestSubmissionUnauthorized creates a CreateAccountRequestSubmissionUnauthorized with default headers values
func NewCreateAccountRequestSubmissionUnauthorized() *CreateAccountRequestSubmissionUnauthorized {
	return &CreateAccountRequestSubmissionUnauthorized{}
}

/*CreateAccountRequestSubmissionUnauthorized handles this case with default header values.

Unauthorized
*/
type CreateAccountRequestSubmissionUnauthorized struct {

	//Payload

	// isStream: false
	*models.APIError
}

func (o *CreateAccountRequestSubmissionUnauthorized) Error() string {
	return fmt.Sprintf("[POST /organisation/accountrequests/{id}/submissions][%d] createAccountRequestSubmissionUnauthorized", 401)
}

func (o *CreateAccountRequestSubmissionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAccountRequestSubmissionForbidden creates a CreateAccountRequestSubmissionForbidden with default headers values
func NewCreateAccountRequestSubmissionForbidden() *CreateAccountRequestSubmissionForbidden {
	return &CreateAccountRequestSubmissionForbidden{}
}

/*CreateAccountRequestSubmissionForbidden handles this case with default header values.

Forbidden
*/
type CreateAccountRequestSubmissionForbidden struct {

	//Payload

	// isStream: false
	*models.APIError
}

func (o *CreateAccountRequestSubmissionForbidden) Error() string {
	return fmt.Sprintf("[POST /organisation/accountrequests/{id}/submissions][%d] createAccountRequestSubmissionForbidden", 403)
}

func (o *CreateAccountRequestSubmissionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAccountRequestSubmissionNotFound creates a CreateAccountRequestSubmissionNotFound with default headers values
func NewCreateAccountRequestSubmissionNotFound() *CreateAccountRequestSubmissionNotFound {
	return &CreateAccountRequestSubmissionNotFound{}
}

/*CreateAccountRequestSubmissionNotFound handles this case with default header values.

Not Found
*/
type CreateAccountRequestSubmissionNotFound struct {

	//Payload

	// isStream: false
	*models.APIError
}

func (o *CreateAccountRequestSubmissionNotFound) Error() string {
	return fmt.Sprintf("[POST /organisation/accountrequests/{id}/submissions][%d] createAccountRequestSubmissionNotFound", 404)
}

func (o *CreateAccountRequestSubmissionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAccountRequestSubmissionConflict creates a CreateAccountRequestSubmissionConflict with default headers values
func NewCreateAccountRequestSubmissionConflict() *CreateAccountRequestSubmissionConflict {
	return &CreateAccountRequestSubmissionConflict{}
}

/*CreateAccountRequestSubmissionConflict handles this case with default header values.

Conflict
*/
type CreateAccountRequestSubmissionConflict struct {

	//Payload

	// isStream: false
	*models.APIError
}

func (o *CreateAccountRequestSubmissionConflict) Error() string {
	return fmt.Sprintf("[POST /organisation/accountrequests/{id}/submissions][%d] createAccountRequestSubmissionConflict", 409)
}

func (o *CreateAccountRequestSubmissionConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAccountRequestSubmissionInternalServerError creates a CreateAccountRequestSubmissionInternalServerError with default headers values
func NewCreateAccountRequestSubmissionInternalServerError() *CreateAccountRequestSubmissionInternalServerError {
	return &CreateAccountRequestSubmissionInternalServerError{}
}

/*CreateAccountRequestSubmissionInternalServerError handles this case with default header values.

Internal Server Error
*/
type CreateAccountRequestSubmissionInternalServerError struct {

	//Payload

	// isStream: false
	*models.APIError
}

func (o *CreateAccountRequestSubmissionInternalServerError) Error() string {
	return fmt.Sprintf("[POST /organisation/accountrequests/{id}/submissions][%d] createAccountRequestSubmissionInternalServerError", 500)
}

func (o *CreateAccountRequestSubmissionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAccountRequestSubmissionBadGateway creates a CreateAccountRequestSubmissionBadGateway with default headers values
func NewCreateAccountRequestSubmissionBadGateway() *CreateAccountRequestSubmissionBadGateway {
	return &CreateAccountRequestSubmissionBadGateway{}
}

/*CreateAccountRequestSubmissionBadGateway handles this case with default header values.

Bad Gateway
*/
type CreateAccountRequestSubmissionBadGateway struct {

	//Payload

	// isStream: false
	*models.APIError
}

func (o *CreateAccountRequestSubmissionBadGateway) Error() string {
	return fmt.Sprintf("[POST /organisation/accountrequests/{id}/submissions][%d] createAccountRequestSubmissionBadGateway", 502)
}

func (o *CreateAccountRequestSubmissionBadGateway) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAccountRequestSubmissionServiceUnavailable creates a CreateAccountRequestSubmissionServiceUnavailable with default headers values
func NewCreateAccountRequestSubmissionServiceUnavailable() *CreateAccountRequestSubmissionServiceUnavailable {
	return &CreateAccountRequestSubmissionServiceUnavailable{}
}

/*CreateAccountRequestSubmissionServiceUnavailable handles this case with default header values.

Service unavailable
*/
type CreateAccountRequestSubmissionServiceUnavailable struct {

	//Payload

	// isStream: false
	*models.APIError
}

func (o *CreateAccountRequestSubmissionServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /organisation/accountrequests/{id}/submissions][%d] createAccountRequestSubmissionServiceUnavailable", 503)
}

func (o *CreateAccountRequestSubmissionServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAccountRequestSubmissionGatewayTimeout creates a CreateAccountRequestSubmissionGatewayTimeout with default headers values
func NewCreateAccountRequestSubmissionGatewayTimeout() *CreateAccountRequestSubmissionGatewayTimeout {
	return &CreateAccountRequestSubmissionGatewayTimeout{}
}

/*CreateAccountRequestSubmissionGatewayTimeout handles this case with default header values.

Gateway timeout
*/
type CreateAccountRequestSubmissionGatewayTimeout struct {

	//Payload

	// isStream: false
	*models.APIError
}

func (o *CreateAccountRequestSubmissionGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /organisation/accountrequests/{id}/submissions][%d] createAccountRequestSubmissionGatewayTimeout", 504)
}

func (o *CreateAccountRequestSubmissionGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}
