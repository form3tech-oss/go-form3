// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"log"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// AdviceSubmissionStatus advice submission status
// swagger:model AdviceSubmissionStatus
type AdviceSubmissionStatus string

const (

	// AdviceSubmissionStatusAccepted captures enum value "accepted"
	AdviceSubmissionStatusAccepted AdviceSubmissionStatus = "accepted"

	// AdviceSubmissionStatusReleasedToGateway captures enum value "released_to_gateway"
	AdviceSubmissionStatusReleasedToGateway AdviceSubmissionStatus = "released_to_gateway"

	// AdviceSubmissionStatusQueuedForDelivery captures enum value "queued_for_delivery"
	AdviceSubmissionStatusQueuedForDelivery AdviceSubmissionStatus = "queued_for_delivery"

	// AdviceSubmissionStatusDeliveryConfirmed captures enum value "delivery_confirmed"
	AdviceSubmissionStatusDeliveryConfirmed AdviceSubmissionStatus = "delivery_confirmed"

	// AdviceSubmissionStatusDeliveryFailed captures enum value "delivery_failed"
	AdviceSubmissionStatusDeliveryFailed AdviceSubmissionStatus = "delivery_failed"

	// AdviceSubmissionStatusSubmitted captures enum value "submitted"
	AdviceSubmissionStatusSubmitted AdviceSubmissionStatus = "submitted"

	// AdviceSubmissionStatusValidationPending captures enum value "validation_pending"
	AdviceSubmissionStatusValidationPending AdviceSubmissionStatus = "validation_pending"

	// AdviceSubmissionStatusValidationPassed captures enum value "validation_passed"
	AdviceSubmissionStatusValidationPassed AdviceSubmissionStatus = "validation_passed"
)

// for schema
var adviceSubmissionStatusEnum []interface{}

func init() {
	var res []AdviceSubmissionStatus
	if err := json.Unmarshal([]byte(`["accepted","released_to_gateway","queued_for_delivery","delivery_confirmed","delivery_failed","submitted","validation_pending","validation_passed"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		adviceSubmissionStatusEnum = append(adviceSubmissionStatusEnum, v)
	}
}

func (m AdviceSubmissionStatus) validateAdviceSubmissionStatusEnum(path, location string, value AdviceSubmissionStatus) error {
	if err := validate.Enum(path, location, value, adviceSubmissionStatusEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this advice submission status
func (m AdviceSubmissionStatus) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateAdviceSubmissionStatusEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AdviceSubmissionStatus) Json() string {
	json, err := json.MarshalIndent(m, "  ", "  ")
	if err != nil {
		log.Fatal(err)
	}
	return string(json)
}
