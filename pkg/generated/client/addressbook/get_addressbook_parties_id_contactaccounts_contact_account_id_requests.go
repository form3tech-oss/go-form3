// Code generated by go-swagger; DO NOT EDIT.

package addressbook

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// Client.GetAddressbookPartiesIDContactaccountsContactAccountID creates a new GetAddressbookPartiesIDContactaccountsContactAccountIDRequest object
// with the default values initialized.
func (c *Client) GetAddressbookPartiesIDContactaccountsContactAccountID() *GetAddressbookPartiesIDContactaccountsContactAccountIDRequest {
	var ()
	return &GetAddressbookPartiesIDContactaccountsContactAccountIDRequest{

		ContactAccountID: c.Defaults.GetStrfmtUUID("GetAddressbookPartiesIDContactaccountsContactAccountID", "contact_account_id"),

		ID: c.Defaults.GetStrfmtUUID("GetAddressbookPartiesIDContactaccountsContactAccountID", "id"),

		Version: c.Defaults.GetInt64Ptr("GetAddressbookPartiesIDContactaccountsContactAccountID", "version"),

		timeout: cr.DefaultTimeout,

		transport: c.transport,
		formats:   c.formats,
	}
}

type GetAddressbookPartiesIDContactaccountsContactAccountIDRequest struct {

	/*ContactAccountID      Id of contact account      */

	ContactAccountID strfmt.UUID

	/*ID      Id of party      */

	ID strfmt.UUID

	/*Version*/

	Version *int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client

	transport runtime.ClientTransport
	formats   strfmt.Registry
}

func (o *GetAddressbookPartiesIDContactaccountsContactAccountIDRequest) FromJson(j string) *GetAddressbookPartiesIDContactaccountsContactAccountIDRequest {

	return o
}

func (o *GetAddressbookPartiesIDContactaccountsContactAccountIDRequest) WithContactAccountID(contactAccountID strfmt.UUID) *GetAddressbookPartiesIDContactaccountsContactAccountIDRequest {

	o.ContactAccountID = contactAccountID

	return o
}

func (o *GetAddressbookPartiesIDContactaccountsContactAccountIDRequest) WithID(id strfmt.UUID) *GetAddressbookPartiesIDContactaccountsContactAccountIDRequest {

	o.ID = id

	return o
}

func (o *GetAddressbookPartiesIDContactaccountsContactAccountIDRequest) WithVersion(version int64) *GetAddressbookPartiesIDContactaccountsContactAccountIDRequest {

	o.Version = &version

	return o
}

func (o *GetAddressbookPartiesIDContactaccountsContactAccountIDRequest) WithoutVersion() *GetAddressbookPartiesIDContactaccountsContactAccountIDRequest {

	o.Version = nil

	return o
}

//////////////////
// WithContext adds the context to the get addressbook parties ID contactaccounts contact account ID Request
func (o *GetAddressbookPartiesIDContactaccountsContactAccountIDRequest) WithContext(ctx context.Context) *GetAddressbookPartiesIDContactaccountsContactAccountIDRequest {
	o.Context = ctx
	return o
}

// WithHTTPClient adds the HTTPClient to the get addressbook parties ID contactaccounts contact account ID Request
func (o *GetAddressbookPartiesIDContactaccountsContactAccountIDRequest) WithHTTPClient(client *http.Client) *GetAddressbookPartiesIDContactaccountsContactAccountIDRequest {
	o.HTTPClient = client
	return o
}

// WriteToRequest writes these Request to a swagger request
func (o *GetAddressbookPartiesIDContactaccountsContactAccountIDRequest) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param contact_account_id
	if err := r.SetPathParam("contact_account_id", o.ContactAccountID.String()); err != nil {
		return err
	}

	// path param id
	if err := r.SetPathParam("id", o.ID.String()); err != nil {
		return err
	}

	if o.Version != nil {

		// query param version
		var qrVersion int64
		if o.Version != nil {
			qrVersion = *o.Version
		}
		qVersion := swag.FormatInt64(qrVersion)
		if qVersion != "" {
			if err := r.SetQueryParam("version", qVersion); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
