// Code generated by go-swagger; DO NOT EDIT.

package payment_reads

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/form3tech-oss/go-form3/v7/pkg/generated/models"
)

// GetPaymentReturnReversalAdmissionReader is a Reader for the GetPaymentReturnReversalAdmission structure.
type GetPaymentReturnReversalAdmissionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPaymentReturnReversalAdmissionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetPaymentReturnReversalAdmissionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetPaymentReturnReversalAdmissionOK creates a GetPaymentReturnReversalAdmissionOK with default headers values
func NewGetPaymentReturnReversalAdmissionOK() *GetPaymentReturnReversalAdmissionOK {
	return &GetPaymentReturnReversalAdmissionOK{}
}

/*
GetPaymentReturnReversalAdmissionOK handles this case with default header values.

Return reversal admission details
*/
type GetPaymentReturnReversalAdmissionOK struct {

	//Payload

	// isStream: false
	*models.ReturnReversalAdmissionFetchResponse
}

// IsSuccess returns true when this get payment return reversal admission o k response has a 2xx status code
func (o *GetPaymentReturnReversalAdmissionOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get payment return reversal admission o k response has a 3xx status code
func (o *GetPaymentReturnReversalAdmissionOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get payment return reversal admission o k response has a 4xx status code
func (o *GetPaymentReturnReversalAdmissionOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get payment return reversal admission o k response has a 5xx status code
func (o *GetPaymentReturnReversalAdmissionOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get payment return reversal admission o k response a status code equal to that given
func (o *GetPaymentReturnReversalAdmissionOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get payment return reversal admission o k response
func (o *GetPaymentReturnReversalAdmissionOK) Code() int {
	return 200
}

func (o *GetPaymentReturnReversalAdmissionOK) Error() string {
	return fmt.Sprintf("[GET /transaction/payments/{id}/returns/{returnId}/reversals/{reversalId}/admissions/{admissionId}][%d] getPaymentReturnReversalAdmissionOK", 200)
}

func (o *GetPaymentReturnReversalAdmissionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.ReturnReversalAdmissionFetchResponse = new(models.ReturnReversalAdmissionFetchResponse)

	// response payload

	if err := consumer.Consume(response.Body(), o.ReturnReversalAdmissionFetchResponse); err != nil && err != io.EOF {
		return err
	}

	return nil
}
