// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"log"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// QueryResponseAnswer query response answer
// swagger:model QueryResponseAnswer
type QueryResponseAnswer string

const (

	// QueryResponseAnswerAccepted captures enum value "accepted"
	QueryResponseAnswerAccepted QueryResponseAnswer = "accepted"

	// QueryResponseAnswerRejected captures enum value "rejected"
	QueryResponseAnswerRejected QueryResponseAnswer = "rejected"

	// QueryResponseAnswerPending captures enum value "pending"
	QueryResponseAnswerPending QueryResponseAnswer = "pending"

	// QueryResponseAnswerAlreadyApplied captures enum value "already_applied"
	QueryResponseAnswerAlreadyApplied QueryResponseAnswer = "already_applied"

	// QueryResponseAnswerModifiedAsRequested captures enum value "modified_as_requested"
	QueryResponseAnswerModifiedAsRequested QueryResponseAnswer = "modified_as_requested"

	// QueryResponseAnswerTransactionNotReceived captures enum value "transaction_not_received"
	QueryResponseAnswerTransactionNotReceived QueryResponseAnswer = "transaction_not_received"

	// QueryResponseAnswerTransactionRejected captures enum value "transaction_rejected"
	QueryResponseAnswerTransactionRejected QueryResponseAnswer = "transaction_rejected"

	// QueryResponseAnswerTransactionReturned captures enum value "transaction_returned"
	QueryResponseAnswerTransactionReturned QueryResponseAnswer = "transaction_returned"

	// QueryResponseAnswerTransactionNotProcessed captures enum value "transaction_not_processed"
	QueryResponseAnswerTransactionNotProcessed QueryResponseAnswer = "transaction_not_processed"

	// QueryResponseAnswerRejectedRegulatoryReason captures enum value "rejected_regulatory_reason"
	QueryResponseAnswerRejectedRegulatoryReason QueryResponseAnswer = "rejected_regulatory_reason"
)

// for schema
var queryResponseAnswerEnum []interface{}

func init() {
	var res []QueryResponseAnswer
	if err := json.Unmarshal([]byte(`["accepted","rejected","pending","already_applied","modified_as_requested","transaction_not_received","transaction_rejected","transaction_returned","transaction_not_processed","rejected_regulatory_reason"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		queryResponseAnswerEnum = append(queryResponseAnswerEnum, v)
	}
}

func (m QueryResponseAnswer) validateQueryResponseAnswerEnum(path, location string, value QueryResponseAnswer) error {
	if err := validate.Enum(path, location, value, queryResponseAnswerEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this query response answer
func (m QueryResponseAnswer) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateQueryResponseAnswerEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *QueryResponseAnswer) Json() string {
	json, err := json.MarshalIndent(m, "  ", "  ")
	if err != nil {
		log.Fatal(err)
	}
	return string(json)
}
