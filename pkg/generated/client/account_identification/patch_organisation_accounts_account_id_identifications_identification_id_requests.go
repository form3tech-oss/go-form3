// Code generated by go-swagger; DO NOT EDIT.

package account_identification

import (
	"context"
	"encoding/json"
	"fmt"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/form3tech-oss/go-form3/v4/pkg/generated/models"
)

// Client.PatchOrganisationAccountsAccountIDIdentificationsIdentificationID creates a new PatchOrganisationAccountsAccountIDIdentificationsIdentificationIDRequest object
// with the default values initialized.
func (c *Client) PatchOrganisationAccountsAccountIDIdentificationsIdentificationID() *PatchOrganisationAccountsAccountIDIdentificationsIdentificationIDRequest {
	var ()
	return &PatchOrganisationAccountsAccountIDIdentificationsIdentificationIDRequest{

		AccountIdentificationRequest: models.AccountIdentificationRequestWithDefaults(c.Defaults),

		AccountID: c.Defaults.GetStrfmtUUID("PatchOrganisationAccountsAccountIDIdentificationsIdentificationID", "account_id"),

		IdentificationID: c.Defaults.GetStrfmtUUID("PatchOrganisationAccountsAccountIDIdentificationsIdentificationID", "identification_id"),

		timeout: cr.DefaultTimeout,

		transport: c.transport,
		formats:   c.formats,
	}
}

type PatchOrganisationAccountsAccountIDIdentificationsIdentificationIDRequest struct {

	/*AccountIdentificationAmendRequest*/

	*models.AccountIdentificationRequest

	/*AccountID      Account Id      */

	AccountID strfmt.UUID

	/*IdentificationID      Account Identification Id; Must match id in the payload      */

	IdentificationID strfmt.UUID

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client

	transport runtime.ClientTransport
	formats   strfmt.Registry
}

func (o *PatchOrganisationAccountsAccountIDIdentificationsIdentificationIDRequest) FromJson(j string) (*PatchOrganisationAccountsAccountIDIdentificationsIdentificationIDRequest, error) {

	var m models.AccountIdentificationRequest
	if err := json.Unmarshal([]byte(j), &m); err != nil {
		return nil, fmt.Errorf("could not unmarshal JSON: %w", err)
	}

	o.AccountIdentificationRequest = &m

	return o, nil
}

func (o *PatchOrganisationAccountsAccountIDIdentificationsIdentificationIDRequest) WithAccountIdentificationAmendRequest(accountIdentificationAmendRequest models.AccountIdentificationRequest) *PatchOrganisationAccountsAccountIDIdentificationsIdentificationIDRequest {

	o.AccountIdentificationRequest = &accountIdentificationAmendRequest

	return o
}

func (o *PatchOrganisationAccountsAccountIDIdentificationsIdentificationIDRequest) WithoutAccountIdentificationAmendRequest() *PatchOrganisationAccountsAccountIDIdentificationsIdentificationIDRequest {

	o.AccountIdentificationRequest = &models.AccountIdentificationRequest{}

	return o
}

func (o *PatchOrganisationAccountsAccountIDIdentificationsIdentificationIDRequest) WithAccountID(accountID strfmt.UUID) *PatchOrganisationAccountsAccountIDIdentificationsIdentificationIDRequest {

	o.AccountID = accountID

	return o
}

func (o *PatchOrganisationAccountsAccountIDIdentificationsIdentificationIDRequest) WithIdentificationID(identificationID strfmt.UUID) *PatchOrganisationAccountsAccountIDIdentificationsIdentificationIDRequest {

	o.IdentificationID = identificationID

	return o
}

//////////////////
// WithContext adds the context to the patch organisation accounts account ID identifications identification ID Request
func (o *PatchOrganisationAccountsAccountIDIdentificationsIdentificationIDRequest) WithContext(ctx context.Context) *PatchOrganisationAccountsAccountIDIdentificationsIdentificationIDRequest {
	o.Context = ctx
	return o
}

// WithHTTPClient adds the HTTPClient to the patch organisation accounts account ID identifications identification ID Request
func (o *PatchOrganisationAccountsAccountIDIdentificationsIdentificationIDRequest) WithHTTPClient(client *http.Client) *PatchOrganisationAccountsAccountIDIdentificationsIdentificationIDRequest {
	o.HTTPClient = client
	return o
}

// WriteToRequest writes these Request to a swagger request
func (o *PatchOrganisationAccountsAccountIDIdentificationsIdentificationIDRequest) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// ISBODYPARAM
	if o.AccountIdentificationRequest != nil {
		if err := r.SetBodyParam(o.AccountIdentificationRequest); err != nil {
			return err
		}
	}

	// path param account_id
	if err := r.SetPathParam("account_id", o.AccountID.String()); err != nil {
		return err
	}

	// path param identification_id
	if err := r.SetPathParam("identification_id", o.IdentificationID.String()); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
