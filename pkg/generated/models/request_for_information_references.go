// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"log"
	"strconv"

	"github.com/form3tech-oss/go-form3/v6/pkg/client"
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// RequestForInformationReferences request for information references
// swagger:model RequestForInformationReferences
type RequestForInformationReferences []*RequestForInformationReferencesItems0

// Validate validates this request for information references
func (m RequestForInformationReferences) Validate(formats strfmt.Registry) error {
	var res []error

	for i := 0; i < len(m); i++ {
		if swag.IsZero(m[i]) { // not required
			continue
		}

		if m[i] != nil {
			if err := m[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName(strconv.Itoa(i))
				}
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RequestForInformationReferences) Json() string {
	json, err := json.MarshalIndent(m, "  ", "  ")
	if err != nil {
		log.Fatal(err)
	}
	return string(json)
}

// RequestForInformationReferencesItems0 request for information references items0
// swagger:model RequestForInformationReferencesItems0
type RequestForInformationReferencesItems0 struct {

	// type
	// Required: true
	Type *string `json:"type"`

	// value
	// Required: true
	Value *string `json:"value"`
}

func RequestForInformationReferencesItems0WithDefaults(defaults client.Defaults) *RequestForInformationReferencesItems0 {
	return &RequestForInformationReferencesItems0{

		Type: defaults.GetStringPtr("RequestForInformationReferencesItems0", "type"),

		Value: defaults.GetStringPtr("RequestForInformationReferencesItems0", "value"),
	}
}

func (m *RequestForInformationReferencesItems0) WithType(typeVar string) *RequestForInformationReferencesItems0 {

	m.Type = &typeVar

	return m
}

func (m *RequestForInformationReferencesItems0) WithoutType() *RequestForInformationReferencesItems0 {
	m.Type = nil
	return m
}

func (m *RequestForInformationReferencesItems0) WithValue(value string) *RequestForInformationReferencesItems0 {

	m.Value = &value

	return m
}

func (m *RequestForInformationReferencesItems0) WithoutValue() *RequestForInformationReferencesItems0 {
	m.Value = nil
	return m
}

// Validate validates this request for information references items0
func (m *RequestForInformationReferencesItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateValue(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RequestForInformationReferencesItems0) validateType(formats strfmt.Registry) error {

	if err := validate.Required("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

func (m *RequestForInformationReferencesItems0) validateValue(formats strfmt.Registry) error {

	if err := validate.Required("value", "body", m.Value); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *RequestForInformationReferencesItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RequestForInformationReferencesItems0) UnmarshalBinary(b []byte) error {
	var res RequestForInformationReferencesItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
func (m *RequestForInformationReferencesItems0) Json() string {
	json, err := json.MarshalIndent(m, "  ", "  ")
	if err != nil {
		log.Fatal(err)
	}
	return string(json)
}
