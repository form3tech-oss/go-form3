// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/form3tech-oss/go-form3/v7/pkg/generated/models"
)

// ListPublicKeysForUserReader is a Reader for the ListPublicKeysForUser structure.
type ListPublicKeysForUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListPublicKeysForUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListPublicKeysForUserOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewListPublicKeysForUserNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListPublicKeysForUserOK creates a ListPublicKeysForUserOK with default headers values
func NewListPublicKeysForUserOK() *ListPublicKeysForUserOK {
	return &ListPublicKeysForUserOK{}
}

/*
ListPublicKeysForUserOK handles this case with default header values.

List of all public keys for given user
*/
type ListPublicKeysForUserOK struct {

	//Payload

	// isStream: false
	*models.PublicKeysListResponse
}

// IsSuccess returns true when this list public keys for user o k response has a 2xx status code
func (o *ListPublicKeysForUserOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list public keys for user o k response has a 3xx status code
func (o *ListPublicKeysForUserOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list public keys for user o k response has a 4xx status code
func (o *ListPublicKeysForUserOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list public keys for user o k response has a 5xx status code
func (o *ListPublicKeysForUserOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list public keys for user o k response a status code equal to that given
func (o *ListPublicKeysForUserOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list public keys for user o k response
func (o *ListPublicKeysForUserOK) Code() int {
	return 200
}

func (o *ListPublicKeysForUserOK) Error() string {
	return fmt.Sprintf("[GET /security/users/{user_id}/authn/public_keys][%d] listPublicKeysForUserOK", 200)
}

func (o *ListPublicKeysForUserOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.PublicKeysListResponse = new(models.PublicKeysListResponse)

	// response payload

	if err := consumer.Consume(response.Body(), o.PublicKeysListResponse); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListPublicKeysForUserNotFound creates a ListPublicKeysForUserNotFound with default headers values
func NewListPublicKeysForUserNotFound() *ListPublicKeysForUserNotFound {
	return &ListPublicKeysForUserNotFound{}
}

/*
ListPublicKeysForUserNotFound handles this case with default header values.

Not Found
*/
type ListPublicKeysForUserNotFound struct {

	//Payload

	// isStream: false
	*models.APIError
}

// IsSuccess returns true when this list public keys for user not found response has a 2xx status code
func (o *ListPublicKeysForUserNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list public keys for user not found response has a 3xx status code
func (o *ListPublicKeysForUserNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list public keys for user not found response has a 4xx status code
func (o *ListPublicKeysForUserNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list public keys for user not found response has a 5xx status code
func (o *ListPublicKeysForUserNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list public keys for user not found response a status code equal to that given
func (o *ListPublicKeysForUserNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list public keys for user not found response
func (o *ListPublicKeysForUserNotFound) Code() int {
	return 404
}

func (o *ListPublicKeysForUserNotFound) Error() string {
	return fmt.Sprintf("[GET /security/users/{user_id}/authn/public_keys][%d] listPublicKeysForUserNotFound", 404)
}

func (o *ListPublicKeysForUserNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}
