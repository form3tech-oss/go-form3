// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"log"
	"strconv"

	"github.com/form3tech-oss/go-form3/v2/pkg/client"
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// AccountRequestSubmissionRelationships account request submission relationships
// swagger:model AccountRequestSubmissionRelationships
type AccountRequestSubmissionRelationships struct {

	// account
	Account *AccountRequestSubmissionRelationshipsAccount `json:"account,omitempty"`

	// account request
	AccountRequest *AccountRequestSubmissionRelationshipsAccountRequest `json:"account_request,omitempty"`
}

func AccountRequestSubmissionRelationshipsWithDefaults(defaults client.Defaults) *AccountRequestSubmissionRelationships {
	return &AccountRequestSubmissionRelationships{

		Account: AccountRequestSubmissionRelationshipsAccountWithDefaults(defaults),

		AccountRequest: AccountRequestSubmissionRelationshipsAccountRequestWithDefaults(defaults),
	}
}

func (m *AccountRequestSubmissionRelationships) WithAccount(account AccountRequestSubmissionRelationshipsAccount) *AccountRequestSubmissionRelationships {

	m.Account = &account

	return m
}

func (m *AccountRequestSubmissionRelationships) WithoutAccount() *AccountRequestSubmissionRelationships {
	m.Account = nil
	return m
}

func (m *AccountRequestSubmissionRelationships) WithAccountRequest(accountRequest AccountRequestSubmissionRelationshipsAccountRequest) *AccountRequestSubmissionRelationships {

	m.AccountRequest = &accountRequest

	return m
}

func (m *AccountRequestSubmissionRelationships) WithoutAccountRequest() *AccountRequestSubmissionRelationships {
	m.AccountRequest = nil
	return m
}

// Validate validates this account request submission relationships
func (m *AccountRequestSubmissionRelationships) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAccount(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateAccountRequest(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AccountRequestSubmissionRelationships) validateAccount(formats strfmt.Registry) error {

	if swag.IsZero(m.Account) { // not required
		return nil
	}

	if m.Account != nil {
		if err := m.Account.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("account")
			}
			return err
		}
	}

	return nil
}

func (m *AccountRequestSubmissionRelationships) validateAccountRequest(formats strfmt.Registry) error {

	if swag.IsZero(m.AccountRequest) { // not required
		return nil
	}

	if m.AccountRequest != nil {
		if err := m.AccountRequest.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("account_request")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *AccountRequestSubmissionRelationships) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AccountRequestSubmissionRelationships) UnmarshalBinary(b []byte) error {
	var res AccountRequestSubmissionRelationships
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
func (m *AccountRequestSubmissionRelationships) Json() string {
	json, err := json.MarshalIndent(m, "  ", "  ")
	if err != nil {
		log.Fatal(err)
	}
	return string(json)
}

// AccountRequestSubmissionRelationshipsAccount account request submission relationships account
// swagger:model AccountRequestSubmissionRelationshipsAccount
type AccountRequestSubmissionRelationshipsAccount struct {

	// data
	Data []*AccountReference `json:"data,omitempty"`
}

func AccountRequestSubmissionRelationshipsAccountWithDefaults(defaults client.Defaults) *AccountRequestSubmissionRelationshipsAccount {
	return &AccountRequestSubmissionRelationshipsAccount{

		Data: make([]*AccountReference, 0),
	}
}

func (m *AccountRequestSubmissionRelationshipsAccount) WithData(data []*AccountReference) *AccountRequestSubmissionRelationshipsAccount {

	m.Data = data

	return m
}

// Validate validates this account request submission relationships account
func (m *AccountRequestSubmissionRelationshipsAccount) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AccountRequestSubmissionRelationshipsAccount) validateData(formats strfmt.Registry) error {

	if swag.IsZero(m.Data) { // not required
		return nil
	}

	for i := 0; i < len(m.Data); i++ {
		if swag.IsZero(m.Data[i]) { // not required
			continue
		}

		if m.Data[i] != nil {
			if err := m.Data[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("account" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *AccountRequestSubmissionRelationshipsAccount) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AccountRequestSubmissionRelationshipsAccount) UnmarshalBinary(b []byte) error {
	var res AccountRequestSubmissionRelationshipsAccount
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
func (m *AccountRequestSubmissionRelationshipsAccount) Json() string {
	json, err := json.MarshalIndent(m, "  ", "  ")
	if err != nil {
		log.Fatal(err)
	}
	return string(json)
}

// AccountRequestSubmissionRelationshipsAccountRequest account request submission relationships account request
// swagger:model AccountRequestSubmissionRelationshipsAccountRequest
type AccountRequestSubmissionRelationshipsAccountRequest struct {

	// data
	Data []*AccountRequest `json:"data,omitempty"`
}

func AccountRequestSubmissionRelationshipsAccountRequestWithDefaults(defaults client.Defaults) *AccountRequestSubmissionRelationshipsAccountRequest {
	return &AccountRequestSubmissionRelationshipsAccountRequest{

		Data: make([]*AccountRequest, 0),
	}
}

func (m *AccountRequestSubmissionRelationshipsAccountRequest) WithData(data []*AccountRequest) *AccountRequestSubmissionRelationshipsAccountRequest {

	m.Data = data

	return m
}

// Validate validates this account request submission relationships account request
func (m *AccountRequestSubmissionRelationshipsAccountRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AccountRequestSubmissionRelationshipsAccountRequest) validateData(formats strfmt.Registry) error {

	if swag.IsZero(m.Data) { // not required
		return nil
	}

	for i := 0; i < len(m.Data); i++ {
		if swag.IsZero(m.Data[i]) { // not required
			continue
		}

		if m.Data[i] != nil {
			if err := m.Data[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("account_request" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *AccountRequestSubmissionRelationshipsAccountRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AccountRequestSubmissionRelationshipsAccountRequest) UnmarshalBinary(b []byte) error {
	var res AccountRequestSubmissionRelationshipsAccountRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
func (m *AccountRequestSubmissionRelationshipsAccountRequest) Json() string {
	json, err := json.MarshalIndent(m, "  ", "  ")
	if err != nil {
		log.Fatal(err)
	}
	return string(json)
}
