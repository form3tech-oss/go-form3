// Code generated by go-swagger; DO NOT EDIT.

package branches

import (
	"context"
	"encoding/json"
	"fmt"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/form3tech-oss/go-form3/v6/pkg/generated/models"
)

// Client.PatchOrganisationBranchesID creates a new PatchOrganisationBranchesIDRequest object
// with the default values initialized.
func (c *Client) PatchOrganisationBranchesID() *PatchOrganisationBranchesIDRequest {
	var ()
	return &PatchOrganisationBranchesIDRequest{

		BranchAmendment: models.BranchAmendmentWithDefaults(c.Defaults),

		ID: c.Defaults.GetStrfmtUUID("PatchOrganisationBranchesID", "id"),

		timeout: cr.DefaultTimeout,

		transport: c.transport,
		formats:   c.formats,
	}
}

type PatchOrganisationBranchesIDRequest struct {

	/*BranchAmendRequest*/

	*models.BranchAmendment

	/*ID      Branches Id      */

	ID strfmt.UUID

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client

	transport runtime.ClientTransport
	formats   strfmt.Registry
}

func (o *PatchOrganisationBranchesIDRequest) FromJson(j string) (*PatchOrganisationBranchesIDRequest, error) {

	var m models.BranchAmendment
	if err := json.Unmarshal([]byte(j), &m); err != nil {
		return nil, fmt.Errorf("could not unmarshal JSON: %w", err)
	}

	o.BranchAmendment = &m

	return o, nil
}

func (o *PatchOrganisationBranchesIDRequest) WithBranchAmendRequest(branchAmendRequest models.BranchAmendment) *PatchOrganisationBranchesIDRequest {

	o.BranchAmendment = &branchAmendRequest

	return o
}

func (o *PatchOrganisationBranchesIDRequest) WithoutBranchAmendRequest() *PatchOrganisationBranchesIDRequest {

	o.BranchAmendment = &models.BranchAmendment{}

	return o
}

func (o *PatchOrganisationBranchesIDRequest) WithID(id strfmt.UUID) *PatchOrganisationBranchesIDRequest {

	o.ID = id

	return o
}

//////////////////
// WithContext adds the context to the patch organisation branches ID Request
func (o *PatchOrganisationBranchesIDRequest) WithContext(ctx context.Context) *PatchOrganisationBranchesIDRequest {
	o.Context = ctx
	return o
}

// WithHTTPClient adds the HTTPClient to the patch organisation branches ID Request
func (o *PatchOrganisationBranchesIDRequest) WithHTTPClient(client *http.Client) *PatchOrganisationBranchesIDRequest {
	o.HTTPClient = client
	return o
}

// WriteToRequest writes these Request to a swagger request
func (o *PatchOrganisationBranchesIDRequest) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// ISBODYPARAM
	if o.BranchAmendment != nil {
		if err := r.SetBodyParam(o.BranchAmendment); err != nil {
			return err
		}
	}

	// path param id
	if err := r.SetPathParam("id", o.ID.String()); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
