// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"log"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// MandateReturnSubmissionStatus mandate return submission status
// swagger:model MandateReturnSubmissionStatus
type MandateReturnSubmissionStatus string

const (

	// MandateReturnSubmissionStatusAccepted captures enum value "accepted"
	MandateReturnSubmissionStatusAccepted MandateReturnSubmissionStatus = "accepted"

	// MandateReturnSubmissionStatusReleasedToGateway captures enum value "released_to_gateway"
	MandateReturnSubmissionStatusReleasedToGateway MandateReturnSubmissionStatus = "released_to_gateway"

	// MandateReturnSubmissionStatusDeliveryConfirmed captures enum value "delivery_confirmed"
	MandateReturnSubmissionStatusDeliveryConfirmed MandateReturnSubmissionStatus = "delivery_confirmed"

	// MandateReturnSubmissionStatusDeliveryFailed captures enum value "delivery_failed"
	MandateReturnSubmissionStatusDeliveryFailed MandateReturnSubmissionStatus = "delivery_failed"

	// MandateReturnSubmissionStatusSubmitted captures enum value "submitted"
	MandateReturnSubmissionStatusSubmitted MandateReturnSubmissionStatus = "submitted"

	// MandateReturnSubmissionStatusValidationPending captures enum value "validation_pending"
	MandateReturnSubmissionStatusValidationPending MandateReturnSubmissionStatus = "validation_pending"

	// MandateReturnSubmissionStatusValidationPassed captures enum value "validation_passed"
	MandateReturnSubmissionStatusValidationPassed MandateReturnSubmissionStatus = "validation_passed"

	// MandateReturnSubmissionStatusQueuedForDelivery captures enum value "queued_for_delivery"
	MandateReturnSubmissionStatusQueuedForDelivery MandateReturnSubmissionStatus = "queued_for_delivery"
)

// for schema
var mandateReturnSubmissionStatusEnum []interface{}

func init() {
	var res []MandateReturnSubmissionStatus
	if err := json.Unmarshal([]byte(`["accepted","released_to_gateway","delivery_confirmed","delivery_failed","submitted","validation_pending","validation_passed","queued_for_delivery"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		mandateReturnSubmissionStatusEnum = append(mandateReturnSubmissionStatusEnum, v)
	}
}

func (m MandateReturnSubmissionStatus) validateMandateReturnSubmissionStatusEnum(path, location string, value MandateReturnSubmissionStatus) error {
	if err := validate.Enum(path, location, value, mandateReturnSubmissionStatusEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this mandate return submission status
func (m MandateReturnSubmissionStatus) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateMandateReturnSubmissionStatusEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *MandateReturnSubmissionStatus) Json() string {
	json, err := json.MarshalIndent(m, "  ", "  ")
	if err != nil {
		log.Fatal(err)
	}
	return string(json)
}
