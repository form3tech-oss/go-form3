// Code generated by go-swagger; DO NOT EDIT.

package name_verification_api

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// Client.GetOrganisationNameverifications creates a new GetOrganisationNameverificationsRequest object
// with the default values initialized.
func (c *Client) GetOrganisationNameverifications() *GetOrganisationNameverificationsRequest {
	var ()
	return &GetOrganisationNameverificationsRequest{

		FilterAccountClassification: c.Defaults.GetStringPtr("GetOrganisationNameverifications", "filter[account_classification]"),

		FilterAccountNumber: c.Defaults.GetStringPtr("GetOrganisationNameverifications", "filter[account_number]"),

		FilterAdmissionActualName: c.Defaults.GetStringPtr("GetOrganisationNameverifications", "filter[admission.actual_name]"),

		FilterAdmissionAnswer: c.Defaults.GetStringPtr("GetOrganisationNameverifications", "filter[admission.answer]"),

		FilterAdmissionCreatedDateFrom: c.Defaults.GetStrfmtDateTimePtr("GetOrganisationNameverifications", "filter[admission.created_date_from]"),

		FilterAdmissionCreatedDateTo: c.Defaults.GetStrfmtDateTimePtr("GetOrganisationNameverifications", "filter[admission.created_date_to]"),

		FilterAdmissionModifiedDateFrom: c.Defaults.GetStrfmtDateTimePtr("GetOrganisationNameverifications", "filter[admission.modified_date_from]"),

		FilterAdmissionModifiedDateTo: c.Defaults.GetStrfmtDateTimePtr("GetOrganisationNameverifications", "filter[admission.modified_date_to]"),

		FilterAdmissionReason: c.Defaults.GetStringPtr("GetOrganisationNameverifications", "filter[admission.reason]"),

		FilterAdmissionReasonCode: c.Defaults.GetStringPtr("GetOrganisationNameverifications", "filter[admission.reason_code]"),

		FilterAdmissionStatus: c.Defaults.GetStringPtr("GetOrganisationNameverifications", "filter[admission.status]"),

		FilterBankID: c.Defaults.GetStringPtr("GetOrganisationNameverifications", "filter[bank_id]"),

		FilterBankIDCode: c.Defaults.GetStringPtr("GetOrganisationNameverifications", "filter[bank_id_code]"),

		FilterCreatedDateFrom: c.Defaults.GetStrfmtDateTimePtr("GetOrganisationNameverifications", "filter[created_date_from]"),

		FilterCreatedDateTo: c.Defaults.GetStrfmtDateTimePtr("GetOrganisationNameverifications", "filter[created_date_to]"),

		FilterModifiedDateFrom: c.Defaults.GetStrfmtDateTimePtr("GetOrganisationNameverifications", "filter[modified_date_from]"),

		FilterModifiedDateTo: c.Defaults.GetStrfmtDateTimePtr("GetOrganisationNameverifications", "filter[modified_date_to]"),

		FilterName: make([]string, 0),

		FilterOrganisationID: c.Defaults.GetStrfmtUUIDPtr("GetOrganisationNameverifications", "filter[organisation_id]"),

		FilterSecondaryIdentification: c.Defaults.GetStringPtr("GetOrganisationNameverifications", "filter[secondary_identification]"),

		FilterSubmissionActualName: c.Defaults.GetStringPtr("GetOrganisationNameverifications", "filter[submission.actual_name]"),

		FilterSubmissionAnswer: c.Defaults.GetStringPtr("GetOrganisationNameverifications", "filter[submission.answer]"),

		FilterSubmissionCreatedDateFrom: c.Defaults.GetStrfmtDateTimePtr("GetOrganisationNameverifications", "filter[submission.created_date_from]"),

		FilterSubmissionCreatedDateTo: c.Defaults.GetStrfmtDateTimePtr("GetOrganisationNameverifications", "filter[submission.created_date_to]"),

		FilterSubmissionModifiedDateFrom: c.Defaults.GetStrfmtDateTimePtr("GetOrganisationNameverifications", "filter[submission.modified_date_from]"),

		FilterSubmissionModifiedDateTo: c.Defaults.GetStrfmtDateTimePtr("GetOrganisationNameverifications", "filter[submission.modified_date_to]"),

		FilterSubmissionReason: c.Defaults.GetStringPtr("GetOrganisationNameverifications", "filter[submission.reason]"),

		FilterSubmissionReasonCode: c.Defaults.GetStringPtr("GetOrganisationNameverifications", "filter[submission.reason_code]"),

		FilterSubmissionStatus: c.Defaults.GetStringPtr("GetOrganisationNameverifications", "filter[submission.status]"),

		PageNumber: c.Defaults.GetInt64Ptr("GetOrganisationNameverifications", "page[number]"),

		PageSize: c.Defaults.GetInt64Ptr("GetOrganisationNameverifications", "page[size]"),

		timeout: cr.DefaultTimeout,

		transport: c.transport,
		formats:   c.formats,
	}
}

type GetOrganisationNameverificationsRequest struct {

	/*FilterAccountClassification      Filter by account classification      */

	FilterAccountClassification *string

	/*FilterAccountNumber      Filter by account number      */

	FilterAccountNumber *string

	/*FilterAdmissionActualName      Filter by admission actual name      */

	FilterAdmissionActualName *string

	/*FilterAdmissionAnswer      Filter by admission answer      */

	FilterAdmissionAnswer *string

	/*FilterAdmissionCreatedDateFrom      Filter by admission created date from      */

	FilterAdmissionCreatedDateFrom *strfmt.DateTime

	/*FilterAdmissionCreatedDateTo      Filter by admission created date to      */

	FilterAdmissionCreatedDateTo *strfmt.DateTime

	/*FilterAdmissionModifiedDateFrom      Filter by admission modified date from      */

	FilterAdmissionModifiedDateFrom *strfmt.DateTime

	/*FilterAdmissionModifiedDateTo      Filter by admission modified date to      */

	FilterAdmissionModifiedDateTo *strfmt.DateTime

	/*FilterAdmissionReason      Filter by admission reason      */

	FilterAdmissionReason *string

	/*FilterAdmissionReasonCode      Filter by admission reason code      */

	FilterAdmissionReasonCode *string

	/*FilterAdmissionStatus      Filter by admission status      */

	FilterAdmissionStatus *string

	/*FilterBankID      Filter by bank id      */

	FilterBankID *string

	/*FilterBankIDCode      Filter by bank id code      */

	FilterBankIDCode *string

	/*FilterCreatedDateFrom      Filter by created date from      */

	FilterCreatedDateFrom *strfmt.DateTime

	/*FilterCreatedDateTo      Filter by created date to      */

	FilterCreatedDateTo *strfmt.DateTime

	/*FilterModifiedDateFrom      Filter by modified date from      */

	FilterModifiedDateFrom *strfmt.DateTime

	/*FilterModifiedDateTo      Filter by modified date to      */

	FilterModifiedDateTo *strfmt.DateTime

	/*FilterName      Filter by name      */

	FilterName []string

	/*FilterOrganisationID      Filter by organisation id      */

	FilterOrganisationID *strfmt.UUID

	/*FilterSecondaryIdentification      Filter by secondary identification      */

	FilterSecondaryIdentification *string

	/*FilterSubmissionActualName      Filter by submission actual name      */

	FilterSubmissionActualName *string

	/*FilterSubmissionAnswer      Filter by submission answer      */

	FilterSubmissionAnswer *string

	/*FilterSubmissionCreatedDateFrom      Filter by submission created date from      */

	FilterSubmissionCreatedDateFrom *strfmt.DateTime

	/*FilterSubmissionCreatedDateTo      Filter by submission created date to      */

	FilterSubmissionCreatedDateTo *strfmt.DateTime

	/*FilterSubmissionModifiedDateFrom      Filter by submission modified date from      */

	FilterSubmissionModifiedDateFrom *strfmt.DateTime

	/*FilterSubmissionModifiedDateTo      Filter by submission modified date to      */

	FilterSubmissionModifiedDateTo *strfmt.DateTime

	/*FilterSubmissionReason      Filter by submission reason      */

	FilterSubmissionReason *string

	/*FilterSubmissionReasonCode      Filter by submission reason code      */

	FilterSubmissionReasonCode *string

	/*FilterSubmissionStatus      Filter by submission status      */

	FilterSubmissionStatus *string

	/*PageNumber      Which page to select      */

	PageNumber *int64

	/*PageSize      Number of items to select      */

	PageSize *int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client

	transport runtime.ClientTransport
	formats   strfmt.Registry
}

func (o *GetOrganisationNameverificationsRequest) FromJson(j string) (*GetOrganisationNameverificationsRequest, error) {

	return o, nil
}

func (o *GetOrganisationNameverificationsRequest) WithFilterAccountClassification(filterAccountClassification string) *GetOrganisationNameverificationsRequest {

	o.FilterAccountClassification = &filterAccountClassification

	return o
}

func (o *GetOrganisationNameverificationsRequest) WithoutFilterAccountClassification() *GetOrganisationNameverificationsRequest {

	o.FilterAccountClassification = nil

	return o
}

func (o *GetOrganisationNameverificationsRequest) WithFilterAccountNumber(filterAccountNumber string) *GetOrganisationNameverificationsRequest {

	o.FilterAccountNumber = &filterAccountNumber

	return o
}

func (o *GetOrganisationNameverificationsRequest) WithoutFilterAccountNumber() *GetOrganisationNameverificationsRequest {

	o.FilterAccountNumber = nil

	return o
}

func (o *GetOrganisationNameverificationsRequest) WithFilterAdmissionActualName(filterAdmissionActualName string) *GetOrganisationNameverificationsRequest {

	o.FilterAdmissionActualName = &filterAdmissionActualName

	return o
}

func (o *GetOrganisationNameverificationsRequest) WithoutFilterAdmissionActualName() *GetOrganisationNameverificationsRequest {

	o.FilterAdmissionActualName = nil

	return o
}

func (o *GetOrganisationNameverificationsRequest) WithFilterAdmissionAnswer(filterAdmissionAnswer string) *GetOrganisationNameverificationsRequest {

	o.FilterAdmissionAnswer = &filterAdmissionAnswer

	return o
}

func (o *GetOrganisationNameverificationsRequest) WithoutFilterAdmissionAnswer() *GetOrganisationNameverificationsRequest {

	o.FilterAdmissionAnswer = nil

	return o
}

func (o *GetOrganisationNameverificationsRequest) WithFilterAdmissionCreatedDateFrom(filterAdmissionCreatedDateFrom strfmt.DateTime) *GetOrganisationNameverificationsRequest {

	o.FilterAdmissionCreatedDateFrom = &filterAdmissionCreatedDateFrom

	return o
}

func (o *GetOrganisationNameverificationsRequest) WithoutFilterAdmissionCreatedDateFrom() *GetOrganisationNameverificationsRequest {

	o.FilterAdmissionCreatedDateFrom = nil

	return o
}

func (o *GetOrganisationNameverificationsRequest) WithFilterAdmissionCreatedDateTo(filterAdmissionCreatedDateTo strfmt.DateTime) *GetOrganisationNameverificationsRequest {

	o.FilterAdmissionCreatedDateTo = &filterAdmissionCreatedDateTo

	return o
}

func (o *GetOrganisationNameverificationsRequest) WithoutFilterAdmissionCreatedDateTo() *GetOrganisationNameverificationsRequest {

	o.FilterAdmissionCreatedDateTo = nil

	return o
}

func (o *GetOrganisationNameverificationsRequest) WithFilterAdmissionModifiedDateFrom(filterAdmissionModifiedDateFrom strfmt.DateTime) *GetOrganisationNameverificationsRequest {

	o.FilterAdmissionModifiedDateFrom = &filterAdmissionModifiedDateFrom

	return o
}

func (o *GetOrganisationNameverificationsRequest) WithoutFilterAdmissionModifiedDateFrom() *GetOrganisationNameverificationsRequest {

	o.FilterAdmissionModifiedDateFrom = nil

	return o
}

func (o *GetOrganisationNameverificationsRequest) WithFilterAdmissionModifiedDateTo(filterAdmissionModifiedDateTo strfmt.DateTime) *GetOrganisationNameverificationsRequest {

	o.FilterAdmissionModifiedDateTo = &filterAdmissionModifiedDateTo

	return o
}

func (o *GetOrganisationNameverificationsRequest) WithoutFilterAdmissionModifiedDateTo() *GetOrganisationNameverificationsRequest {

	o.FilterAdmissionModifiedDateTo = nil

	return o
}

func (o *GetOrganisationNameverificationsRequest) WithFilterAdmissionReason(filterAdmissionReason string) *GetOrganisationNameverificationsRequest {

	o.FilterAdmissionReason = &filterAdmissionReason

	return o
}

func (o *GetOrganisationNameverificationsRequest) WithoutFilterAdmissionReason() *GetOrganisationNameverificationsRequest {

	o.FilterAdmissionReason = nil

	return o
}

func (o *GetOrganisationNameverificationsRequest) WithFilterAdmissionReasonCode(filterAdmissionReasonCode string) *GetOrganisationNameverificationsRequest {

	o.FilterAdmissionReasonCode = &filterAdmissionReasonCode

	return o
}

func (o *GetOrganisationNameverificationsRequest) WithoutFilterAdmissionReasonCode() *GetOrganisationNameverificationsRequest {

	o.FilterAdmissionReasonCode = nil

	return o
}

func (o *GetOrganisationNameverificationsRequest) WithFilterAdmissionStatus(filterAdmissionStatus string) *GetOrganisationNameverificationsRequest {

	o.FilterAdmissionStatus = &filterAdmissionStatus

	return o
}

func (o *GetOrganisationNameverificationsRequest) WithoutFilterAdmissionStatus() *GetOrganisationNameverificationsRequest {

	o.FilterAdmissionStatus = nil

	return o
}

func (o *GetOrganisationNameverificationsRequest) WithFilterBankID(filterBankID string) *GetOrganisationNameverificationsRequest {

	o.FilterBankID = &filterBankID

	return o
}

func (o *GetOrganisationNameverificationsRequest) WithoutFilterBankID() *GetOrganisationNameverificationsRequest {

	o.FilterBankID = nil

	return o
}

func (o *GetOrganisationNameverificationsRequest) WithFilterBankIDCode(filterBankIDCode string) *GetOrganisationNameverificationsRequest {

	o.FilterBankIDCode = &filterBankIDCode

	return o
}

func (o *GetOrganisationNameverificationsRequest) WithoutFilterBankIDCode() *GetOrganisationNameverificationsRequest {

	o.FilterBankIDCode = nil

	return o
}

func (o *GetOrganisationNameverificationsRequest) WithFilterCreatedDateFrom(filterCreatedDateFrom strfmt.DateTime) *GetOrganisationNameverificationsRequest {

	o.FilterCreatedDateFrom = &filterCreatedDateFrom

	return o
}

func (o *GetOrganisationNameverificationsRequest) WithoutFilterCreatedDateFrom() *GetOrganisationNameverificationsRequest {

	o.FilterCreatedDateFrom = nil

	return o
}

func (o *GetOrganisationNameverificationsRequest) WithFilterCreatedDateTo(filterCreatedDateTo strfmt.DateTime) *GetOrganisationNameverificationsRequest {

	o.FilterCreatedDateTo = &filterCreatedDateTo

	return o
}

func (o *GetOrganisationNameverificationsRequest) WithoutFilterCreatedDateTo() *GetOrganisationNameverificationsRequest {

	o.FilterCreatedDateTo = nil

	return o
}

func (o *GetOrganisationNameverificationsRequest) WithFilterModifiedDateFrom(filterModifiedDateFrom strfmt.DateTime) *GetOrganisationNameverificationsRequest {

	o.FilterModifiedDateFrom = &filterModifiedDateFrom

	return o
}

func (o *GetOrganisationNameverificationsRequest) WithoutFilterModifiedDateFrom() *GetOrganisationNameverificationsRequest {

	o.FilterModifiedDateFrom = nil

	return o
}

func (o *GetOrganisationNameverificationsRequest) WithFilterModifiedDateTo(filterModifiedDateTo strfmt.DateTime) *GetOrganisationNameverificationsRequest {

	o.FilterModifiedDateTo = &filterModifiedDateTo

	return o
}

func (o *GetOrganisationNameverificationsRequest) WithoutFilterModifiedDateTo() *GetOrganisationNameverificationsRequest {

	o.FilterModifiedDateTo = nil

	return o
}

func (o *GetOrganisationNameverificationsRequest) WithFilterName(filterName []string) *GetOrganisationNameverificationsRequest {

	o.FilterName = filterName

	return o
}

func (o *GetOrganisationNameverificationsRequest) WithoutFilterName() *GetOrganisationNameverificationsRequest {

	o.FilterName = nil

	return o
}

func (o *GetOrganisationNameverificationsRequest) WithFilterOrganisationID(filterOrganisationID strfmt.UUID) *GetOrganisationNameverificationsRequest {

	o.FilterOrganisationID = &filterOrganisationID

	return o
}

func (o *GetOrganisationNameverificationsRequest) WithoutFilterOrganisationID() *GetOrganisationNameverificationsRequest {

	o.FilterOrganisationID = nil

	return o
}

func (o *GetOrganisationNameverificationsRequest) WithFilterSecondaryIdentification(filterSecondaryIdentification string) *GetOrganisationNameverificationsRequest {

	o.FilterSecondaryIdentification = &filterSecondaryIdentification

	return o
}

func (o *GetOrganisationNameverificationsRequest) WithoutFilterSecondaryIdentification() *GetOrganisationNameverificationsRequest {

	o.FilterSecondaryIdentification = nil

	return o
}

func (o *GetOrganisationNameverificationsRequest) WithFilterSubmissionActualName(filterSubmissionActualName string) *GetOrganisationNameverificationsRequest {

	o.FilterSubmissionActualName = &filterSubmissionActualName

	return o
}

func (o *GetOrganisationNameverificationsRequest) WithoutFilterSubmissionActualName() *GetOrganisationNameverificationsRequest {

	o.FilterSubmissionActualName = nil

	return o
}

func (o *GetOrganisationNameverificationsRequest) WithFilterSubmissionAnswer(filterSubmissionAnswer string) *GetOrganisationNameverificationsRequest {

	o.FilterSubmissionAnswer = &filterSubmissionAnswer

	return o
}

func (o *GetOrganisationNameverificationsRequest) WithoutFilterSubmissionAnswer() *GetOrganisationNameverificationsRequest {

	o.FilterSubmissionAnswer = nil

	return o
}

func (o *GetOrganisationNameverificationsRequest) WithFilterSubmissionCreatedDateFrom(filterSubmissionCreatedDateFrom strfmt.DateTime) *GetOrganisationNameverificationsRequest {

	o.FilterSubmissionCreatedDateFrom = &filterSubmissionCreatedDateFrom

	return o
}

func (o *GetOrganisationNameverificationsRequest) WithoutFilterSubmissionCreatedDateFrom() *GetOrganisationNameverificationsRequest {

	o.FilterSubmissionCreatedDateFrom = nil

	return o
}

func (o *GetOrganisationNameverificationsRequest) WithFilterSubmissionCreatedDateTo(filterSubmissionCreatedDateTo strfmt.DateTime) *GetOrganisationNameverificationsRequest {

	o.FilterSubmissionCreatedDateTo = &filterSubmissionCreatedDateTo

	return o
}

func (o *GetOrganisationNameverificationsRequest) WithoutFilterSubmissionCreatedDateTo() *GetOrganisationNameverificationsRequest {

	o.FilterSubmissionCreatedDateTo = nil

	return o
}

func (o *GetOrganisationNameverificationsRequest) WithFilterSubmissionModifiedDateFrom(filterSubmissionModifiedDateFrom strfmt.DateTime) *GetOrganisationNameverificationsRequest {

	o.FilterSubmissionModifiedDateFrom = &filterSubmissionModifiedDateFrom

	return o
}

func (o *GetOrganisationNameverificationsRequest) WithoutFilterSubmissionModifiedDateFrom() *GetOrganisationNameverificationsRequest {

	o.FilterSubmissionModifiedDateFrom = nil

	return o
}

func (o *GetOrganisationNameverificationsRequest) WithFilterSubmissionModifiedDateTo(filterSubmissionModifiedDateTo strfmt.DateTime) *GetOrganisationNameverificationsRequest {

	o.FilterSubmissionModifiedDateTo = &filterSubmissionModifiedDateTo

	return o
}

func (o *GetOrganisationNameverificationsRequest) WithoutFilterSubmissionModifiedDateTo() *GetOrganisationNameverificationsRequest {

	o.FilterSubmissionModifiedDateTo = nil

	return o
}

func (o *GetOrganisationNameverificationsRequest) WithFilterSubmissionReason(filterSubmissionReason string) *GetOrganisationNameverificationsRequest {

	o.FilterSubmissionReason = &filterSubmissionReason

	return o
}

func (o *GetOrganisationNameverificationsRequest) WithoutFilterSubmissionReason() *GetOrganisationNameverificationsRequest {

	o.FilterSubmissionReason = nil

	return o
}

func (o *GetOrganisationNameverificationsRequest) WithFilterSubmissionReasonCode(filterSubmissionReasonCode string) *GetOrganisationNameverificationsRequest {

	o.FilterSubmissionReasonCode = &filterSubmissionReasonCode

	return o
}

func (o *GetOrganisationNameverificationsRequest) WithoutFilterSubmissionReasonCode() *GetOrganisationNameverificationsRequest {

	o.FilterSubmissionReasonCode = nil

	return o
}

func (o *GetOrganisationNameverificationsRequest) WithFilterSubmissionStatus(filterSubmissionStatus string) *GetOrganisationNameverificationsRequest {

	o.FilterSubmissionStatus = &filterSubmissionStatus

	return o
}

func (o *GetOrganisationNameverificationsRequest) WithoutFilterSubmissionStatus() *GetOrganisationNameverificationsRequest {

	o.FilterSubmissionStatus = nil

	return o
}

func (o *GetOrganisationNameverificationsRequest) WithPageNumber(pageNumber int64) *GetOrganisationNameverificationsRequest {

	o.PageNumber = &pageNumber

	return o
}

func (o *GetOrganisationNameverificationsRequest) WithoutPageNumber() *GetOrganisationNameverificationsRequest {

	o.PageNumber = nil

	return o
}

func (o *GetOrganisationNameverificationsRequest) WithPageSize(pageSize int64) *GetOrganisationNameverificationsRequest {

	o.PageSize = &pageSize

	return o
}

func (o *GetOrganisationNameverificationsRequest) WithoutPageSize() *GetOrganisationNameverificationsRequest {

	o.PageSize = nil

	return o
}

// ////////////////
// WithContext adds the context to the get organisation nameverifications Request
func (o *GetOrganisationNameverificationsRequest) WithContext(ctx context.Context) *GetOrganisationNameverificationsRequest {
	o.Context = ctx
	return o
}

// WithHTTPClient adds the HTTPClient to the get organisation nameverifications Request
func (o *GetOrganisationNameverificationsRequest) WithHTTPClient(client *http.Client) *GetOrganisationNameverificationsRequest {
	o.HTTPClient = client
	return o
}

// WriteToRequest writes these Request to a swagger request
func (o *GetOrganisationNameverificationsRequest) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.FilterAccountClassification != nil {

		// query param filter[account_classification]
		var qrFilterAccountClassification string
		if o.FilterAccountClassification != nil {
			qrFilterAccountClassification = *o.FilterAccountClassification
		}
		qFilterAccountClassification := qrFilterAccountClassification
		if qFilterAccountClassification != "" {
			if err := r.SetQueryParam("filter[account_classification]", qFilterAccountClassification); err != nil {
				return err
			}
		}

	}

	if o.FilterAccountNumber != nil {

		// query param filter[account_number]
		var qrFilterAccountNumber string
		if o.FilterAccountNumber != nil {
			qrFilterAccountNumber = *o.FilterAccountNumber
		}
		qFilterAccountNumber := qrFilterAccountNumber
		if qFilterAccountNumber != "" {
			if err := r.SetQueryParam("filter[account_number]", qFilterAccountNumber); err != nil {
				return err
			}
		}

	}

	if o.FilterAdmissionActualName != nil {

		// query param filter[admission.actual_name]
		var qrFilterAdmissionActualName string
		if o.FilterAdmissionActualName != nil {
			qrFilterAdmissionActualName = *o.FilterAdmissionActualName
		}
		qFilterAdmissionActualName := qrFilterAdmissionActualName
		if qFilterAdmissionActualName != "" {
			if err := r.SetQueryParam("filter[admission.actual_name]", qFilterAdmissionActualName); err != nil {
				return err
			}
		}

	}

	if o.FilterAdmissionAnswer != nil {

		// query param filter[admission.answer]
		var qrFilterAdmissionAnswer string
		if o.FilterAdmissionAnswer != nil {
			qrFilterAdmissionAnswer = *o.FilterAdmissionAnswer
		}
		qFilterAdmissionAnswer := qrFilterAdmissionAnswer
		if qFilterAdmissionAnswer != "" {
			if err := r.SetQueryParam("filter[admission.answer]", qFilterAdmissionAnswer); err != nil {
				return err
			}
		}

	}

	if o.FilterAdmissionCreatedDateFrom != nil {

		// query param filter[admission.created_date_from]
		var qrFilterAdmissionCreatedDateFrom strfmt.DateTime
		if o.FilterAdmissionCreatedDateFrom != nil {
			qrFilterAdmissionCreatedDateFrom = *o.FilterAdmissionCreatedDateFrom
		}
		qFilterAdmissionCreatedDateFrom := qrFilterAdmissionCreatedDateFrom.String()
		if qFilterAdmissionCreatedDateFrom != "" {
			if err := r.SetQueryParam("filter[admission.created_date_from]", qFilterAdmissionCreatedDateFrom); err != nil {
				return err
			}
		}

	}

	if o.FilterAdmissionCreatedDateTo != nil {

		// query param filter[admission.created_date_to]
		var qrFilterAdmissionCreatedDateTo strfmt.DateTime
		if o.FilterAdmissionCreatedDateTo != nil {
			qrFilterAdmissionCreatedDateTo = *o.FilterAdmissionCreatedDateTo
		}
		qFilterAdmissionCreatedDateTo := qrFilterAdmissionCreatedDateTo.String()
		if qFilterAdmissionCreatedDateTo != "" {
			if err := r.SetQueryParam("filter[admission.created_date_to]", qFilterAdmissionCreatedDateTo); err != nil {
				return err
			}
		}

	}

	if o.FilterAdmissionModifiedDateFrom != nil {

		// query param filter[admission.modified_date_from]
		var qrFilterAdmissionModifiedDateFrom strfmt.DateTime
		if o.FilterAdmissionModifiedDateFrom != nil {
			qrFilterAdmissionModifiedDateFrom = *o.FilterAdmissionModifiedDateFrom
		}
		qFilterAdmissionModifiedDateFrom := qrFilterAdmissionModifiedDateFrom.String()
		if qFilterAdmissionModifiedDateFrom != "" {
			if err := r.SetQueryParam("filter[admission.modified_date_from]", qFilterAdmissionModifiedDateFrom); err != nil {
				return err
			}
		}

	}

	if o.FilterAdmissionModifiedDateTo != nil {

		// query param filter[admission.modified_date_to]
		var qrFilterAdmissionModifiedDateTo strfmt.DateTime
		if o.FilterAdmissionModifiedDateTo != nil {
			qrFilterAdmissionModifiedDateTo = *o.FilterAdmissionModifiedDateTo
		}
		qFilterAdmissionModifiedDateTo := qrFilterAdmissionModifiedDateTo.String()
		if qFilterAdmissionModifiedDateTo != "" {
			if err := r.SetQueryParam("filter[admission.modified_date_to]", qFilterAdmissionModifiedDateTo); err != nil {
				return err
			}
		}

	}

	if o.FilterAdmissionReason != nil {

		// query param filter[admission.reason]
		var qrFilterAdmissionReason string
		if o.FilterAdmissionReason != nil {
			qrFilterAdmissionReason = *o.FilterAdmissionReason
		}
		qFilterAdmissionReason := qrFilterAdmissionReason
		if qFilterAdmissionReason != "" {
			if err := r.SetQueryParam("filter[admission.reason]", qFilterAdmissionReason); err != nil {
				return err
			}
		}

	}

	if o.FilterAdmissionReasonCode != nil {

		// query param filter[admission.reason_code]
		var qrFilterAdmissionReasonCode string
		if o.FilterAdmissionReasonCode != nil {
			qrFilterAdmissionReasonCode = *o.FilterAdmissionReasonCode
		}
		qFilterAdmissionReasonCode := qrFilterAdmissionReasonCode
		if qFilterAdmissionReasonCode != "" {
			if err := r.SetQueryParam("filter[admission.reason_code]", qFilterAdmissionReasonCode); err != nil {
				return err
			}
		}

	}

	if o.FilterAdmissionStatus != nil {

		// query param filter[admission.status]
		var qrFilterAdmissionStatus string
		if o.FilterAdmissionStatus != nil {
			qrFilterAdmissionStatus = *o.FilterAdmissionStatus
		}
		qFilterAdmissionStatus := qrFilterAdmissionStatus
		if qFilterAdmissionStatus != "" {
			if err := r.SetQueryParam("filter[admission.status]", qFilterAdmissionStatus); err != nil {
				return err
			}
		}

	}

	if o.FilterBankID != nil {

		// query param filter[bank_id]
		var qrFilterBankID string
		if o.FilterBankID != nil {
			qrFilterBankID = *o.FilterBankID
		}
		qFilterBankID := qrFilterBankID
		if qFilterBankID != "" {
			if err := r.SetQueryParam("filter[bank_id]", qFilterBankID); err != nil {
				return err
			}
		}

	}

	if o.FilterBankIDCode != nil {

		// query param filter[bank_id_code]
		var qrFilterBankIDCode string
		if o.FilterBankIDCode != nil {
			qrFilterBankIDCode = *o.FilterBankIDCode
		}
		qFilterBankIDCode := qrFilterBankIDCode
		if qFilterBankIDCode != "" {
			if err := r.SetQueryParam("filter[bank_id_code]", qFilterBankIDCode); err != nil {
				return err
			}
		}

	}

	if o.FilterCreatedDateFrom != nil {

		// query param filter[created_date_from]
		var qrFilterCreatedDateFrom strfmt.DateTime
		if o.FilterCreatedDateFrom != nil {
			qrFilterCreatedDateFrom = *o.FilterCreatedDateFrom
		}
		qFilterCreatedDateFrom := qrFilterCreatedDateFrom.String()
		if qFilterCreatedDateFrom != "" {
			if err := r.SetQueryParam("filter[created_date_from]", qFilterCreatedDateFrom); err != nil {
				return err
			}
		}

	}

	if o.FilterCreatedDateTo != nil {

		// query param filter[created_date_to]
		var qrFilterCreatedDateTo strfmt.DateTime
		if o.FilterCreatedDateTo != nil {
			qrFilterCreatedDateTo = *o.FilterCreatedDateTo
		}
		qFilterCreatedDateTo := qrFilterCreatedDateTo.String()
		if qFilterCreatedDateTo != "" {
			if err := r.SetQueryParam("filter[created_date_to]", qFilterCreatedDateTo); err != nil {
				return err
			}
		}

	}

	if o.FilterModifiedDateFrom != nil {

		// query param filter[modified_date_from]
		var qrFilterModifiedDateFrom strfmt.DateTime
		if o.FilterModifiedDateFrom != nil {
			qrFilterModifiedDateFrom = *o.FilterModifiedDateFrom
		}
		qFilterModifiedDateFrom := qrFilterModifiedDateFrom.String()
		if qFilterModifiedDateFrom != "" {
			if err := r.SetQueryParam("filter[modified_date_from]", qFilterModifiedDateFrom); err != nil {
				return err
			}
		}

	}

	if o.FilterModifiedDateTo != nil {

		// query param filter[modified_date_to]
		var qrFilterModifiedDateTo strfmt.DateTime
		if o.FilterModifiedDateTo != nil {
			qrFilterModifiedDateTo = *o.FilterModifiedDateTo
		}
		qFilterModifiedDateTo := qrFilterModifiedDateTo.String()
		if qFilterModifiedDateTo != "" {
			if err := r.SetQueryParam("filter[modified_date_to]", qFilterModifiedDateTo); err != nil {
				return err
			}
		}

	}

	valuesFilterName := o.FilterName

	joinedFilterName := swag.JoinByFormat(valuesFilterName, "")
	// query array param filter[name]
	if err := r.SetQueryParam("filter[name]", joinedFilterName...); err != nil {
		return err
	}

	if o.FilterOrganisationID != nil {

		// query param filter[organisation_id]
		var qrFilterOrganisationID strfmt.UUID
		if o.FilterOrganisationID != nil {
			qrFilterOrganisationID = *o.FilterOrganisationID
		}
		qFilterOrganisationID := qrFilterOrganisationID.String()
		if qFilterOrganisationID != "" {
			if err := r.SetQueryParam("filter[organisation_id]", qFilterOrganisationID); err != nil {
				return err
			}
		}

	}

	if o.FilterSecondaryIdentification != nil {

		// query param filter[secondary_identification]
		var qrFilterSecondaryIdentification string
		if o.FilterSecondaryIdentification != nil {
			qrFilterSecondaryIdentification = *o.FilterSecondaryIdentification
		}
		qFilterSecondaryIdentification := qrFilterSecondaryIdentification
		if qFilterSecondaryIdentification != "" {
			if err := r.SetQueryParam("filter[secondary_identification]", qFilterSecondaryIdentification); err != nil {
				return err
			}
		}

	}

	if o.FilterSubmissionActualName != nil {

		// query param filter[submission.actual_name]
		var qrFilterSubmissionActualName string
		if o.FilterSubmissionActualName != nil {
			qrFilterSubmissionActualName = *o.FilterSubmissionActualName
		}
		qFilterSubmissionActualName := qrFilterSubmissionActualName
		if qFilterSubmissionActualName != "" {
			if err := r.SetQueryParam("filter[submission.actual_name]", qFilterSubmissionActualName); err != nil {
				return err
			}
		}

	}

	if o.FilterSubmissionAnswer != nil {

		// query param filter[submission.answer]
		var qrFilterSubmissionAnswer string
		if o.FilterSubmissionAnswer != nil {
			qrFilterSubmissionAnswer = *o.FilterSubmissionAnswer
		}
		qFilterSubmissionAnswer := qrFilterSubmissionAnswer
		if qFilterSubmissionAnswer != "" {
			if err := r.SetQueryParam("filter[submission.answer]", qFilterSubmissionAnswer); err != nil {
				return err
			}
		}

	}

	if o.FilterSubmissionCreatedDateFrom != nil {

		// query param filter[submission.created_date_from]
		var qrFilterSubmissionCreatedDateFrom strfmt.DateTime
		if o.FilterSubmissionCreatedDateFrom != nil {
			qrFilterSubmissionCreatedDateFrom = *o.FilterSubmissionCreatedDateFrom
		}
		qFilterSubmissionCreatedDateFrom := qrFilterSubmissionCreatedDateFrom.String()
		if qFilterSubmissionCreatedDateFrom != "" {
			if err := r.SetQueryParam("filter[submission.created_date_from]", qFilterSubmissionCreatedDateFrom); err != nil {
				return err
			}
		}

	}

	if o.FilterSubmissionCreatedDateTo != nil {

		// query param filter[submission.created_date_to]
		var qrFilterSubmissionCreatedDateTo strfmt.DateTime
		if o.FilterSubmissionCreatedDateTo != nil {
			qrFilterSubmissionCreatedDateTo = *o.FilterSubmissionCreatedDateTo
		}
		qFilterSubmissionCreatedDateTo := qrFilterSubmissionCreatedDateTo.String()
		if qFilterSubmissionCreatedDateTo != "" {
			if err := r.SetQueryParam("filter[submission.created_date_to]", qFilterSubmissionCreatedDateTo); err != nil {
				return err
			}
		}

	}

	if o.FilterSubmissionModifiedDateFrom != nil {

		// query param filter[submission.modified_date_from]
		var qrFilterSubmissionModifiedDateFrom strfmt.DateTime
		if o.FilterSubmissionModifiedDateFrom != nil {
			qrFilterSubmissionModifiedDateFrom = *o.FilterSubmissionModifiedDateFrom
		}
		qFilterSubmissionModifiedDateFrom := qrFilterSubmissionModifiedDateFrom.String()
		if qFilterSubmissionModifiedDateFrom != "" {
			if err := r.SetQueryParam("filter[submission.modified_date_from]", qFilterSubmissionModifiedDateFrom); err != nil {
				return err
			}
		}

	}

	if o.FilterSubmissionModifiedDateTo != nil {

		// query param filter[submission.modified_date_to]
		var qrFilterSubmissionModifiedDateTo strfmt.DateTime
		if o.FilterSubmissionModifiedDateTo != nil {
			qrFilterSubmissionModifiedDateTo = *o.FilterSubmissionModifiedDateTo
		}
		qFilterSubmissionModifiedDateTo := qrFilterSubmissionModifiedDateTo.String()
		if qFilterSubmissionModifiedDateTo != "" {
			if err := r.SetQueryParam("filter[submission.modified_date_to]", qFilterSubmissionModifiedDateTo); err != nil {
				return err
			}
		}

	}

	if o.FilterSubmissionReason != nil {

		// query param filter[submission.reason]
		var qrFilterSubmissionReason string
		if o.FilterSubmissionReason != nil {
			qrFilterSubmissionReason = *o.FilterSubmissionReason
		}
		qFilterSubmissionReason := qrFilterSubmissionReason
		if qFilterSubmissionReason != "" {
			if err := r.SetQueryParam("filter[submission.reason]", qFilterSubmissionReason); err != nil {
				return err
			}
		}

	}

	if o.FilterSubmissionReasonCode != nil {

		// query param filter[submission.reason_code]
		var qrFilterSubmissionReasonCode string
		if o.FilterSubmissionReasonCode != nil {
			qrFilterSubmissionReasonCode = *o.FilterSubmissionReasonCode
		}
		qFilterSubmissionReasonCode := qrFilterSubmissionReasonCode
		if qFilterSubmissionReasonCode != "" {
			if err := r.SetQueryParam("filter[submission.reason_code]", qFilterSubmissionReasonCode); err != nil {
				return err
			}
		}

	}

	if o.FilterSubmissionStatus != nil {

		// query param filter[submission.status]
		var qrFilterSubmissionStatus string
		if o.FilterSubmissionStatus != nil {
			qrFilterSubmissionStatus = *o.FilterSubmissionStatus
		}
		qFilterSubmissionStatus := qrFilterSubmissionStatus
		if qFilterSubmissionStatus != "" {
			if err := r.SetQueryParam("filter[submission.status]", qFilterSubmissionStatus); err != nil {
				return err
			}
		}

	}

	if o.PageNumber != nil {

		// query param page[number]
		var qrPageNumber int64
		if o.PageNumber != nil {
			qrPageNumber = *o.PageNumber
		}
		qPageNumber := swag.FormatInt64(qrPageNumber)
		if qPageNumber != "" {
			if err := r.SetQueryParam("page[number]", qPageNumber); err != nil {
				return err
			}
		}

	}

	if o.PageSize != nil {

		// query param page[size]
		var qrPageSize int64
		if o.PageSize != nil {
			qrPageSize = *o.PageSize
		}
		qPageSize := swag.FormatInt64(qrPageSize)
		if qPageSize != "" {
			if err := r.SetQueryParam("page[size]", qPageSize); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
