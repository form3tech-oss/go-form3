// Code generated by go-swagger; DO NOT EDIT.

package account_request

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/form3tech-oss/go-form3/v2/pkg/generated/models"
)

// PostAccountRequestsReader is a Reader for the PostAccountRequests structure.
type PostAccountRequestsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostAccountRequestsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewPostAccountRequestsCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPostAccountRequestsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewPostAccountRequestsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewPostAccountRequestsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewPostAccountRequestsConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewPostAccountRequestsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 502:
		result := NewPostAccountRequestsBadGateway()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewPostAccountRequestsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewPostAccountRequestsGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostAccountRequestsCreated creates a PostAccountRequestsCreated with default headers values
func NewPostAccountRequestsCreated() *PostAccountRequestsCreated {
	return &PostAccountRequestsCreated{}
}

/*PostAccountRequestsCreated handles this case with default header values.

Account Request creation response
*/
type PostAccountRequestsCreated struct {

	//Payload

	// isStream: false
	*models.AccountRequestResponse
}

func (o *PostAccountRequestsCreated) Error() string {
	return fmt.Sprintf("[POST /organisation/accountrequests][%d] postAccountRequestsCreated", 201)
}

func (o *PostAccountRequestsCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.AccountRequestResponse = new(models.AccountRequestResponse)

	// response payload

	if err := consumer.Consume(response.Body(), o.AccountRequestResponse); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAccountRequestsBadRequest creates a PostAccountRequestsBadRequest with default headers values
func NewPostAccountRequestsBadRequest() *PostAccountRequestsBadRequest {
	return &PostAccountRequestsBadRequest{}
}

/*PostAccountRequestsBadRequest handles this case with default header values.

Account Request creation error
*/
type PostAccountRequestsBadRequest struct {

	//Payload

	// isStream: false
	*models.APIError
}

func (o *PostAccountRequestsBadRequest) Error() string {
	return fmt.Sprintf("[POST /organisation/accountrequests][%d] postAccountRequestsBadRequest", 400)
}

func (o *PostAccountRequestsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAccountRequestsUnauthorized creates a PostAccountRequestsUnauthorized with default headers values
func NewPostAccountRequestsUnauthorized() *PostAccountRequestsUnauthorized {
	return &PostAccountRequestsUnauthorized{}
}

/*PostAccountRequestsUnauthorized handles this case with default header values.

Unauthorized
*/
type PostAccountRequestsUnauthorized struct {

	//Payload

	// isStream: false
	*models.APIError
}

func (o *PostAccountRequestsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /organisation/accountrequests][%d] postAccountRequestsUnauthorized", 401)
}

func (o *PostAccountRequestsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAccountRequestsForbidden creates a PostAccountRequestsForbidden with default headers values
func NewPostAccountRequestsForbidden() *PostAccountRequestsForbidden {
	return &PostAccountRequestsForbidden{}
}

/*PostAccountRequestsForbidden handles this case with default header values.

Forbidden
*/
type PostAccountRequestsForbidden struct {

	//Payload

	// isStream: false
	*models.APIError
}

func (o *PostAccountRequestsForbidden) Error() string {
	return fmt.Sprintf("[POST /organisation/accountrequests][%d] postAccountRequestsForbidden", 403)
}

func (o *PostAccountRequestsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAccountRequestsConflict creates a PostAccountRequestsConflict with default headers values
func NewPostAccountRequestsConflict() *PostAccountRequestsConflict {
	return &PostAccountRequestsConflict{}
}

/*PostAccountRequestsConflict handles this case with default header values.

Conflict
*/
type PostAccountRequestsConflict struct {

	//Payload

	// isStream: false
	*models.APIError
}

func (o *PostAccountRequestsConflict) Error() string {
	return fmt.Sprintf("[POST /organisation/accountrequests][%d] postAccountRequestsConflict", 409)
}

func (o *PostAccountRequestsConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAccountRequestsInternalServerError creates a PostAccountRequestsInternalServerError with default headers values
func NewPostAccountRequestsInternalServerError() *PostAccountRequestsInternalServerError {
	return &PostAccountRequestsInternalServerError{}
}

/*PostAccountRequestsInternalServerError handles this case with default header values.

Internal Server Error
*/
type PostAccountRequestsInternalServerError struct {

	//Payload

	// isStream: false
	*models.APIError
}

func (o *PostAccountRequestsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /organisation/accountrequests][%d] postAccountRequestsInternalServerError", 500)
}

func (o *PostAccountRequestsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAccountRequestsBadGateway creates a PostAccountRequestsBadGateway with default headers values
func NewPostAccountRequestsBadGateway() *PostAccountRequestsBadGateway {
	return &PostAccountRequestsBadGateway{}
}

/*PostAccountRequestsBadGateway handles this case with default header values.

Bad Gateway
*/
type PostAccountRequestsBadGateway struct {

	//Payload

	// isStream: false
	*models.APIError
}

func (o *PostAccountRequestsBadGateway) Error() string {
	return fmt.Sprintf("[POST /organisation/accountrequests][%d] postAccountRequestsBadGateway", 502)
}

func (o *PostAccountRequestsBadGateway) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAccountRequestsServiceUnavailable creates a PostAccountRequestsServiceUnavailable with default headers values
func NewPostAccountRequestsServiceUnavailable() *PostAccountRequestsServiceUnavailable {
	return &PostAccountRequestsServiceUnavailable{}
}

/*PostAccountRequestsServiceUnavailable handles this case with default header values.

Service unavailable
*/
type PostAccountRequestsServiceUnavailable struct {

	//Payload

	// isStream: false
	*models.APIError
}

func (o *PostAccountRequestsServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /organisation/accountrequests][%d] postAccountRequestsServiceUnavailable", 503)
}

func (o *PostAccountRequestsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAccountRequestsGatewayTimeout creates a PostAccountRequestsGatewayTimeout with default headers values
func NewPostAccountRequestsGatewayTimeout() *PostAccountRequestsGatewayTimeout {
	return &PostAccountRequestsGatewayTimeout{}
}

/*PostAccountRequestsGatewayTimeout handles this case with default header values.

Gateway timeout
*/
type PostAccountRequestsGatewayTimeout struct {

	//Payload

	// isStream: false
	*models.APIError
}

func (o *PostAccountRequestsGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /organisation/accountrequests][%d] postAccountRequestsGatewayTimeout", 504)
}

func (o *PostAccountRequestsGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}
