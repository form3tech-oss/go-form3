// Code generated by go-swagger; DO NOT EDIT.

package claims

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/form3tech-oss/go-form3/v7/pkg/generated/models"
)

// CreateClaimReader is a Reader for the CreateClaim structure.
type CreateClaimReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateClaimReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewCreateClaimCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewCreateClaimBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateClaimCreated creates a CreateClaimCreated with default headers values
func NewCreateClaimCreated() *CreateClaimCreated {
	return &CreateClaimCreated{}
}

/*
CreateClaimCreated handles this case with default header values.

Claim creation response
*/
type CreateClaimCreated struct {

	//Payload

	// isStream: false
	*models.ClaimDetailsResponse
}

// IsSuccess returns true when this create claim created response has a 2xx status code
func (o *CreateClaimCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create claim created response has a 3xx status code
func (o *CreateClaimCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create claim created response has a 4xx status code
func (o *CreateClaimCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create claim created response has a 5xx status code
func (o *CreateClaimCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create claim created response a status code equal to that given
func (o *CreateClaimCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create claim created response
func (o *CreateClaimCreated) Code() int {
	return 201
}

func (o *CreateClaimCreated) Error() string {
	return fmt.Sprintf("[POST /transaction/claims][%d] createClaimCreated", 201)
}

func (o *CreateClaimCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.ClaimDetailsResponse = new(models.ClaimDetailsResponse)

	// response payload

	if err := consumer.Consume(response.Body(), o.ClaimDetailsResponse); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateClaimBadRequest creates a CreateClaimBadRequest with default headers values
func NewCreateClaimBadRequest() *CreateClaimBadRequest {
	return &CreateClaimBadRequest{}
}

/*
CreateClaimBadRequest handles this case with default header values.

Claim creation error
*/
type CreateClaimBadRequest struct {

	//Payload

	// isStream: false
	*models.APIError
}

// IsSuccess returns true when this create claim bad request response has a 2xx status code
func (o *CreateClaimBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create claim bad request response has a 3xx status code
func (o *CreateClaimBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create claim bad request response has a 4xx status code
func (o *CreateClaimBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create claim bad request response has a 5xx status code
func (o *CreateClaimBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create claim bad request response a status code equal to that given
func (o *CreateClaimBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create claim bad request response
func (o *CreateClaimBadRequest) Code() int {
	return 400
}

func (o *CreateClaimBadRequest) Error() string {
	return fmt.Sprintf("[POST /transaction/claims][%d] createClaimBadRequest", 400)
}

func (o *CreateClaimBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}
