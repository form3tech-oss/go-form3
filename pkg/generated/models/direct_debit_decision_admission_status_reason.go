// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"log"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// DirectDebitDecisionAdmissionStatusReason direct debit decision admission status reason
// swagger:model DirectDebitDecisionAdmissionStatusReason
type DirectDebitDecisionAdmissionStatusReason string

const (

	// DirectDebitDecisionAdmissionStatusReasonAccepted captures enum value "accepted"
	DirectDebitDecisionAdmissionStatusReasonAccepted DirectDebitDecisionAdmissionStatusReason = "accepted"

	// DirectDebitDecisionAdmissionStatusReasonInvalidBeneficiaryDetails captures enum value "invalid_beneficiary_details"
	DirectDebitDecisionAdmissionStatusReasonInvalidBeneficiaryDetails DirectDebitDecisionAdmissionStatusReason = "invalid_beneficiary_details"

	// DirectDebitDecisionAdmissionStatusReasonBankidNotProvisioned captures enum value "bankid_not_provisioned"
	DirectDebitDecisionAdmissionStatusReasonBankidNotProvisioned DirectDebitDecisionAdmissionStatusReason = "bankid_not_provisioned"

	// DirectDebitDecisionAdmissionStatusReasonUnknownAccountnumber captures enum value "unknown_accountnumber"
	DirectDebitDecisionAdmissionStatusReasonUnknownAccountnumber DirectDebitDecisionAdmissionStatusReason = "unknown_accountnumber"

	// DirectDebitDecisionAdmissionStatusReasonPendingSettlement captures enum value "pending_settlement"
	DirectDebitDecisionAdmissionStatusReasonPendingSettlement DirectDebitDecisionAdmissionStatusReason = "pending_settlement"
)

// for schema
var directDebitDecisionAdmissionStatusReasonEnum []interface{}

func init() {
	var res []DirectDebitDecisionAdmissionStatusReason
	if err := json.Unmarshal([]byte(`["accepted","invalid_beneficiary_details","bankid_not_provisioned","unknown_accountnumber","pending_settlement"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		directDebitDecisionAdmissionStatusReasonEnum = append(directDebitDecisionAdmissionStatusReasonEnum, v)
	}
}

func (m DirectDebitDecisionAdmissionStatusReason) validateDirectDebitDecisionAdmissionStatusReasonEnum(path, location string, value DirectDebitDecisionAdmissionStatusReason) error {
	if err := validate.Enum(path, location, value, directDebitDecisionAdmissionStatusReasonEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this direct debit decision admission status reason
func (m DirectDebitDecisionAdmissionStatusReason) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateDirectDebitDecisionAdmissionStatusReasonEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DirectDebitDecisionAdmissionStatusReason) Json() string {
	json, err := json.MarshalIndent(m, "  ", "  ")
	if err != nil {
		log.Fatal(err)
	}
	return string(json)
}
