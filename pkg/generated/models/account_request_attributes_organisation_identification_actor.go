// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"log"
	"strconv"

	"github.com/form3tech-oss/go-form3/v2/pkg/client"
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AccountRequestAttributesOrganisationIdentificationActor account request attributes organisation identification actor
// swagger:model AccountRequestAttributesOrganisationIdentificationActor
type AccountRequestAttributesOrganisationIdentificationActor struct {

	// The birth date of the actor.
	// Format: date
	BirthDate *strfmt.Date `json:"birth_date,omitempty"`

	// Actor names (for example title, first name, last name). Used for Confirmation of Payee matching.
	// Max Items: 4
	Name []string `json:"name"`

	// ISO 3166-1 code used to identify the domicile of the actor
	// Pattern: ^[A-Z]{2}$
	Residency string `json:"residency,omitempty"`

	// role
	Role string `json:"role,omitempty"`
}

func AccountRequestAttributesOrganisationIdentificationActorWithDefaults(defaults client.Defaults) *AccountRequestAttributesOrganisationIdentificationActor {
	return &AccountRequestAttributesOrganisationIdentificationActor{

		BirthDate: defaults.GetStrfmtDatePtr("AccountRequestAttributesOrganisationIdentificationActor", "birth_date"),

		Name: make([]string, 0),

		Residency: defaults.GetString("AccountRequestAttributesOrganisationIdentificationActor", "residency"),

		Role: defaults.GetString("AccountRequestAttributesOrganisationIdentificationActor", "role"),
	}
}

func (m *AccountRequestAttributesOrganisationIdentificationActor) WithBirthDate(birthDate strfmt.Date) *AccountRequestAttributesOrganisationIdentificationActor {

	m.BirthDate = &birthDate

	return m
}

func (m *AccountRequestAttributesOrganisationIdentificationActor) WithoutBirthDate() *AccountRequestAttributesOrganisationIdentificationActor {
	m.BirthDate = nil
	return m
}

func (m *AccountRequestAttributesOrganisationIdentificationActor) WithName(name []string) *AccountRequestAttributesOrganisationIdentificationActor {

	m.Name = name

	return m
}

func (m *AccountRequestAttributesOrganisationIdentificationActor) WithResidency(residency string) *AccountRequestAttributesOrganisationIdentificationActor {

	m.Residency = residency

	return m
}

func (m *AccountRequestAttributesOrganisationIdentificationActor) WithRole(role string) *AccountRequestAttributesOrganisationIdentificationActor {

	m.Role = role

	return m
}

// Validate validates this account request attributes organisation identification actor
func (m *AccountRequestAttributesOrganisationIdentificationActor) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBirthDate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateResidency(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AccountRequestAttributesOrganisationIdentificationActor) validateBirthDate(formats strfmt.Registry) error {

	if swag.IsZero(m.BirthDate) { // not required
		return nil
	}

	if err := validate.FormatOf("birth_date", "body", "date", m.BirthDate.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *AccountRequestAttributesOrganisationIdentificationActor) validateName(formats strfmt.Registry) error {

	if swag.IsZero(m.Name) { // not required
		return nil
	}

	iNameSize := int64(len(m.Name))

	if err := validate.MaxItems("name", "body", iNameSize, 4); err != nil {
		return err
	}

	for i := 0; i < len(m.Name); i++ {

		if err := validate.MinLength("name"+"."+strconv.Itoa(i), "body", string(m.Name[i]), 1); err != nil {
			return err
		}

		if err := validate.MaxLength("name"+"."+strconv.Itoa(i), "body", string(m.Name[i]), 255); err != nil {
			return err
		}

	}

	return nil
}

func (m *AccountRequestAttributesOrganisationIdentificationActor) validateResidency(formats strfmt.Registry) error {

	if swag.IsZero(m.Residency) { // not required
		return nil
	}

	if err := validate.Pattern("residency", "body", string(m.Residency), `^[A-Z]{2}$`); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *AccountRequestAttributesOrganisationIdentificationActor) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AccountRequestAttributesOrganisationIdentificationActor) UnmarshalBinary(b []byte) error {
	var res AccountRequestAttributesOrganisationIdentificationActor
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
func (m *AccountRequestAttributesOrganisationIdentificationActor) Json() string {
	json, err := json.MarshalIndent(m, "  ", "  ")
	if err != nil {
		log.Fatal(err)
	}
	return string(json)
}
