// Code generated by go-swagger; DO NOT EDIT.

package payments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/form3tech-oss/go-form3/v6/pkg/generated/models"
)

// PatchTransactionPaymentsIDSubmissionsSubmissionIDTasksTaskIDReader is a Reader for the PatchTransactionPaymentsIDSubmissionsSubmissionIDTasksTaskID structure.
type PatchTransactionPaymentsIDSubmissionsSubmissionIDTasksTaskIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchTransactionPaymentsIDSubmissionsSubmissionIDTasksTaskIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPatchTransactionPaymentsIDSubmissionsSubmissionIDTasksTaskIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPatchTransactionPaymentsIDSubmissionsSubmissionIDTasksTaskIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewPatchTransactionPaymentsIDSubmissionsSubmissionIDTasksTaskIDConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPatchTransactionPaymentsIDSubmissionsSubmissionIDTasksTaskIDOK creates a PatchTransactionPaymentsIDSubmissionsSubmissionIDTasksTaskIDOK with default headers values
func NewPatchTransactionPaymentsIDSubmissionsSubmissionIDTasksTaskIDOK() *PatchTransactionPaymentsIDSubmissionsSubmissionIDTasksTaskIDOK {
	return &PatchTransactionPaymentsIDSubmissionsSubmissionIDTasksTaskIDOK{}
}

/*PatchTransactionPaymentsIDSubmissionsSubmissionIDTasksTaskIDOK handles this case with default header values.

Payment Submission Task update response
*/
type PatchTransactionPaymentsIDSubmissionsSubmissionIDTasksTaskIDOK struct {

	//Payload

	// isStream: false
	*models.PaymentSubmissionTaskDetailsResponse
}

func (o *PatchTransactionPaymentsIDSubmissionsSubmissionIDTasksTaskIDOK) Error() string {
	return fmt.Sprintf("[PATCH /transaction/payments/{id}/submissions/{submissionId}/tasks/{taskId}][%d] patchTransactionPaymentsIdSubmissionsSubmissionIdTasksTaskIdOK", 200)
}

func (o *PatchTransactionPaymentsIDSubmissionsSubmissionIDTasksTaskIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.PaymentSubmissionTaskDetailsResponse = new(models.PaymentSubmissionTaskDetailsResponse)

	// response payload

	if err := consumer.Consume(response.Body(), o.PaymentSubmissionTaskDetailsResponse); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchTransactionPaymentsIDSubmissionsSubmissionIDTasksTaskIDBadRequest creates a PatchTransactionPaymentsIDSubmissionsSubmissionIDTasksTaskIDBadRequest with default headers values
func NewPatchTransactionPaymentsIDSubmissionsSubmissionIDTasksTaskIDBadRequest() *PatchTransactionPaymentsIDSubmissionsSubmissionIDTasksTaskIDBadRequest {
	return &PatchTransactionPaymentsIDSubmissionsSubmissionIDTasksTaskIDBadRequest{}
}

/*PatchTransactionPaymentsIDSubmissionsSubmissionIDTasksTaskIDBadRequest handles this case with default header values.

Error
*/
type PatchTransactionPaymentsIDSubmissionsSubmissionIDTasksTaskIDBadRequest struct {

	//Payload

	// isStream: false
	*models.APIError
}

func (o *PatchTransactionPaymentsIDSubmissionsSubmissionIDTasksTaskIDBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /transaction/payments/{id}/submissions/{submissionId}/tasks/{taskId}][%d] patchTransactionPaymentsIdSubmissionsSubmissionIdTasksTaskIdBadRequest", 400)
}

func (o *PatchTransactionPaymentsIDSubmissionsSubmissionIDTasksTaskIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchTransactionPaymentsIDSubmissionsSubmissionIDTasksTaskIDConflict creates a PatchTransactionPaymentsIDSubmissionsSubmissionIDTasksTaskIDConflict with default headers values
func NewPatchTransactionPaymentsIDSubmissionsSubmissionIDTasksTaskIDConflict() *PatchTransactionPaymentsIDSubmissionsSubmissionIDTasksTaskIDConflict {
	return &PatchTransactionPaymentsIDSubmissionsSubmissionIDTasksTaskIDConflict{}
}

/*PatchTransactionPaymentsIDSubmissionsSubmissionIDTasksTaskIDConflict handles this case with default header values.

Conflict
*/
type PatchTransactionPaymentsIDSubmissionsSubmissionIDTasksTaskIDConflict struct {

	//Payload

	// isStream: false
	*models.APIError
}

func (o *PatchTransactionPaymentsIDSubmissionsSubmissionIDTasksTaskIDConflict) Error() string {
	return fmt.Sprintf("[PATCH /transaction/payments/{id}/submissions/{submissionId}/tasks/{taskId}][%d] patchTransactionPaymentsIdSubmissionsSubmissionIdTasksTaskIdConflict", 409)
}

func (o *PatchTransactionPaymentsIDSubmissionsSubmissionIDTasksTaskIDConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}
