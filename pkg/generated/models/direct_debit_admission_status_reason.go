// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"log"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// DirectDebitAdmissionStatusReason direct debit admission status reason
// swagger:model DirectDebitAdmissionStatusReason
type DirectDebitAdmissionStatusReason string

const (

	// DirectDebitAdmissionStatusReasonAccepted captures enum value "accepted"
	DirectDebitAdmissionStatusReasonAccepted DirectDebitAdmissionStatusReason = "accepted"

	// DirectDebitAdmissionStatusReasonInvalidBeneficiaryDetails captures enum value "invalid_beneficiary_details"
	DirectDebitAdmissionStatusReasonInvalidBeneficiaryDetails DirectDebitAdmissionStatusReason = "invalid_beneficiary_details"

	// DirectDebitAdmissionStatusReasonInvalidTransaction captures enum value "invalid_transaction"
	DirectDebitAdmissionStatusReasonInvalidTransaction DirectDebitAdmissionStatusReason = "invalid_transaction"

	// DirectDebitAdmissionStatusReasonBankidNotProvisioned captures enum value "bankid_not_provisioned"
	DirectDebitAdmissionStatusReasonBankidNotProvisioned DirectDebitAdmissionStatusReason = "bankid_not_provisioned"

	// DirectDebitAdmissionStatusReasonUnknownAccountnumber captures enum value "unknown_accountnumber"
	DirectDebitAdmissionStatusReasonUnknownAccountnumber DirectDebitAdmissionStatusReason = "unknown_accountnumber"

	// DirectDebitAdmissionStatusReasonPendingSettlement captures enum value "pending_settlement"
	DirectDebitAdmissionStatusReasonPendingSettlement DirectDebitAdmissionStatusReason = "pending_settlement"

	// DirectDebitAdmissionStatusReasonSettlementFailed captures enum value "settlement_failed"
	DirectDebitAdmissionStatusReasonSettlementFailed DirectDebitAdmissionStatusReason = "settlement_failed"

	// DirectDebitAdmissionStatusReasonDuplication captures enum value "duplication"
	DirectDebitAdmissionStatusReasonDuplication DirectDebitAdmissionStatusReason = "duplication"

	// DirectDebitAdmissionStatusReasonNotAllowedAmount captures enum value "not_allowed_amount"
	DirectDebitAdmissionStatusReasonNotAllowedAmount DirectDebitAdmissionStatusReason = "not_allowed_amount"

	// DirectDebitAdmissionStatusReasonMandateCancelled captures enum value "mandate_cancelled"
	DirectDebitAdmissionStatusReasonMandateCancelled DirectDebitAdmissionStatusReason = "mandate_cancelled"

	// DirectDebitAdmissionStatusReasonNoInstruction captures enum value "no_instruction"
	DirectDebitAdmissionStatusReasonNoInstruction DirectDebitAdmissionStatusReason = "no_instruction"

	// DirectDebitAdmissionStatusReasonAccountTransferredToNewPsp captures enum value "account_transferred_to_new_psp"
	DirectDebitAdmissionStatusReasonAccountTransferredToNewPsp DirectDebitAdmissionStatusReason = "account_transferred_to_new_psp"

	// DirectDebitAdmissionStatusReasonPayingBankCancellation captures enum value "paying_bank_cancellation"
	DirectDebitAdmissionStatusReasonPayingBankCancellation DirectDebitAdmissionStatusReason = "paying_bank_cancellation"

	// DirectDebitAdmissionStatusReasonCancelledByPayer captures enum value "cancelled_by_payer"
	DirectDebitAdmissionStatusReasonCancelledByPayer DirectDebitAdmissionStatusReason = "cancelled_by_payer"

	// DirectDebitAdmissionStatusReasonPayerDeceased captures enum value "payer_deceased"
	DirectDebitAdmissionStatusReasonPayerDeceased DirectDebitAdmissionStatusReason = "payer_deceased"

	// DirectDebitAdmissionStatusReasonAccountClosed captures enum value "account_closed"
	DirectDebitAdmissionStatusReasonAccountClosed DirectDebitAdmissionStatusReason = "account_closed"

	// DirectDebitAdmissionStatusReasonSchemeStatusInvalid captures enum value "scheme_status_invalid"
	DirectDebitAdmissionStatusReasonSchemeStatusInvalid DirectDebitAdmissionStatusReason = "scheme_status_invalid"

	// DirectDebitAdmissionStatusReasonPendingAuthorisationBySponsor captures enum value "pending_authorisation_by_sponsor"
	DirectDebitAdmissionStatusReasonPendingAuthorisationBySponsor DirectDebitAdmissionStatusReason = "pending_authorisation_by_sponsor"

	// DirectDebitAdmissionStatusReasonAuthorisedBySponsor captures enum value "authorised_by_sponsor"
	DirectDebitAdmissionStatusReasonAuthorisedBySponsor DirectDebitAdmissionStatusReason = "authorised_by_sponsor"

	// DirectDebitAdmissionStatusReasonAuthorisationFailedBySponsor captures enum value "authorisation_failed_by_sponsor"
	DirectDebitAdmissionStatusReasonAuthorisationFailedBySponsor DirectDebitAdmissionStatusReason = "authorisation_failed_by_sponsor"
)

// for schema
var directDebitAdmissionStatusReasonEnum []interface{}

func init() {
	var res []DirectDebitAdmissionStatusReason
	if err := json.Unmarshal([]byte(`["accepted","invalid_beneficiary_details","invalid_transaction","bankid_not_provisioned","unknown_accountnumber","pending_settlement","settlement_failed","duplication","not_allowed_amount","mandate_cancelled","no_instruction","account_transferred_to_new_psp","paying_bank_cancellation","cancelled_by_payer","payer_deceased","account_closed","scheme_status_invalid","pending_authorisation_by_sponsor","authorised_by_sponsor","authorisation_failed_by_sponsor"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		directDebitAdmissionStatusReasonEnum = append(directDebitAdmissionStatusReasonEnum, v)
	}
}

func (m DirectDebitAdmissionStatusReason) validateDirectDebitAdmissionStatusReasonEnum(path, location string, value DirectDebitAdmissionStatusReason) error {
	if err := validate.Enum(path, location, value, directDebitAdmissionStatusReasonEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this direct debit admission status reason
func (m DirectDebitAdmissionStatusReason) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateDirectDebitAdmissionStatusReasonEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DirectDebitAdmissionStatusReason) Json() string {
	json, err := json.MarshalIndent(m, "  ", "  ")
	if err != nil {
		log.Fatal(err)
	}
	return string(json)
}
