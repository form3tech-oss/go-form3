// Code generated by go-swagger; DO NOT EDIT.

package query_api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/form3tech-oss/go-form3/v7/pkg/generated/models"
)

// GetQueryResponseAdmissionReader is a Reader for the GetQueryResponseAdmission structure.
type GetQueryResponseAdmissionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetQueryResponseAdmissionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetQueryResponseAdmissionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetQueryResponseAdmissionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetQueryResponseAdmissionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetQueryResponseAdmissionOK creates a GetQueryResponseAdmissionOK with default headers values
func NewGetQueryResponseAdmissionOK() *GetQueryResponseAdmissionOK {
	return &GetQueryResponseAdmissionOK{}
}

/*
GetQueryResponseAdmissionOK handles this case with default header values.

query response admission response
*/
type GetQueryResponseAdmissionOK struct {

	//Payload

	// isStream: false
	*models.QueryResponseAdmissionResponse
}

// IsSuccess returns true when this get query response admission o k response has a 2xx status code
func (o *GetQueryResponseAdmissionOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get query response admission o k response has a 3xx status code
func (o *GetQueryResponseAdmissionOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get query response admission o k response has a 4xx status code
func (o *GetQueryResponseAdmissionOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get query response admission o k response has a 5xx status code
func (o *GetQueryResponseAdmissionOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get query response admission o k response a status code equal to that given
func (o *GetQueryResponseAdmissionOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get query response admission o k response
func (o *GetQueryResponseAdmissionOK) Code() int {
	return 200
}

func (o *GetQueryResponseAdmissionOK) Error() string {
	return fmt.Sprintf("[GET /transaction/queries/{query_id}/responses/{query_response_id}/admissions/{query_response_admission_id}][%d] getQueryResponseAdmissionOK", 200)
}

func (o *GetQueryResponseAdmissionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.QueryResponseAdmissionResponse = new(models.QueryResponseAdmissionResponse)

	// response payload

	if err := consumer.Consume(response.Body(), o.QueryResponseAdmissionResponse); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQueryResponseAdmissionBadRequest creates a GetQueryResponseAdmissionBadRequest with default headers values
func NewGetQueryResponseAdmissionBadRequest() *GetQueryResponseAdmissionBadRequest {
	return &GetQueryResponseAdmissionBadRequest{}
}

/*
GetQueryResponseAdmissionBadRequest handles this case with default header values.

bad request
*/
type GetQueryResponseAdmissionBadRequest struct {

	//Payload

	// isStream: false
	*models.APIError
}

// IsSuccess returns true when this get query response admission bad request response has a 2xx status code
func (o *GetQueryResponseAdmissionBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get query response admission bad request response has a 3xx status code
func (o *GetQueryResponseAdmissionBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get query response admission bad request response has a 4xx status code
func (o *GetQueryResponseAdmissionBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get query response admission bad request response has a 5xx status code
func (o *GetQueryResponseAdmissionBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get query response admission bad request response a status code equal to that given
func (o *GetQueryResponseAdmissionBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get query response admission bad request response
func (o *GetQueryResponseAdmissionBadRequest) Code() int {
	return 400
}

func (o *GetQueryResponseAdmissionBadRequest) Error() string {
	return fmt.Sprintf("[GET /transaction/queries/{query_id}/responses/{query_response_id}/admissions/{query_response_admission_id}][%d] getQueryResponseAdmissionBadRequest", 400)
}

func (o *GetQueryResponseAdmissionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQueryResponseAdmissionForbidden creates a GetQueryResponseAdmissionForbidden with default headers values
func NewGetQueryResponseAdmissionForbidden() *GetQueryResponseAdmissionForbidden {
	return &GetQueryResponseAdmissionForbidden{}
}

/*
GetQueryResponseAdmissionForbidden handles this case with default header values.

forbidden
*/
type GetQueryResponseAdmissionForbidden struct {

	//Payload

	// isStream: false
	*models.APIError
}

// IsSuccess returns true when this get query response admission forbidden response has a 2xx status code
func (o *GetQueryResponseAdmissionForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get query response admission forbidden response has a 3xx status code
func (o *GetQueryResponseAdmissionForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get query response admission forbidden response has a 4xx status code
func (o *GetQueryResponseAdmissionForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get query response admission forbidden response has a 5xx status code
func (o *GetQueryResponseAdmissionForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get query response admission forbidden response a status code equal to that given
func (o *GetQueryResponseAdmissionForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get query response admission forbidden response
func (o *GetQueryResponseAdmissionForbidden) Code() int {
	return 403
}

func (o *GetQueryResponseAdmissionForbidden) Error() string {
	return fmt.Sprintf("[GET /transaction/queries/{query_id}/responses/{query_response_id}/admissions/{query_response_admission_id}][%d] getQueryResponseAdmissionForbidden", 403)
}

func (o *GetQueryResponseAdmissionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}
