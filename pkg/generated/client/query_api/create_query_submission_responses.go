// Code generated by go-swagger; DO NOT EDIT.

package query_api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/form3tech-oss/go-form3/v7/pkg/generated/models"
)

// CreateQuerySubmissionReader is a Reader for the CreateQuerySubmission structure.
type CreateQuerySubmissionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateQuerySubmissionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewCreateQuerySubmissionCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewCreateQuerySubmissionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewCreateQuerySubmissionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 502:
		result := NewCreateQuerySubmissionBadGateway()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateQuerySubmissionCreated creates a CreateQuerySubmissionCreated with default headers values
func NewCreateQuerySubmissionCreated() *CreateQuerySubmissionCreated {
	return &CreateQuerySubmissionCreated{}
}

/*
CreateQuerySubmissionCreated handles this case with default header values.

creation response
*/
type CreateQuerySubmissionCreated struct {

	//Payload

	// isStream: false
	*models.QuerySubmissionResponse
}

// IsSuccess returns true when this create query submission created response has a 2xx status code
func (o *CreateQuerySubmissionCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create query submission created response has a 3xx status code
func (o *CreateQuerySubmissionCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create query submission created response has a 4xx status code
func (o *CreateQuerySubmissionCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create query submission created response has a 5xx status code
func (o *CreateQuerySubmissionCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create query submission created response a status code equal to that given
func (o *CreateQuerySubmissionCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create query submission created response
func (o *CreateQuerySubmissionCreated) Code() int {
	return 201
}

func (o *CreateQuerySubmissionCreated) Error() string {
	return fmt.Sprintf("[POST /transaction/queries/{query_id}/submissions][%d] createQuerySubmissionCreated", 201)
}

func (o *CreateQuerySubmissionCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.QuerySubmissionResponse = new(models.QuerySubmissionResponse)

	// response payload

	if err := consumer.Consume(response.Body(), o.QuerySubmissionResponse); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateQuerySubmissionBadRequest creates a CreateQuerySubmissionBadRequest with default headers values
func NewCreateQuerySubmissionBadRequest() *CreateQuerySubmissionBadRequest {
	return &CreateQuerySubmissionBadRequest{}
}

/*
CreateQuerySubmissionBadRequest handles this case with default header values.

bad request
*/
type CreateQuerySubmissionBadRequest struct {

	//Payload

	// isStream: false
	*models.APIError
}

// IsSuccess returns true when this create query submission bad request response has a 2xx status code
func (o *CreateQuerySubmissionBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create query submission bad request response has a 3xx status code
func (o *CreateQuerySubmissionBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create query submission bad request response has a 4xx status code
func (o *CreateQuerySubmissionBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create query submission bad request response has a 5xx status code
func (o *CreateQuerySubmissionBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create query submission bad request response a status code equal to that given
func (o *CreateQuerySubmissionBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create query submission bad request response
func (o *CreateQuerySubmissionBadRequest) Code() int {
	return 400
}

func (o *CreateQuerySubmissionBadRequest) Error() string {
	return fmt.Sprintf("[POST /transaction/queries/{query_id}/submissions][%d] createQuerySubmissionBadRequest", 400)
}

func (o *CreateQuerySubmissionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateQuerySubmissionForbidden creates a CreateQuerySubmissionForbidden with default headers values
func NewCreateQuerySubmissionForbidden() *CreateQuerySubmissionForbidden {
	return &CreateQuerySubmissionForbidden{}
}

/*
CreateQuerySubmissionForbidden handles this case with default header values.

forbidden
*/
type CreateQuerySubmissionForbidden struct {

	//Payload

	// isStream: false
	*models.APIError
}

// IsSuccess returns true when this create query submission forbidden response has a 2xx status code
func (o *CreateQuerySubmissionForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create query submission forbidden response has a 3xx status code
func (o *CreateQuerySubmissionForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create query submission forbidden response has a 4xx status code
func (o *CreateQuerySubmissionForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create query submission forbidden response has a 5xx status code
func (o *CreateQuerySubmissionForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create query submission forbidden response a status code equal to that given
func (o *CreateQuerySubmissionForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create query submission forbidden response
func (o *CreateQuerySubmissionForbidden) Code() int {
	return 403
}

func (o *CreateQuerySubmissionForbidden) Error() string {
	return fmt.Sprintf("[POST /transaction/queries/{query_id}/submissions][%d] createQuerySubmissionForbidden", 403)
}

func (o *CreateQuerySubmissionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateQuerySubmissionBadGateway creates a CreateQuerySubmissionBadGateway with default headers values
func NewCreateQuerySubmissionBadGateway() *CreateQuerySubmissionBadGateway {
	return &CreateQuerySubmissionBadGateway{}
}

/*
CreateQuerySubmissionBadGateway handles this case with default header values.

gateway issue
*/
type CreateQuerySubmissionBadGateway struct {

	//Payload

	// isStream: false
	*models.APIError
}

// IsSuccess returns true when this create query submission bad gateway response has a 2xx status code
func (o *CreateQuerySubmissionBadGateway) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create query submission bad gateway response has a 3xx status code
func (o *CreateQuerySubmissionBadGateway) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create query submission bad gateway response has a 4xx status code
func (o *CreateQuerySubmissionBadGateway) IsClientError() bool {
	return false
}

// IsServerError returns true when this create query submission bad gateway response has a 5xx status code
func (o *CreateQuerySubmissionBadGateway) IsServerError() bool {
	return true
}

// IsCode returns true when this create query submission bad gateway response a status code equal to that given
func (o *CreateQuerySubmissionBadGateway) IsCode(code int) bool {
	return code == 502
}

// Code gets the status code for the create query submission bad gateway response
func (o *CreateQuerySubmissionBadGateway) Code() int {
	return 502
}

func (o *CreateQuerySubmissionBadGateway) Error() string {
	return fmt.Sprintf("[POST /transaction/queries/{query_id}/submissions][%d] createQuerySubmissionBadGateway", 502)
}

func (o *CreateQuerySubmissionBadGateway) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}
