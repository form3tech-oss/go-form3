// Code generated by go-swagger; DO NOT EDIT.

package go_subscription_api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/form3tech-oss/go-form3/v4/pkg/generated/models"
)

// GetNotificationSubscriptionsIDErrorsReader is a Reader for the GetNotificationSubscriptionsIDErrors structure.
type GetNotificationSubscriptionsIDErrorsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNotificationSubscriptionsIDErrorsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetNotificationSubscriptionsIDErrorsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetNotificationSubscriptionsIDErrorsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetNotificationSubscriptionsIDErrorsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetNotificationSubscriptionsIDErrorsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetNotificationSubscriptionsIDErrorsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetNotificationSubscriptionsIDErrorsOK creates a GetNotificationSubscriptionsIDErrorsOK with default headers values
func NewGetNotificationSubscriptionsIDErrorsOK() *GetNotificationSubscriptionsIDErrorsOK {
	return &GetNotificationSubscriptionsIDErrorsOK{}
}

/*GetNotificationSubscriptionsIDErrorsOK handles this case with default header values.

Errors List Response
*/
type GetNotificationSubscriptionsIDErrorsOK struct {

	//Payload

	// isStream: false
	*models.SubscriptionDeliveryErrorListResponse
}

func (o *GetNotificationSubscriptionsIDErrorsOK) Error() string {
	return fmt.Sprintf("[GET /notification/subscriptions/{id}/errors][%d] getNotificationSubscriptionsIdErrorsOK", 200)
}

func (o *GetNotificationSubscriptionsIDErrorsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.SubscriptionDeliveryErrorListResponse = new(models.SubscriptionDeliveryErrorListResponse)

	// response payload

	if err := consumer.Consume(response.Body(), o.SubscriptionDeliveryErrorListResponse); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNotificationSubscriptionsIDErrorsBadRequest creates a GetNotificationSubscriptionsIDErrorsBadRequest with default headers values
func NewGetNotificationSubscriptionsIDErrorsBadRequest() *GetNotificationSubscriptionsIDErrorsBadRequest {
	return &GetNotificationSubscriptionsIDErrorsBadRequest{}
}

/*GetNotificationSubscriptionsIDErrorsBadRequest handles this case with default header values.

Bad Request
*/
type GetNotificationSubscriptionsIDErrorsBadRequest struct {

	//Payload

	// isStream: false
	*models.APIError
}

func (o *GetNotificationSubscriptionsIDErrorsBadRequest) Error() string {
	return fmt.Sprintf("[GET /notification/subscriptions/{id}/errors][%d] getNotificationSubscriptionsIdErrorsBadRequest", 400)
}

func (o *GetNotificationSubscriptionsIDErrorsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNotificationSubscriptionsIDErrorsForbidden creates a GetNotificationSubscriptionsIDErrorsForbidden with default headers values
func NewGetNotificationSubscriptionsIDErrorsForbidden() *GetNotificationSubscriptionsIDErrorsForbidden {
	return &GetNotificationSubscriptionsIDErrorsForbidden{}
}

/*GetNotificationSubscriptionsIDErrorsForbidden handles this case with default header values.

Forbidden
*/
type GetNotificationSubscriptionsIDErrorsForbidden struct {

	//Payload

	// isStream: false
	*models.APIError
}

func (o *GetNotificationSubscriptionsIDErrorsForbidden) Error() string {
	return fmt.Sprintf("[GET /notification/subscriptions/{id}/errors][%d] getNotificationSubscriptionsIdErrorsForbidden", 403)
}

func (o *GetNotificationSubscriptionsIDErrorsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNotificationSubscriptionsIDErrorsNotFound creates a GetNotificationSubscriptionsIDErrorsNotFound with default headers values
func NewGetNotificationSubscriptionsIDErrorsNotFound() *GetNotificationSubscriptionsIDErrorsNotFound {
	return &GetNotificationSubscriptionsIDErrorsNotFound{}
}

/*GetNotificationSubscriptionsIDErrorsNotFound handles this case with default header values.

Not Found
*/
type GetNotificationSubscriptionsIDErrorsNotFound struct {

	//Payload

	// isStream: false
	*models.APIError
}

func (o *GetNotificationSubscriptionsIDErrorsNotFound) Error() string {
	return fmt.Sprintf("[GET /notification/subscriptions/{id}/errors][%d] getNotificationSubscriptionsIdErrorsNotFound", 404)
}

func (o *GetNotificationSubscriptionsIDErrorsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNotificationSubscriptionsIDErrorsInternalServerError creates a GetNotificationSubscriptionsIDErrorsInternalServerError with default headers values
func NewGetNotificationSubscriptionsIDErrorsInternalServerError() *GetNotificationSubscriptionsIDErrorsInternalServerError {
	return &GetNotificationSubscriptionsIDErrorsInternalServerError{}
}

/*GetNotificationSubscriptionsIDErrorsInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetNotificationSubscriptionsIDErrorsInternalServerError struct {

	//Payload

	// isStream: false
	*models.APIError
}

func (o *GetNotificationSubscriptionsIDErrorsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /notification/subscriptions/{id}/errors][%d] getNotificationSubscriptionsIdErrorsInternalServerError", 500)
}

func (o *GetNotificationSubscriptionsIDErrorsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}
