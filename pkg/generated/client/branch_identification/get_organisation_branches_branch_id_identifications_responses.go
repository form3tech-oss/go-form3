// Code generated by go-swagger; DO NOT EDIT.

package branch_identification

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/form3tech-oss/go-form3/v6/pkg/generated/models"
)

// GetOrganisationBranchesBranchIDIdentificationsReader is a Reader for the GetOrganisationBranchesBranchIDIdentifications structure.
type GetOrganisationBranchesBranchIDIdentificationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOrganisationBranchesBranchIDIdentificationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetOrganisationBranchesBranchIDIdentificationsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetOrganisationBranchesBranchIDIdentificationsOK creates a GetOrganisationBranchesBranchIDIdentificationsOK with default headers values
func NewGetOrganisationBranchesBranchIDIdentificationsOK() *GetOrganisationBranchesBranchIDIdentificationsOK {
	return &GetOrganisationBranchesBranchIDIdentificationsOK{}
}

/*GetOrganisationBranchesBranchIDIdentificationsOK handles this case with default header values.

List of branch identification
*/
type GetOrganisationBranchesBranchIDIdentificationsOK struct {

	//Payload

	// isStream: false
	*models.BranchIdentificationListResponse
}

func (o *GetOrganisationBranchesBranchIDIdentificationsOK) Error() string {
	return fmt.Sprintf("[GET /organisation/branches/{branch_id}/identifications][%d] getOrganisationBranchesBranchIdIdentificationsOK", 200)
}

func (o *GetOrganisationBranchesBranchIDIdentificationsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.BranchIdentificationListResponse = new(models.BranchIdentificationListResponse)

	// response payload

	if err := consumer.Consume(response.Body(), o.BranchIdentificationListResponse); err != nil && err != io.EOF {
		return err
	}

	return nil
}
