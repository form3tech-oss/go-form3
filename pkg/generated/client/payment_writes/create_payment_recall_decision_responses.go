// Code generated by go-swagger; DO NOT EDIT.

package payment_writes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/form3tech-oss/go-form3/v7/pkg/generated/models"
)

// CreatePaymentRecallDecisionReader is a Reader for the CreatePaymentRecallDecision structure.
type CreatePaymentRecallDecisionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreatePaymentRecallDecisionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewCreatePaymentRecallDecisionCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewCreatePaymentRecallDecisionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreatePaymentRecallDecisionCreated creates a CreatePaymentRecallDecisionCreated with default headers values
func NewCreatePaymentRecallDecisionCreated() *CreatePaymentRecallDecisionCreated {
	return &CreatePaymentRecallDecisionCreated{}
}

/*
CreatePaymentRecallDecisionCreated handles this case with default header values.

Recall decision creation response
*/
type CreatePaymentRecallDecisionCreated struct {

	//Payload

	// isStream: false
	*models.RecallDecisionCreationResponse
}

// IsSuccess returns true when this create payment recall decision created response has a 2xx status code
func (o *CreatePaymentRecallDecisionCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create payment recall decision created response has a 3xx status code
func (o *CreatePaymentRecallDecisionCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create payment recall decision created response has a 4xx status code
func (o *CreatePaymentRecallDecisionCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create payment recall decision created response has a 5xx status code
func (o *CreatePaymentRecallDecisionCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create payment recall decision created response a status code equal to that given
func (o *CreatePaymentRecallDecisionCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create payment recall decision created response
func (o *CreatePaymentRecallDecisionCreated) Code() int {
	return 201
}

func (o *CreatePaymentRecallDecisionCreated) Error() string {
	return fmt.Sprintf("[POST /transaction/payments/{id}/recalls/{recallId}/decisions][%d] createPaymentRecallDecisionCreated", 201)
}

func (o *CreatePaymentRecallDecisionCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.RecallDecisionCreationResponse = new(models.RecallDecisionCreationResponse)

	// response payload

	if err := consumer.Consume(response.Body(), o.RecallDecisionCreationResponse); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreatePaymentRecallDecisionBadRequest creates a CreatePaymentRecallDecisionBadRequest with default headers values
func NewCreatePaymentRecallDecisionBadRequest() *CreatePaymentRecallDecisionBadRequest {
	return &CreatePaymentRecallDecisionBadRequest{}
}

/*
CreatePaymentRecallDecisionBadRequest handles this case with default header values.

Recall decision creation error
*/
type CreatePaymentRecallDecisionBadRequest struct {

	//Payload

	// isStream: false
	*models.APIError
}

// IsSuccess returns true when this create payment recall decision bad request response has a 2xx status code
func (o *CreatePaymentRecallDecisionBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create payment recall decision bad request response has a 3xx status code
func (o *CreatePaymentRecallDecisionBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create payment recall decision bad request response has a 4xx status code
func (o *CreatePaymentRecallDecisionBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create payment recall decision bad request response has a 5xx status code
func (o *CreatePaymentRecallDecisionBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create payment recall decision bad request response a status code equal to that given
func (o *CreatePaymentRecallDecisionBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create payment recall decision bad request response
func (o *CreatePaymentRecallDecisionBadRequest) Code() int {
	return 400
}

func (o *CreatePaymentRecallDecisionBadRequest) Error() string {
	return fmt.Sprintf("[POST /transaction/payments/{id}/recalls/{recallId}/decisions][%d] createPaymentRecallDecisionBadRequest", 400)
}

func (o *CreatePaymentRecallDecisionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}
