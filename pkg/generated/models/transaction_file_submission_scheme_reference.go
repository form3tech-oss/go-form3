// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"log"

	"github.com/form3tech-oss/go-form3/v6/pkg/client"
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// TransactionFileSubmissionSchemeReference transaction file submission scheme reference
// swagger:model TransactionFileSubmissionSchemeReference
type TransactionFileSubmissionSchemeReference struct {

	// Service User Number (SUN) of the payment originator
	// Pattern: .{6}$
	ClearingID string `json:"clearing_id,omitempty"`

	// Submission serial number
	FileIdentifier string `json:"file_identifier,omitempty"`

	// Number of the file sent to the scheme
	FileNumber string `json:"file_number,omitempty"`

	// The count of transactions submitted in a given scheme file
	TransactionCount int64 `json:"transaction_count,omitempty"`

	// The sum of transactions submitted in a given scheme file
	TransactionSum string `json:"transaction_sum,omitempty"`
}

func TransactionFileSubmissionSchemeReferenceWithDefaults(defaults client.Defaults) *TransactionFileSubmissionSchemeReference {
	return &TransactionFileSubmissionSchemeReference{

		ClearingID: defaults.GetString("TransactionFileSubmissionSchemeReference", "clearing_id"),

		FileIdentifier: defaults.GetString("TransactionFileSubmissionSchemeReference", "file_identifier"),

		FileNumber: defaults.GetString("TransactionFileSubmissionSchemeReference", "file_number"),

		TransactionCount: defaults.GetInt64("TransactionFileSubmissionSchemeReference", "transaction_count"),

		TransactionSum: defaults.GetString("TransactionFileSubmissionSchemeReference", "transaction_sum"),
	}
}

func (m *TransactionFileSubmissionSchemeReference) WithClearingID(clearingID string) *TransactionFileSubmissionSchemeReference {

	m.ClearingID = clearingID

	return m
}

func (m *TransactionFileSubmissionSchemeReference) WithFileIdentifier(fileIdentifier string) *TransactionFileSubmissionSchemeReference {

	m.FileIdentifier = fileIdentifier

	return m
}

func (m *TransactionFileSubmissionSchemeReference) WithFileNumber(fileNumber string) *TransactionFileSubmissionSchemeReference {

	m.FileNumber = fileNumber

	return m
}

func (m *TransactionFileSubmissionSchemeReference) WithTransactionCount(transactionCount int64) *TransactionFileSubmissionSchemeReference {

	m.TransactionCount = transactionCount

	return m
}

func (m *TransactionFileSubmissionSchemeReference) WithTransactionSum(transactionSum string) *TransactionFileSubmissionSchemeReference {

	m.TransactionSum = transactionSum

	return m
}

// Validate validates this transaction file submission scheme reference
func (m *TransactionFileSubmissionSchemeReference) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateClearingID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TransactionFileSubmissionSchemeReference) validateClearingID(formats strfmt.Registry) error {

	if swag.IsZero(m.ClearingID) { // not required
		return nil
	}

	if err := validate.Pattern("clearing_id", "body", string(m.ClearingID), `.{6}$`); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TransactionFileSubmissionSchemeReference) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TransactionFileSubmissionSchemeReference) UnmarshalBinary(b []byte) error {
	var res TransactionFileSubmissionSchemeReference
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
func (m *TransactionFileSubmissionSchemeReference) Json() string {
	json, err := json.MarshalIndent(m, "  ", "  ")
	if err != nil {
		log.Fatal(err)
	}
	return string(json)
}
