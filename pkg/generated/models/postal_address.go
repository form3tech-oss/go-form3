// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"log"

	"github.com/form3tech-oss/go-form3/v7/pkg/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PostalAddress postal address
// swagger:model PostalAddress
type PostalAddress struct {

	// Beneficiary address
	Address []string `json:"address,omitempty"`

	// Building name of the postal address
	BuildingName string `json:"building_name,omitempty"`

	// Building number of the postal address
	BuildingNumber string `json:"building_number,omitempty"`

	// Country of the postal address, ISO 3166 format country code
	Country string `json:"country,omitempty"`

	// Country sub division of the postal address
	CountrySubDivision string `json:"country_sub_division,omitempty"`

	// Department of the postal address
	Department string `json:"department,omitempty"`

	// District name of the postal address
	DistrictName string `json:"district_name,omitempty"`

	// Floor of the postal address
	Floor string `json:"floor,omitempty"`

	// Postbox of the postal address
	PostBox string `json:"post_box,omitempty"`

	// Post code of the postal address
	PostCode string `json:"post_code,omitempty"`

	// Room of the postal address
	Room string `json:"room,omitempty"`

	// Street name of the postal address
	StreetName string `json:"street_name,omitempty"`

	// Sub department of the postal address
	SubDepartment string `json:"sub_department,omitempty"`

	// Town location name of the postal address
	TownLocationName string `json:"town_location_name,omitempty"`

	// Town name of the postal address
	TownName string `json:"town_name,omitempty"`
}

func PostalAddressWithDefaults(defaults client.Defaults) *PostalAddress {
	return &PostalAddress{

		Address: make([]string, 0),

		BuildingName: defaults.GetString("PostalAddress", "building_name"),

		BuildingNumber: defaults.GetString("PostalAddress", "building_number"),

		Country: defaults.GetString("PostalAddress", "country"),

		CountrySubDivision: defaults.GetString("PostalAddress", "country_sub_division"),

		Department: defaults.GetString("PostalAddress", "department"),

		DistrictName: defaults.GetString("PostalAddress", "district_name"),

		Floor: defaults.GetString("PostalAddress", "floor"),

		PostBox: defaults.GetString("PostalAddress", "post_box"),

		PostCode: defaults.GetString("PostalAddress", "post_code"),

		Room: defaults.GetString("PostalAddress", "room"),

		StreetName: defaults.GetString("PostalAddress", "street_name"),

		SubDepartment: defaults.GetString("PostalAddress", "sub_department"),

		TownLocationName: defaults.GetString("PostalAddress", "town_location_name"),

		TownName: defaults.GetString("PostalAddress", "town_name"),
	}
}

func (m *PostalAddress) WithAddress(address []string) *PostalAddress {

	m.Address = address

	return m
}

func (m *PostalAddress) WithBuildingName(buildingName string) *PostalAddress {

	m.BuildingName = buildingName

	return m
}

func (m *PostalAddress) WithBuildingNumber(buildingNumber string) *PostalAddress {

	m.BuildingNumber = buildingNumber

	return m
}

func (m *PostalAddress) WithCountry(country string) *PostalAddress {

	m.Country = country

	return m
}

func (m *PostalAddress) WithCountrySubDivision(countrySubDivision string) *PostalAddress {

	m.CountrySubDivision = countrySubDivision

	return m
}

func (m *PostalAddress) WithDepartment(department string) *PostalAddress {

	m.Department = department

	return m
}

func (m *PostalAddress) WithDistrictName(districtName string) *PostalAddress {

	m.DistrictName = districtName

	return m
}

func (m *PostalAddress) WithFloor(floor string) *PostalAddress {

	m.Floor = floor

	return m
}

func (m *PostalAddress) WithPostBox(postBox string) *PostalAddress {

	m.PostBox = postBox

	return m
}

func (m *PostalAddress) WithPostCode(postCode string) *PostalAddress {

	m.PostCode = postCode

	return m
}

func (m *PostalAddress) WithRoom(room string) *PostalAddress {

	m.Room = room

	return m
}

func (m *PostalAddress) WithStreetName(streetName string) *PostalAddress {

	m.StreetName = streetName

	return m
}

func (m *PostalAddress) WithSubDepartment(subDepartment string) *PostalAddress {

	m.SubDepartment = subDepartment

	return m
}

func (m *PostalAddress) WithTownLocationName(townLocationName string) *PostalAddress {

	m.TownLocationName = townLocationName

	return m
}

func (m *PostalAddress) WithTownName(townName string) *PostalAddress {

	m.TownName = townName

	return m
}

// Validate validates this postal address
func (m *PostalAddress) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *PostalAddress) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PostalAddress) UnmarshalBinary(b []byte) error {
	var res PostalAddress
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
func (m *PostalAddress) Json() string {
	json, err := json.MarshalIndent(m, "  ", "  ")
	if err != nil {
		log.Fatal(err)
	}
	return string(json)
}
