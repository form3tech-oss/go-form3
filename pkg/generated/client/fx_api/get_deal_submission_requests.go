// Code generated by go-swagger; DO NOT EDIT.

package fx_api

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// Client.GetDealSubmission creates a new GetDealSubmissionRequest object
// with the default values initialized.
func (c *Client) GetDealSubmission() *GetDealSubmissionRequest {
	var ()
	return &GetDealSubmissionRequest{

		FxDealID: c.Defaults.GetStrfmtUUID("GetDealSubmission", "fx_deal_id"),

		FxDealSubmissionID: c.Defaults.GetStrfmtUUID("GetDealSubmission", "fx_deal_submission_id"),

		timeout: cr.DefaultTimeout,

		transport: c.transport,
		formats:   c.formats,
	}
}

type GetDealSubmissionRequest struct {

	/*FxDealID      FX Deal ID      */

	FxDealID strfmt.UUID

	/*FxDealSubmissionID      FX Deal submission ID      */

	FxDealSubmissionID strfmt.UUID

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client

	transport runtime.ClientTransport
	formats   strfmt.Registry
}

func (o *GetDealSubmissionRequest) FromJson(j string) *GetDealSubmissionRequest {

	return o
}

func (o *GetDealSubmissionRequest) WithFxDealID(fxDealID strfmt.UUID) *GetDealSubmissionRequest {

	o.FxDealID = fxDealID

	return o
}

func (o *GetDealSubmissionRequest) WithFxDealSubmissionID(fxDealSubmissionID strfmt.UUID) *GetDealSubmissionRequest {

	o.FxDealSubmissionID = fxDealSubmissionID

	return o
}

//////////////////
// WithContext adds the context to the get deal submission Request
func (o *GetDealSubmissionRequest) WithContext(ctx context.Context) *GetDealSubmissionRequest {
	o.Context = ctx
	return o
}

// WithHTTPClient adds the HTTPClient to the get deal submission Request
func (o *GetDealSubmissionRequest) WithHTTPClient(client *http.Client) *GetDealSubmissionRequest {
	o.HTTPClient = client
	return o
}

// WriteToRequest writes these Request to a swagger request
func (o *GetDealSubmissionRequest) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param fx_deal_id
	if err := r.SetPathParam("fx_deal_id", o.FxDealID.String()); err != nil {
		return err
	}

	// path param fx_deal_submission_id
	if err := r.SetPathParam("fx_deal_submission_id", o.FxDealSubmissionID.String()); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
