// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"log"
	"strconv"

	"github.com/form3tech-oss/go-form3/v2/pkg/client"
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// DirectDebitDecisionAdmissionRelationships direct debit decision admission relationships
// swagger:model DirectDebitDecisionAdmissionRelationships
type DirectDebitDecisionAdmissionRelationships struct {

	// direct debit
	DirectDebit *DirectDebitDecisionAdmissionRelationshipsDirectDebit `json:"direct_debit,omitempty"`

	// direct debit decision
	DirectDebitDecision *DirectDebitDecisionAdmissionRelationshipsDirectDebitDecision `json:"direct_debit_decision,omitempty"`
}

func DirectDebitDecisionAdmissionRelationshipsWithDefaults(defaults client.Defaults) *DirectDebitDecisionAdmissionRelationships {
	return &DirectDebitDecisionAdmissionRelationships{

		DirectDebit: DirectDebitDecisionAdmissionRelationshipsDirectDebitWithDefaults(defaults),

		DirectDebitDecision: DirectDebitDecisionAdmissionRelationshipsDirectDebitDecisionWithDefaults(defaults),
	}
}

func (m *DirectDebitDecisionAdmissionRelationships) WithDirectDebit(directDebit DirectDebitDecisionAdmissionRelationshipsDirectDebit) *DirectDebitDecisionAdmissionRelationships {

	m.DirectDebit = &directDebit

	return m
}

func (m *DirectDebitDecisionAdmissionRelationships) WithoutDirectDebit() *DirectDebitDecisionAdmissionRelationships {
	m.DirectDebit = nil
	return m
}

func (m *DirectDebitDecisionAdmissionRelationships) WithDirectDebitDecision(directDebitDecision DirectDebitDecisionAdmissionRelationshipsDirectDebitDecision) *DirectDebitDecisionAdmissionRelationships {

	m.DirectDebitDecision = &directDebitDecision

	return m
}

func (m *DirectDebitDecisionAdmissionRelationships) WithoutDirectDebitDecision() *DirectDebitDecisionAdmissionRelationships {
	m.DirectDebitDecision = nil
	return m
}

// Validate validates this direct debit decision admission relationships
func (m *DirectDebitDecisionAdmissionRelationships) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDirectDebit(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDirectDebitDecision(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DirectDebitDecisionAdmissionRelationships) validateDirectDebit(formats strfmt.Registry) error {

	if swag.IsZero(m.DirectDebit) { // not required
		return nil
	}

	if m.DirectDebit != nil {
		if err := m.DirectDebit.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("direct_debit")
			}
			return err
		}
	}

	return nil
}

func (m *DirectDebitDecisionAdmissionRelationships) validateDirectDebitDecision(formats strfmt.Registry) error {

	if swag.IsZero(m.DirectDebitDecision) { // not required
		return nil
	}

	if m.DirectDebitDecision != nil {
		if err := m.DirectDebitDecision.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("direct_debit_decision")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *DirectDebitDecisionAdmissionRelationships) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DirectDebitDecisionAdmissionRelationships) UnmarshalBinary(b []byte) error {
	var res DirectDebitDecisionAdmissionRelationships
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
func (m *DirectDebitDecisionAdmissionRelationships) Json() string {
	json, err := json.MarshalIndent(m, "  ", "  ")
	if err != nil {
		log.Fatal(err)
	}
	return string(json)
}

// DirectDebitDecisionAdmissionRelationshipsDirectDebit direct debit decision admission relationships direct debit
// swagger:model DirectDebitDecisionAdmissionRelationshipsDirectDebit
type DirectDebitDecisionAdmissionRelationshipsDirectDebit struct {

	// data
	Data []*DirectDebit `json:"data"`
}

func DirectDebitDecisionAdmissionRelationshipsDirectDebitWithDefaults(defaults client.Defaults) *DirectDebitDecisionAdmissionRelationshipsDirectDebit {
	return &DirectDebitDecisionAdmissionRelationshipsDirectDebit{

		Data: make([]*DirectDebit, 0),
	}
}

func (m *DirectDebitDecisionAdmissionRelationshipsDirectDebit) WithData(data []*DirectDebit) *DirectDebitDecisionAdmissionRelationshipsDirectDebit {

	m.Data = data

	return m
}

// Validate validates this direct debit decision admission relationships direct debit
func (m *DirectDebitDecisionAdmissionRelationshipsDirectDebit) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DirectDebitDecisionAdmissionRelationshipsDirectDebit) validateData(formats strfmt.Registry) error {

	if swag.IsZero(m.Data) { // not required
		return nil
	}

	for i := 0; i < len(m.Data); i++ {
		if swag.IsZero(m.Data[i]) { // not required
			continue
		}

		if m.Data[i] != nil {
			if err := m.Data[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("direct_debit" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *DirectDebitDecisionAdmissionRelationshipsDirectDebit) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DirectDebitDecisionAdmissionRelationshipsDirectDebit) UnmarshalBinary(b []byte) error {
	var res DirectDebitDecisionAdmissionRelationshipsDirectDebit
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
func (m *DirectDebitDecisionAdmissionRelationshipsDirectDebit) Json() string {
	json, err := json.MarshalIndent(m, "  ", "  ")
	if err != nil {
		log.Fatal(err)
	}
	return string(json)
}

// DirectDebitDecisionAdmissionRelationshipsDirectDebitDecision direct debit decision admission relationships direct debit decision
// swagger:model DirectDebitDecisionAdmissionRelationshipsDirectDebitDecision
type DirectDebitDecisionAdmissionRelationshipsDirectDebitDecision struct {

	// data
	Data []*DirectDebitDecision `json:"data"`
}

func DirectDebitDecisionAdmissionRelationshipsDirectDebitDecisionWithDefaults(defaults client.Defaults) *DirectDebitDecisionAdmissionRelationshipsDirectDebitDecision {
	return &DirectDebitDecisionAdmissionRelationshipsDirectDebitDecision{

		Data: make([]*DirectDebitDecision, 0),
	}
}

func (m *DirectDebitDecisionAdmissionRelationshipsDirectDebitDecision) WithData(data []*DirectDebitDecision) *DirectDebitDecisionAdmissionRelationshipsDirectDebitDecision {

	m.Data = data

	return m
}

// Validate validates this direct debit decision admission relationships direct debit decision
func (m *DirectDebitDecisionAdmissionRelationshipsDirectDebitDecision) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DirectDebitDecisionAdmissionRelationshipsDirectDebitDecision) validateData(formats strfmt.Registry) error {

	if swag.IsZero(m.Data) { // not required
		return nil
	}

	for i := 0; i < len(m.Data); i++ {
		if swag.IsZero(m.Data[i]) { // not required
			continue
		}

		if m.Data[i] != nil {
			if err := m.Data[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("direct_debit_decision" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *DirectDebitDecisionAdmissionRelationshipsDirectDebitDecision) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DirectDebitDecisionAdmissionRelationshipsDirectDebitDecision) UnmarshalBinary(b []byte) error {
	var res DirectDebitDecisionAdmissionRelationshipsDirectDebitDecision
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
func (m *DirectDebitDecisionAdmissionRelationshipsDirectDebitDecision) Json() string {
	json, err := json.MarshalIndent(m, "  ", "  ")
	if err != nil {
		log.Fatal(err)
	}
	return string(json)
}
