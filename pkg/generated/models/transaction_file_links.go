// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"log"

	"github.com/form3tech-oss/go-form3/v7/pkg/client"
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// TransactionFileLinks transaction file links
// swagger:model TransactionFileLinks
type TransactionFileLinks struct {

	// self
	// Required: true
	Self TransactionFileLink `json:"self"`

	// transaction file links
	// Required: true
	TransactionFileLinks map[string]TransactionFileLink `json:"-"`
}

func TransactionFileLinksWithDefaults(defaults client.Defaults) *TransactionFileLinks {
	return &TransactionFileLinks{

		Self: *TransactionFileLinkWithDefaults(defaults),
	}
}

func (m *TransactionFileLinks) WithSelf(self *TransactionFileLink) *TransactionFileLinks {

	m.Self = *self

	return m
}

// UnmarshalJSON unmarshals this object with additional properties from JSON
func (m *TransactionFileLinks) UnmarshalJSON(data []byte) error {
	// stage 1, bind the properties
	var stage1 struct {

		// self
		// Required: true
		Self TransactionFileLink `json:"self"`
	}
	if err := json.Unmarshal(data, &stage1); err != nil {
		return err
	}
	var rcv TransactionFileLinks

	rcv.Self = stage1.Self

	*m = rcv

	// stage 2, remove properties and add to map
	stage2 := make(map[string]json.RawMessage)
	if err := json.Unmarshal(data, &stage2); err != nil {
		return err
	}

	delete(stage2, "self")

	// stage 3, add additional properties values
	if len(stage2) > 0 {
		result := make(map[string]TransactionFileLink)
		for k, v := range stage2 {
			var toadd TransactionFileLink
			if err := json.Unmarshal(v, &toadd); err != nil {
				return err
			}
			result[k] = toadd
		}
		m.TransactionFileLinks = result
	}

	return nil
}

// MarshalJSON marshals this object with additional properties into a JSON object
func (m TransactionFileLinks) MarshalJSON() ([]byte, error) {
	var stage1 struct {

		// self
		// Required: true
		Self TransactionFileLink `json:"self"`
	}

	stage1.Self = m.Self

	// make JSON object for known properties
	props, err := json.Marshal(stage1)
	if err != nil {
		return nil, err
	}

	if len(m.TransactionFileLinks) == 0 {
		return props, nil
	}

	// make JSON object for the additional properties
	additional, err := json.Marshal(m.TransactionFileLinks)
	if err != nil {
		return nil, err
	}

	if len(props) < 3 {
		return additional, nil
	}

	// concatenate the 2 objects
	props[len(props)-1] = ','
	return append(props, additional[1:]...), nil
}

// Validate validates this transaction file links
func (m *TransactionFileLinks) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateSelf(formats); err != nil {
		res = append(res, err)
	}

	for k := range m.TransactionFileLinks {

		if err := validate.Required(k, "body", m.TransactionFileLinks[k]); err != nil {
			return err
		}
		if val, ok := m.TransactionFileLinks[k]; ok {
			if err := val.Validate(formats); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TransactionFileLinks) validateSelf(formats strfmt.Registry) error {

	if err := m.Self.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("self")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TransactionFileLinks) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TransactionFileLinks) UnmarshalBinary(b []byte) error {
	var res TransactionFileLinks
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
func (m *TransactionFileLinks) Json() string {
	json, err := json.MarshalIndent(m, "  ", "  ")
	if err != nil {
		log.Fatal(err)
	}
	return string(json)
}
