// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"log"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// ClearingChannel Answer to the recall request. Can either be `MPNS`, `RTGS` or `RTNS`.
// swagger:model ClearingChannel
type ClearingChannel string

const (

	// ClearingChannelMPNS captures enum value "MPNS"
	ClearingChannelMPNS ClearingChannel = "MPNS"

	// ClearingChannelRTGS captures enum value "RTGS"
	ClearingChannelRTGS ClearingChannel = "RTGS"

	// ClearingChannelRTNS captures enum value "RTNS"
	ClearingChannelRTNS ClearingChannel = "RTNS"
)

// for schema
var clearingChannelEnum []interface{}

func init() {
	var res []ClearingChannel
	if err := json.Unmarshal([]byte(`["MPNS","RTGS","RTNS"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		clearingChannelEnum = append(clearingChannelEnum, v)
	}
}

func (m ClearingChannel) validateClearingChannelEnum(path, location string, value ClearingChannel) error {
	if err := validate.Enum(path, location, value, clearingChannelEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this clearing channel
func (m ClearingChannel) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateClearingChannelEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ClearingChannel) Json() string {
	json, err := json.MarshalIndent(m, "  ", "  ")
	if err != nil {
		log.Fatal(err)
	}
	return string(json)
}
