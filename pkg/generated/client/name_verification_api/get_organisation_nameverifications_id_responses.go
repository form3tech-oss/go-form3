// Code generated by go-swagger; DO NOT EDIT.

package name_verification_api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/form3tech-oss/go-form3/v7/pkg/generated/models"
)

// GetOrganisationNameverificationsIDReader is a Reader for the GetOrganisationNameverificationsID structure.
type GetOrganisationNameverificationsIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOrganisationNameverificationsIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetOrganisationNameverificationsIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetOrganisationNameverificationsIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetOrganisationNameverificationsIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetOrganisationNameverificationsIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetOrganisationNameverificationsIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetOrganisationNameverificationsIDOK creates a GetOrganisationNameverificationsIDOK with default headers values
func NewGetOrganisationNameverificationsIDOK() *GetOrganisationNameverificationsIDOK {
	return &GetOrganisationNameverificationsIDOK{}
}

/*
GetOrganisationNameverificationsIDOK handles this case with default header values.

Name verification details
*/
type GetOrganisationNameverificationsIDOK struct {

	//Payload

	// isStream: false
	*models.NameVerificationDetailsResponse
}

// IsSuccess returns true when this get organisation nameverifications Id o k response has a 2xx status code
func (o *GetOrganisationNameverificationsIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get organisation nameverifications Id o k response has a 3xx status code
func (o *GetOrganisationNameverificationsIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organisation nameverifications Id o k response has a 4xx status code
func (o *GetOrganisationNameverificationsIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get organisation nameverifications Id o k response has a 5xx status code
func (o *GetOrganisationNameverificationsIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get organisation nameverifications Id o k response a status code equal to that given
func (o *GetOrganisationNameverificationsIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get organisation nameverifications Id o k response
func (o *GetOrganisationNameverificationsIDOK) Code() int {
	return 200
}

func (o *GetOrganisationNameverificationsIDOK) Error() string {
	return fmt.Sprintf("[GET /organisation/nameverifications/{id}][%d] getOrganisationNameverificationsIdOK", 200)
}

func (o *GetOrganisationNameverificationsIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.NameVerificationDetailsResponse = new(models.NameVerificationDetailsResponse)

	// response payload

	if err := consumer.Consume(response.Body(), o.NameVerificationDetailsResponse); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrganisationNameverificationsIDBadRequest creates a GetOrganisationNameverificationsIDBadRequest with default headers values
func NewGetOrganisationNameverificationsIDBadRequest() *GetOrganisationNameverificationsIDBadRequest {
	return &GetOrganisationNameverificationsIDBadRequest{}
}

/*
GetOrganisationNameverificationsIDBadRequest handles this case with default header values.

Bad Request
*/
type GetOrganisationNameverificationsIDBadRequest struct {

	//Payload

	// isStream: false
	*models.APIError
}

// IsSuccess returns true when this get organisation nameverifications Id bad request response has a 2xx status code
func (o *GetOrganisationNameverificationsIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get organisation nameverifications Id bad request response has a 3xx status code
func (o *GetOrganisationNameverificationsIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organisation nameverifications Id bad request response has a 4xx status code
func (o *GetOrganisationNameverificationsIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get organisation nameverifications Id bad request response has a 5xx status code
func (o *GetOrganisationNameverificationsIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get organisation nameverifications Id bad request response a status code equal to that given
func (o *GetOrganisationNameverificationsIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get organisation nameverifications Id bad request response
func (o *GetOrganisationNameverificationsIDBadRequest) Code() int {
	return 400
}

func (o *GetOrganisationNameverificationsIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /organisation/nameverifications/{id}][%d] getOrganisationNameverificationsIdBadRequest", 400)
}

func (o *GetOrganisationNameverificationsIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrganisationNameverificationsIDForbidden creates a GetOrganisationNameverificationsIDForbidden with default headers values
func NewGetOrganisationNameverificationsIDForbidden() *GetOrganisationNameverificationsIDForbidden {
	return &GetOrganisationNameverificationsIDForbidden{}
}

/*
GetOrganisationNameverificationsIDForbidden handles this case with default header values.

Forbidden
*/
type GetOrganisationNameverificationsIDForbidden struct {

	//Payload

	// isStream: false
	*models.APIError
}

// IsSuccess returns true when this get organisation nameverifications Id forbidden response has a 2xx status code
func (o *GetOrganisationNameverificationsIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get organisation nameverifications Id forbidden response has a 3xx status code
func (o *GetOrganisationNameverificationsIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organisation nameverifications Id forbidden response has a 4xx status code
func (o *GetOrganisationNameverificationsIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get organisation nameverifications Id forbidden response has a 5xx status code
func (o *GetOrganisationNameverificationsIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get organisation nameverifications Id forbidden response a status code equal to that given
func (o *GetOrganisationNameverificationsIDForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get organisation nameverifications Id forbidden response
func (o *GetOrganisationNameverificationsIDForbidden) Code() int {
	return 403
}

func (o *GetOrganisationNameverificationsIDForbidden) Error() string {
	return fmt.Sprintf("[GET /organisation/nameverifications/{id}][%d] getOrganisationNameverificationsIdForbidden", 403)
}

func (o *GetOrganisationNameverificationsIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrganisationNameverificationsIDNotFound creates a GetOrganisationNameverificationsIDNotFound with default headers values
func NewGetOrganisationNameverificationsIDNotFound() *GetOrganisationNameverificationsIDNotFound {
	return &GetOrganisationNameverificationsIDNotFound{}
}

/*
GetOrganisationNameverificationsIDNotFound handles this case with default header values.

Not Found
*/
type GetOrganisationNameverificationsIDNotFound struct {

	//Payload

	// isStream: false
	*models.APIError
}

// IsSuccess returns true when this get organisation nameverifications Id not found response has a 2xx status code
func (o *GetOrganisationNameverificationsIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get organisation nameverifications Id not found response has a 3xx status code
func (o *GetOrganisationNameverificationsIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organisation nameverifications Id not found response has a 4xx status code
func (o *GetOrganisationNameverificationsIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get organisation nameverifications Id not found response has a 5xx status code
func (o *GetOrganisationNameverificationsIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get organisation nameverifications Id not found response a status code equal to that given
func (o *GetOrganisationNameverificationsIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get organisation nameverifications Id not found response
func (o *GetOrganisationNameverificationsIDNotFound) Code() int {
	return 404
}

func (o *GetOrganisationNameverificationsIDNotFound) Error() string {
	return fmt.Sprintf("[GET /organisation/nameverifications/{id}][%d] getOrganisationNameverificationsIdNotFound", 404)
}

func (o *GetOrganisationNameverificationsIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrganisationNameverificationsIDInternalServerError creates a GetOrganisationNameverificationsIDInternalServerError with default headers values
func NewGetOrganisationNameverificationsIDInternalServerError() *GetOrganisationNameverificationsIDInternalServerError {
	return &GetOrganisationNameverificationsIDInternalServerError{}
}

/*
GetOrganisationNameverificationsIDInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetOrganisationNameverificationsIDInternalServerError struct {

	//Payload

	// isStream: false
	*models.APIError
}

// IsSuccess returns true when this get organisation nameverifications Id internal server error response has a 2xx status code
func (o *GetOrganisationNameverificationsIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get organisation nameverifications Id internal server error response has a 3xx status code
func (o *GetOrganisationNameverificationsIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organisation nameverifications Id internal server error response has a 4xx status code
func (o *GetOrganisationNameverificationsIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get organisation nameverifications Id internal server error response has a 5xx status code
func (o *GetOrganisationNameverificationsIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get organisation nameverifications Id internal server error response a status code equal to that given
func (o *GetOrganisationNameverificationsIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get organisation nameverifications Id internal server error response
func (o *GetOrganisationNameverificationsIDInternalServerError) Code() int {
	return 500
}

func (o *GetOrganisationNameverificationsIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /organisation/nameverifications/{id}][%d] getOrganisationNameverificationsIdInternalServerError", 500)
}

func (o *GetOrganisationNameverificationsIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}
