// Code generated by go-swagger; DO NOT EDIT.

package name_verification_api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/form3tech-oss/go-form3/v7/pkg/generated/models"
)

// ListNameVerificationsReader is a Reader for the ListNameVerifications structure.
type ListNameVerificationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListNameVerificationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListNameVerificationsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewListNameVerificationsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewListNameVerificationsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewListNameVerificationsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewListNameVerificationsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListNameVerificationsOK creates a ListNameVerificationsOK with default headers values
func NewListNameVerificationsOK() *ListNameVerificationsOK {
	return &ListNameVerificationsOK{}
}

/*
ListNameVerificationsOK handles this case with default header values.

List of name verification details
*/
type ListNameVerificationsOK struct {

	//Payload

	// isStream: false
	*models.NameVerificationDetailsListResponse
}

// IsSuccess returns true when this list name verifications o k response has a 2xx status code
func (o *ListNameVerificationsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list name verifications o k response has a 3xx status code
func (o *ListNameVerificationsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list name verifications o k response has a 4xx status code
func (o *ListNameVerificationsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list name verifications o k response has a 5xx status code
func (o *ListNameVerificationsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list name verifications o k response a status code equal to that given
func (o *ListNameVerificationsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list name verifications o k response
func (o *ListNameVerificationsOK) Code() int {
	return 200
}

func (o *ListNameVerificationsOK) Error() string {
	return fmt.Sprintf("[GET /organisation/nameverifications][%d] listNameVerificationsOK", 200)
}

func (o *ListNameVerificationsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.NameVerificationDetailsListResponse = new(models.NameVerificationDetailsListResponse)

	// response payload

	if err := consumer.Consume(response.Body(), o.NameVerificationDetailsListResponse); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListNameVerificationsBadRequest creates a ListNameVerificationsBadRequest with default headers values
func NewListNameVerificationsBadRequest() *ListNameVerificationsBadRequest {
	return &ListNameVerificationsBadRequest{}
}

/*
ListNameVerificationsBadRequest handles this case with default header values.

Bad Request
*/
type ListNameVerificationsBadRequest struct {

	//Payload

	// isStream: false
	*models.APIError
}

// IsSuccess returns true when this list name verifications bad request response has a 2xx status code
func (o *ListNameVerificationsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list name verifications bad request response has a 3xx status code
func (o *ListNameVerificationsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list name verifications bad request response has a 4xx status code
func (o *ListNameVerificationsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list name verifications bad request response has a 5xx status code
func (o *ListNameVerificationsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list name verifications bad request response a status code equal to that given
func (o *ListNameVerificationsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list name verifications bad request response
func (o *ListNameVerificationsBadRequest) Code() int {
	return 400
}

func (o *ListNameVerificationsBadRequest) Error() string {
	return fmt.Sprintf("[GET /organisation/nameverifications][%d] listNameVerificationsBadRequest", 400)
}

func (o *ListNameVerificationsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListNameVerificationsForbidden creates a ListNameVerificationsForbidden with default headers values
func NewListNameVerificationsForbidden() *ListNameVerificationsForbidden {
	return &ListNameVerificationsForbidden{}
}

/*
ListNameVerificationsForbidden handles this case with default header values.

Forbidden
*/
type ListNameVerificationsForbidden struct {

	//Payload

	// isStream: false
	*models.APIError
}

// IsSuccess returns true when this list name verifications forbidden response has a 2xx status code
func (o *ListNameVerificationsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list name verifications forbidden response has a 3xx status code
func (o *ListNameVerificationsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list name verifications forbidden response has a 4xx status code
func (o *ListNameVerificationsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list name verifications forbidden response has a 5xx status code
func (o *ListNameVerificationsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list name verifications forbidden response a status code equal to that given
func (o *ListNameVerificationsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list name verifications forbidden response
func (o *ListNameVerificationsForbidden) Code() int {
	return 403
}

func (o *ListNameVerificationsForbidden) Error() string {
	return fmt.Sprintf("[GET /organisation/nameverifications][%d] listNameVerificationsForbidden", 403)
}

func (o *ListNameVerificationsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListNameVerificationsNotFound creates a ListNameVerificationsNotFound with default headers values
func NewListNameVerificationsNotFound() *ListNameVerificationsNotFound {
	return &ListNameVerificationsNotFound{}
}

/*
ListNameVerificationsNotFound handles this case with default header values.

Not Found
*/
type ListNameVerificationsNotFound struct {

	//Payload

	// isStream: false
	*models.APIError
}

// IsSuccess returns true when this list name verifications not found response has a 2xx status code
func (o *ListNameVerificationsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list name verifications not found response has a 3xx status code
func (o *ListNameVerificationsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list name verifications not found response has a 4xx status code
func (o *ListNameVerificationsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list name verifications not found response has a 5xx status code
func (o *ListNameVerificationsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list name verifications not found response a status code equal to that given
func (o *ListNameVerificationsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list name verifications not found response
func (o *ListNameVerificationsNotFound) Code() int {
	return 404
}

func (o *ListNameVerificationsNotFound) Error() string {
	return fmt.Sprintf("[GET /organisation/nameverifications][%d] listNameVerificationsNotFound", 404)
}

func (o *ListNameVerificationsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListNameVerificationsInternalServerError creates a ListNameVerificationsInternalServerError with default headers values
func NewListNameVerificationsInternalServerError() *ListNameVerificationsInternalServerError {
	return &ListNameVerificationsInternalServerError{}
}

/*
ListNameVerificationsInternalServerError handles this case with default header values.

Internal Server Error
*/
type ListNameVerificationsInternalServerError struct {

	//Payload

	// isStream: false
	*models.APIError
}

// IsSuccess returns true when this list name verifications internal server error response has a 2xx status code
func (o *ListNameVerificationsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list name verifications internal server error response has a 3xx status code
func (o *ListNameVerificationsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list name verifications internal server error response has a 4xx status code
func (o *ListNameVerificationsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list name verifications internal server error response has a 5xx status code
func (o *ListNameVerificationsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list name verifications internal server error response a status code equal to that given
func (o *ListNameVerificationsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the list name verifications internal server error response
func (o *ListNameVerificationsInternalServerError) Code() int {
	return 500
}

func (o *ListNameVerificationsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /organisation/nameverifications][%d] listNameVerificationsInternalServerError", 500)
}

func (o *ListNameVerificationsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}
