// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"log"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// PostingStatus Displays additional information about the latest response to a transaction, where multiple responses are allowed
// swagger:model PostingStatus
type PostingStatus string

const (

	// PostingStatusRejected captures enum value "rejected"
	PostingStatusRejected PostingStatus = "rejected"

	// PostingStatusPassedWithoutPosting captures enum value "passed_without_posting"
	PostingStatusPassedWithoutPosting PostingStatus = "passed_without_posting"

	// PostingStatusPosted captures enum value "posted"
	PostingStatusPosted PostingStatus = "posted"

	// PostingStatusBlocked captures enum value "blocked"
	PostingStatusBlocked PostingStatus = "blocked"

	// PostingStatusPending captures enum value "pending"
	PostingStatusPending PostingStatus = "pending"

	// PostingStatusAcceptedSettlementComplete captures enum value "accepted_settlement_complete"
	PostingStatusAcceptedSettlementComplete PostingStatus = "accepted_settlement_complete"

	// PostingStatusReceived captures enum value "received"
	PostingStatusReceived PostingStatus = "received"

	// PostingStatusAcceptedFundsChecked captures enum value "accepted_funds_checked"
	PostingStatusAcceptedFundsChecked PostingStatus = "accepted_funds_checked"

	// PostingStatusAcceptedSettlementCompleteCreditorAccount captures enum value "accepted_settlement_complete_creditor_account"
	PostingStatusAcceptedSettlementCompleteCreditorAccount PostingStatus = "accepted_settlement_complete_creditor_account"

	// PostingStatusAcceptedSettlementInProcess captures enum value "accepted_settlement_in_process"
	PostingStatusAcceptedSettlementInProcess PostingStatus = "accepted_settlement_in_process"
)

// for schema
var postingStatusEnum []interface{}

func init() {
	var res []PostingStatus
	if err := json.Unmarshal([]byte(`["rejected","passed_without_posting","posted","blocked","pending","accepted_settlement_complete","received","accepted_funds_checked","accepted_settlement_complete_creditor_account","accepted_settlement_in_process"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		postingStatusEnum = append(postingStatusEnum, v)
	}
}

func (m PostingStatus) validatePostingStatusEnum(path, location string, value PostingStatus) error {
	if err := validate.Enum(path, location, value, postingStatusEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this posting status
func (m PostingStatus) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validatePostingStatusEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PostingStatus) Json() string {
	json, err := json.MarshalIndent(m, "  ", "  ")
	if err != nil {
		log.Fatal(err)
	}
	return string(json)
}
