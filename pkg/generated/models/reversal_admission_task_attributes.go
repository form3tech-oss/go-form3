// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"log"

	"github.com/form3tech-oss/go-form3/v6/pkg/client"
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ReversalAdmissionTaskAttributes reversal admission task attributes
// swagger:model ReversalAdmissionTaskAttributes
type ReversalAdmissionTaskAttributes struct {

	// assignee
	Assignee ReversalAdmissionTaskAssignee `json:"assignee,omitempty"`

	// Identifies the task group the task belongs to
	Group string `json:"group,omitempty"`

	// Identifies the reversal admission task to be executed
	Name string `json:"name,omitempty"`

	// Key Value map that contains the Task result.
	Output map[string]interface{} `json:"output,omitempty"`

	// status
	Status ReversalAdmissionTaskStatus `json:"status,omitempty"`
}

func ReversalAdmissionTaskAttributesWithDefaults(defaults client.Defaults) *ReversalAdmissionTaskAttributes {
	return &ReversalAdmissionTaskAttributes{

		// TODO Assignee: ReversalAdmissionTaskAssignee,

		Group: defaults.GetString("ReversalAdmissionTaskAttributes", "group"),

		Name: defaults.GetString("ReversalAdmissionTaskAttributes", "name"),

		Output: defaults.GetMapStringInterface("ReversalAdmissionTaskAttributes", "output"),

		// TODO Status: ReversalAdmissionTaskStatus,

	}
}

func (m *ReversalAdmissionTaskAttributes) WithAssignee(assignee ReversalAdmissionTaskAssignee) *ReversalAdmissionTaskAttributes {

	m.Assignee = assignee

	return m
}

func (m *ReversalAdmissionTaskAttributes) WithGroup(group string) *ReversalAdmissionTaskAttributes {

	m.Group = group

	return m
}

func (m *ReversalAdmissionTaskAttributes) WithName(name string) *ReversalAdmissionTaskAttributes {

	m.Name = name

	return m
}

func (m *ReversalAdmissionTaskAttributes) WithOutput(output map[string]interface{}) *ReversalAdmissionTaskAttributes {

	m.Output = output

	return m
}

func (m *ReversalAdmissionTaskAttributes) WithStatus(status ReversalAdmissionTaskStatus) *ReversalAdmissionTaskAttributes {

	m.Status = status

	return m
}

// Validate validates this reversal admission task attributes
func (m *ReversalAdmissionTaskAttributes) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAssignee(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ReversalAdmissionTaskAttributes) validateAssignee(formats strfmt.Registry) error {

	if swag.IsZero(m.Assignee) { // not required
		return nil
	}

	if err := m.Assignee.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("assignee")
		}
		return err
	}

	return nil
}

func (m *ReversalAdmissionTaskAttributes) validateStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.Status) { // not required
		return nil
	}

	if err := m.Status.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("status")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ReversalAdmissionTaskAttributes) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ReversalAdmissionTaskAttributes) UnmarshalBinary(b []byte) error {
	var res ReversalAdmissionTaskAttributes
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
func (m *ReversalAdmissionTaskAttributes) Json() string {
	json, err := json.MarshalIndent(m, "  ", "  ")
	if err != nil {
		log.Fatal(err)
	}
	return string(json)
}
