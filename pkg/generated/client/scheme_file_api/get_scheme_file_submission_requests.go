// Code generated by go-swagger; DO NOT EDIT.

package scheme_file_api

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// Client.GetSchemeFileSubmission creates a new GetSchemeFileSubmissionRequest object
// with the default values initialized.
func (c *Client) GetSchemeFileSubmission() *GetSchemeFileSubmissionRequest {
	var ()
	return &GetSchemeFileSubmissionRequest{

		SchemeFileID: c.Defaults.GetStrfmtUUID("GetSchemeFileSubmission", "scheme_file_id"),

		SchemeFileSubmissionID: c.Defaults.GetStrfmtUUID("GetSchemeFileSubmission", "scheme_file_submission_id"),

		timeout: cr.DefaultTimeout,

		transport: c.transport,
		formats:   c.formats,
	}
}

type GetSchemeFileSubmissionRequest struct {

	/*SchemeFileID      Scheme File Id      */

	SchemeFileID strfmt.UUID

	/*SchemeFileSubmissionID      Scheme File Submission Id      */

	SchemeFileSubmissionID strfmt.UUID

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client

	transport runtime.ClientTransport
	formats   strfmt.Registry
}

func (o *GetSchemeFileSubmissionRequest) FromJson(j string) (*GetSchemeFileSubmissionRequest, error) {

	return o, nil
}

func (o *GetSchemeFileSubmissionRequest) WithSchemeFileID(schemeFileID strfmt.UUID) *GetSchemeFileSubmissionRequest {

	o.SchemeFileID = schemeFileID

	return o
}

func (o *GetSchemeFileSubmissionRequest) WithSchemeFileSubmissionID(schemeFileSubmissionID strfmt.UUID) *GetSchemeFileSubmissionRequest {

	o.SchemeFileSubmissionID = schemeFileSubmissionID

	return o
}

//////////////////
// WithContext adds the context to the get scheme file submission Request
func (o *GetSchemeFileSubmissionRequest) WithContext(ctx context.Context) *GetSchemeFileSubmissionRequest {
	o.Context = ctx
	return o
}

// WithHTTPClient adds the HTTPClient to the get scheme file submission Request
func (o *GetSchemeFileSubmissionRequest) WithHTTPClient(client *http.Client) *GetSchemeFileSubmissionRequest {
	o.HTTPClient = client
	return o
}

// WriteToRequest writes these Request to a swagger request
func (o *GetSchemeFileSubmissionRequest) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param scheme_file_id
	if err := r.SetPathParam("scheme_file_id", o.SchemeFileID.String()); err != nil {
		return err
	}

	// path param scheme_file_submission_id
	if err := r.SetPathParam("scheme_file_submission_id", o.SchemeFileSubmissionID.String()); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
