// Code generated by go-swagger; DO NOT EDIT.

package account_request

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/form3tech-oss/go-form3/v2/pkg/generated/models"
)

// GetAccountRequestReader is a Reader for the GetAccountRequest structure.
type GetAccountRequestReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAccountRequestReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetAccountRequestOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetAccountRequestBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetAccountRequestUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetAccountRequestForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetAccountRequestNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetAccountRequestInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 502:
		result := NewGetAccountRequestBadGateway()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetAccountRequestServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 504:
		result := NewGetAccountRequestGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetAccountRequestOK creates a GetAccountRequestOK with default headers values
func NewGetAccountRequestOK() *GetAccountRequestOK {
	return &GetAccountRequestOK{}
}

/*GetAccountRequestOK handles this case with default header values.

Account Request Details
*/
type GetAccountRequestOK struct {

	//Payload

	// isStream: false
	*models.AccountRequestResponse
}

func (o *GetAccountRequestOK) Error() string {
	return fmt.Sprintf("[GET /organisation/accountrequests/{id}][%d] getAccountRequestOK", 200)
}

func (o *GetAccountRequestOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.AccountRequestResponse = new(models.AccountRequestResponse)

	// response payload

	if err := consumer.Consume(response.Body(), o.AccountRequestResponse); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountRequestBadRequest creates a GetAccountRequestBadRequest with default headers values
func NewGetAccountRequestBadRequest() *GetAccountRequestBadRequest {
	return &GetAccountRequestBadRequest{}
}

/*GetAccountRequestBadRequest handles this case with default header values.

Account Request creation error
*/
type GetAccountRequestBadRequest struct {

	//Payload

	// isStream: false
	*models.APIError
}

func (o *GetAccountRequestBadRequest) Error() string {
	return fmt.Sprintf("[GET /organisation/accountrequests/{id}][%d] getAccountRequestBadRequest", 400)
}

func (o *GetAccountRequestBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountRequestUnauthorized creates a GetAccountRequestUnauthorized with default headers values
func NewGetAccountRequestUnauthorized() *GetAccountRequestUnauthorized {
	return &GetAccountRequestUnauthorized{}
}

/*GetAccountRequestUnauthorized handles this case with default header values.

Unauthorized
*/
type GetAccountRequestUnauthorized struct {

	//Payload

	// isStream: false
	*models.APIError
}

func (o *GetAccountRequestUnauthorized) Error() string {
	return fmt.Sprintf("[GET /organisation/accountrequests/{id}][%d] getAccountRequestUnauthorized", 401)
}

func (o *GetAccountRequestUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountRequestForbidden creates a GetAccountRequestForbidden with default headers values
func NewGetAccountRequestForbidden() *GetAccountRequestForbidden {
	return &GetAccountRequestForbidden{}
}

/*GetAccountRequestForbidden handles this case with default header values.

Forbidden
*/
type GetAccountRequestForbidden struct {

	//Payload

	// isStream: false
	*models.APIError
}

func (o *GetAccountRequestForbidden) Error() string {
	return fmt.Sprintf("[GET /organisation/accountrequests/{id}][%d] getAccountRequestForbidden", 403)
}

func (o *GetAccountRequestForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountRequestNotFound creates a GetAccountRequestNotFound with default headers values
func NewGetAccountRequestNotFound() *GetAccountRequestNotFound {
	return &GetAccountRequestNotFound{}
}

/*GetAccountRequestNotFound handles this case with default header values.

Not Found
*/
type GetAccountRequestNotFound struct {

	//Payload

	// isStream: false
	*models.APIError
}

func (o *GetAccountRequestNotFound) Error() string {
	return fmt.Sprintf("[GET /organisation/accountrequests/{id}][%d] getAccountRequestNotFound", 404)
}

func (o *GetAccountRequestNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountRequestInternalServerError creates a GetAccountRequestInternalServerError with default headers values
func NewGetAccountRequestInternalServerError() *GetAccountRequestInternalServerError {
	return &GetAccountRequestInternalServerError{}
}

/*GetAccountRequestInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetAccountRequestInternalServerError struct {

	//Payload

	// isStream: false
	*models.APIError
}

func (o *GetAccountRequestInternalServerError) Error() string {
	return fmt.Sprintf("[GET /organisation/accountrequests/{id}][%d] getAccountRequestInternalServerError", 500)
}

func (o *GetAccountRequestInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountRequestBadGateway creates a GetAccountRequestBadGateway with default headers values
func NewGetAccountRequestBadGateway() *GetAccountRequestBadGateway {
	return &GetAccountRequestBadGateway{}
}

/*GetAccountRequestBadGateway handles this case with default header values.

Bad Gateway
*/
type GetAccountRequestBadGateway struct {

	//Payload

	// isStream: false
	*models.APIError
}

func (o *GetAccountRequestBadGateway) Error() string {
	return fmt.Sprintf("[GET /organisation/accountrequests/{id}][%d] getAccountRequestBadGateway", 502)
}

func (o *GetAccountRequestBadGateway) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountRequestServiceUnavailable creates a GetAccountRequestServiceUnavailable with default headers values
func NewGetAccountRequestServiceUnavailable() *GetAccountRequestServiceUnavailable {
	return &GetAccountRequestServiceUnavailable{}
}

/*GetAccountRequestServiceUnavailable handles this case with default header values.

Service unavailable
*/
type GetAccountRequestServiceUnavailable struct {

	//Payload

	// isStream: false
	*models.APIError
}

func (o *GetAccountRequestServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /organisation/accountrequests/{id}][%d] getAccountRequestServiceUnavailable", 503)
}

func (o *GetAccountRequestServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountRequestGatewayTimeout creates a GetAccountRequestGatewayTimeout with default headers values
func NewGetAccountRequestGatewayTimeout() *GetAccountRequestGatewayTimeout {
	return &GetAccountRequestGatewayTimeout{}
}

/*GetAccountRequestGatewayTimeout handles this case with default header values.

Gateway timeout
*/
type GetAccountRequestGatewayTimeout struct {

	//Payload

	// isStream: false
	*models.APIError
}

func (o *GetAccountRequestGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /organisation/accountrequests/{id}][%d] getAccountRequestGatewayTimeout", 504)
}

func (o *GetAccountRequestGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}
