// Code generated by go-swagger; DO NOT EDIT.

package organisations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/form3tech-oss/go-form3/v7/pkg/generated/models"
)

// ModifyUnitReader is a Reader for the ModifyUnit structure.
type ModifyUnitReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ModifyUnitReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewModifyUnitOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewModifyUnitBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewModifyUnitNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewModifyUnitOK creates a ModifyUnitOK with default headers values
func NewModifyUnitOK() *ModifyUnitOK {
	return &ModifyUnitOK{}
}

/*
ModifyUnitOK handles this case with default header values.

Organisation details
*/
type ModifyUnitOK struct {

	//Payload

	// isStream: false
	*models.OrganisationDetailsResponse
}

func (o *ModifyUnitOK) Error() string {
	return fmt.Sprintf("[PATCH /organisation/units/{id}][%d] modifyUnitOK", 200)
}

func (o *ModifyUnitOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.OrganisationDetailsResponse = new(models.OrganisationDetailsResponse)

	// response payload

	if err := consumer.Consume(response.Body(), o.OrganisationDetailsResponse); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewModifyUnitBadRequest creates a ModifyUnitBadRequest with default headers values
func NewModifyUnitBadRequest() *ModifyUnitBadRequest {
	return &ModifyUnitBadRequest{}
}

/*
ModifyUnitBadRequest handles this case with default header values.

Bad request
*/
type ModifyUnitBadRequest struct {

	//Payload

	// isStream: false
	*models.APIError
}

func (o *ModifyUnitBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /organisation/units/{id}][%d] modifyUnitBadRequest", 400)
}

func (o *ModifyUnitBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewModifyUnitNotFound creates a ModifyUnitNotFound with default headers values
func NewModifyUnitNotFound() *ModifyUnitNotFound {
	return &ModifyUnitNotFound{}
}

/*
ModifyUnitNotFound handles this case with default header values.

Not Found
*/
type ModifyUnitNotFound struct {

	//Payload

	// isStream: false
	*models.APIError
}

func (o *ModifyUnitNotFound) Error() string {
	return fmt.Sprintf("[PATCH /organisation/units/{id}][%d] modifyUnitNotFound", 404)
}

func (o *ModifyUnitNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.APIError = new(models.APIError)

	// response payload

	if err := consumer.Consume(response.Body(), o.APIError); err != nil && err != io.EOF {
		return err
	}

	return nil
}
