// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"log"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// NameVerificationAdmissionAnswer name verification admission answer
// swagger:model NameVerificationAdmissionAnswer
type NameVerificationAdmissionAnswer string

const (

	// NameVerificationAdmissionAnswerConfirmed captures enum value "confirmed"
	NameVerificationAdmissionAnswerConfirmed NameVerificationAdmissionAnswer = "confirmed"

	// NameVerificationAdmissionAnswerRejected captures enum value "rejected"
	NameVerificationAdmissionAnswerRejected NameVerificationAdmissionAnswer = "rejected"
)

// for schema
var nameVerificationAdmissionAnswerEnum []interface{}

func init() {
	var res []NameVerificationAdmissionAnswer
	if err := json.Unmarshal([]byte(`["confirmed","rejected"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		nameVerificationAdmissionAnswerEnum = append(nameVerificationAdmissionAnswerEnum, v)
	}
}

func (m NameVerificationAdmissionAnswer) validateNameVerificationAdmissionAnswerEnum(path, location string, value NameVerificationAdmissionAnswer) error {
	if err := validate.Enum(path, location, value, nameVerificationAdmissionAnswerEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this name verification admission answer
func (m NameVerificationAdmissionAnswer) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateNameVerificationAdmissionAnswerEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *NameVerificationAdmissionAnswer) Json() string {
	json, err := json.MarshalIndent(m, "  ", "  ")
	if err != nil {
		log.Fatal(err)
	}
	return string(json)
}
