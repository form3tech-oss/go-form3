// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"log"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// DirectDebitAdmissionStatus direct debit admission status
// swagger:model DirectDebitAdmissionStatus
type DirectDebitAdmissionStatus string

const (

	// DirectDebitAdmissionStatusConfirmed captures enum value "confirmed"
	DirectDebitAdmissionStatusConfirmed DirectDebitAdmissionStatus = "confirmed"

	// DirectDebitAdmissionStatusFailed captures enum value "failed"
	DirectDebitAdmissionStatusFailed DirectDebitAdmissionStatus = "failed"

	// DirectDebitAdmissionStatusPending captures enum value "pending"
	DirectDebitAdmissionStatusPending DirectDebitAdmissionStatus = "pending"

	// DirectDebitAdmissionStatusLimitCheckPending captures enum value "limit_check_pending"
	DirectDebitAdmissionStatusLimitCheckPending DirectDebitAdmissionStatus = "limit_check_pending"

	// DirectDebitAdmissionStatusLimitCheckPassed captures enum value "limit_check_passed"
	DirectDebitAdmissionStatusLimitCheckPassed DirectDebitAdmissionStatus = "limit_check_passed"
)

// for schema
var directDebitAdmissionStatusEnum []interface{}

func init() {
	var res []DirectDebitAdmissionStatus
	if err := json.Unmarshal([]byte(`["confirmed","failed","pending","limit_check_pending","limit_check_passed"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		directDebitAdmissionStatusEnum = append(directDebitAdmissionStatusEnum, v)
	}
}

func (m DirectDebitAdmissionStatus) validateDirectDebitAdmissionStatusEnum(path, location string, value DirectDebitAdmissionStatus) error {
	if err := validate.Enum(path, location, value, directDebitAdmissionStatusEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this direct debit admission status
func (m DirectDebitAdmissionStatus) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateDirectDebitAdmissionStatusEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DirectDebitAdmissionStatus) Json() string {
	json, err := json.MarshalIndent(m, "  ", "  ")
	if err != nil {
		log.Fatal(err)
	}
	return string(json)
}
